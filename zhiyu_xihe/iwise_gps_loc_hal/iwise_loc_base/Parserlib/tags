!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
A	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
AE	tle.c	36;"	d	file:
ARMODE_CONT	rtklib.h	339;"	d
ARMODE_FIXHOLD	rtklib.h	341;"	d
ARMODE_INST	rtklib.h	340;"	d
ARMODE_OFF	rtklib.h	338;"	d
ARMODE_PPPAR	rtklib.h	342;"	d
ARMODE_PPPAR_ILS	rtklib.h	343;"	d
ARMODE_TCAR	rtklib.h	345;"	d
ARMODE_WLNL	rtklib.h	344;"	d
ARMOPT	options.c	51;"	d	file:
AS2R	rtklib.h	62;"	d
AU	rtklib.h	61;"	d
BNXSYNC1	rcv/binex.c	18;"	d	file:
BNXSYNC1R	rcv/binex.c	23;"	d	file:
BNXSYNC2	rcv/binex.c	19;"	d	file:
BNXSYNC2R	rcv/binex.c	24;"	d	file:
BNXSYNC3	rcv/binex.c	20;"	d	file:
BNXSYNC3R	rcv/binex.c	25;"	d	file:
BNXSYNC4	rcv/binex.c	21;"	d	file:
BNXSYNC4R	rcv/binex.c	26;"	d	file:
CK2	tle.c	37;"	d	file:
CK4	tle.c	38;"	d	file:
CLIGHT	rtklib.h	59;"	d
CLOCK_MONOTONIC_RAW	rtkcmn.c	109;"	d	file:
CODE_L1A	rtklib.h	245;"	d
CODE_L1B	rtklib.h	246;"	d
CODE_L1C	rtklib.h	236;"	d
CODE_L1E	rtklib.h	244;"	d
CODE_L1L	rtklib.h	243;"	d
CODE_L1M	rtklib.h	240;"	d
CODE_L1N	rtklib.h	241;"	d
CODE_L1P	rtklib.h	237;"	d
CODE_L1S	rtklib.h	242;"	d
CODE_L1W	rtklib.h	238;"	d
CODE_L1X	rtklib.h	247;"	d
CODE_L1Y	rtklib.h	239;"	d
CODE_L1Z	rtklib.h	248;"	d
CODE_L2C	rtklib.h	249;"	d
CODE_L2D	rtklib.h	250;"	d
CODE_L2I	rtklib.h	275;"	d
CODE_L2L	rtklib.h	252;"	d
CODE_L2M	rtklib.h	257;"	d
CODE_L2N	rtklib.h	258;"	d
CODE_L2P	rtklib.h	254;"	d
CODE_L2Q	rtklib.h	276;"	d
CODE_L2S	rtklib.h	251;"	d
CODE_L2W	rtklib.h	255;"	d
CODE_L2X	rtklib.h	253;"	d
CODE_L2Y	rtklib.h	256;"	d
CODE_L3I	rtklib.h	279;"	d
CODE_L3Q	rtklib.h	280;"	d
CODE_L3X	rtklib.h	281;"	d
CODE_L5I	rtklib.h	259;"	d
CODE_L5Q	rtklib.h	260;"	d
CODE_L5X	rtklib.h	261;"	d
CODE_L6A	rtklib.h	265;"	d
CODE_L6B	rtklib.h	266;"	d
CODE_L6C	rtklib.h	267;"	d
CODE_L6I	rtklib.h	277;"	d
CODE_L6L	rtklib.h	271;"	d
CODE_L6Q	rtklib.h	278;"	d
CODE_L6S	rtklib.h	270;"	d
CODE_L6X	rtklib.h	268;"	d
CODE_L6Z	rtklib.h	269;"	d
CODE_L7I	rtklib.h	262;"	d
CODE_L7Q	rtklib.h	263;"	d
CODE_L7X	rtklib.h	264;"	d
CODE_L8I	rtklib.h	272;"	d
CODE_L8Q	rtklib.h	273;"	d
CODE_L8X	rtklib.h	274;"	d
CODE_NONE	rtklib.h	235;"	d
COMMENTH	rtklib.h	398;"	d
COPYRIGHT_RTKLIB	rtklib.h	53;"	d
COS_5	ephemeris.c	70;"	d	file:
CRESSYNC	rcv/crescent.c	24;"	d	file:
D	gps_common.h	/^    float  D[NFREQ+NEXOBS]; \/* observation data doppler frequency (Hz) *\/$/;"	m	struct:__anon40
D2R	rtklib.h	57;"	d
DE2RA	tle.c	22;"	d	file:
DEFURASSR	ephemeris.c	76;"	d	file:
DFRQ1_GLO	rtklib.h	80;"	d
DFRQ2_GLO	rtklib.h	82;"	d
DFTOPT	options.c	46;"	d	file:
DLOPT_FORCE	rtklib.h	401;"	d
DLOPT_HOLDERR	rtklib.h	403;"	d
DLOPT_HOLDLST	rtklib.h	404;"	d
DLOPT_KEEPCMP	rtklib.h	402;"	d
DTTOL	rtklib.h	186;"	d
E6A	tle.c	23;"	d	file:
EFACT_CMP	rtklib.h	92;"	d
EFACT_GAL	rtklib.h	90;"	d
EFACT_GLO	rtklib.h	89;"	d
EFACT_GPS	rtklib.h	88;"	d
EFACT_QZS	rtklib.h	91;"	d
EFACT_SBS	rtklib.h	93;"	d
ENMEA_CALLOC_FAILED	rtklib.h	439;"	d
ENMEA_CHECKSUM	rtklib.h	435;"	d
ENMEA_EXTRACT_FIELD	rtklib.h	436;"	d
ENMEA_GGA_INVALID	rtklib.h	438;"	d
ENMEA_GGA_MSG_MISSING	rtklib.h	432;"	d
ENMEA_GGA_MSG_PARSE	rtklib.h	434;"	d
ENMEA_GSV_MSG_MISSING	rtklib.h	431;"	d
ENMEA_GSV_MSG_PARSE	rtklib.h	433;"	d
ENMEA_HEAD	rtklib.h	437;"	d
ENMEA_UNKNOWN	rtklib.h	440;"	d
EPHOPT	options.c	40;"	d	file:
EPHOPT_BRDC	rtklib.h	331;"	d
EPHOPT_LEX	rtklib.h	336;"	d
EPHOPT_PREC	rtklib.h	332;"	d
EPHOPT_SBAS	rtklib.h	333;"	d
EPHOPT_SSRAPC	rtklib.h	334;"	d
EPHOPT_SSRCOM	rtklib.h	335;"	d
ERAW_UBX_CHECKSUM_ERROR	rtklib.h	442;"	d
ERAW_UBX_LENGTH_ERROR	rtklib.h	441;"	d
ERAW_UBX_RXMRAW_LENGTH_ERROR	rtklib.h	443;"	d
ERREPH_GLO	ephemeris.c	72;"	d	file:
EXTERR_CLK	preceph.c	44;"	d	file:
EXTERR_EPH	preceph.c	45;"	d	file:
FE_WGS84	rtklib.h	67;"	d
FI1	rcv/ublox.c	35;"	d	file:
FI2	rcv/ublox.c	36;"	d	file:
FI4	rcv/ublox.c	37;"	d	file:
FILEPATHSEP	rtklib.h	453;"	d
FILEPATHSEP	rtklib.h	460;"	d
FR4	rcv/ublox.c	38;"	d	file:
FR8	rcv/ublox.c	39;"	d	file:
FREQ1	rtklib.h	73;"	d
FREQ1_GLO	rtklib.h	79;"	d
FREQ2	rtklib.h	74;"	d
FREQ2_CMP	rtklib.h	84;"	d
FREQ2_GLO	rtklib.h	81;"	d
FREQ3_GLO	rtklib.h	83;"	d
FREQ5	rtklib.h	75;"	d
FREQ6	rtklib.h	76;"	d
FREQ6_CMP	rtklib.h	86;"	d
FREQ7	rtklib.h	77;"	d
FREQ7_CMP	rtklib.h	85;"	d
FREQ8	rtklib.h	78;"	d
FREQTYPE_ALL	rtklib.h	233;"	d
FREQTYPE_L1	rtklib.h	227;"	d
FREQTYPE_L2	rtklib.h	228;"	d
FREQTYPE_L5	rtklib.h	229;"	d
FREQTYPE_L6	rtklib.h	230;"	d
FREQTYPE_L7	rtklib.h	231;"	d
FREQTYPE_L8	rtklib.h	232;"	d
FRQOPT	options.c	36;"	d	file:
FS32	rcv/ublox.c	40;"	d	file:
FTP_CMD	download.c	23;"	d	file:
FTP_CMD	stream.c	80;"	d	file:
FTP_LISTING	download.c	25;"	d	file:
FTP_NOFILE	download.c	26;"	d	file:
FTP_RETRY	download.c	28;"	d	file:
FTP_TIMEOUT	download.c	24;"	d	file:
FTP_TIMEOUT	stream.c	81;"	d	file:
FU1	rcv/ublox.c	32;"	d	file:
FU2	rcv/ublox.c	33;"	d	file:
FU4	rcv/ublox.c	34;"	d	file:
GAROPT	options.c	42;"	d	file:
GEOID_EGM2008_M10	rtklib.h	395;"	d
GEOID_EGM2008_M25	rtklib.h	394;"	d
GEOID_EGM96_M150	rtklib.h	393;"	d
GEOID_EMBEDDED	rtklib.h	392;"	d
GEOID_GSI2000_M15	rtklib.h	396;"	d
GEOOPT	options.c	48;"	d	file:
GLOG	rtklib.h	470;"	d
GLOG	rtklib.h	472;"	d
GPS_MAX_SVS	rtklib.h	445;"	d
GW10SYNC	rcv/gw10.c	16;"	d	file:
G_DEBUG	rtklib.h	468;"	d
HEADKML1	convkml.c	31;"	d	file:
HEADKML2	convkml.c	32;"	d	file:
HGTOPT	options.c	47;"	d	file:
HION	rtklib.h	69;"	d
HTTP_NOFILE	download.c	27;"	d	file:
I1	rcv/binex.c	37;"	d	file:
I1	rcv/crescent.c	40;"	d	file:
I1	rcv/gw10.c	50;"	d	file:
I1	rcv/javad.c	35;"	d	file:
I1	rcv/novatel.c	93;"	d	file:
I1	rcv/nvs.c	39;"	d	file:
I1	rcv/rcvlex.c	31;"	d	file:
I1	rcv/skytraq.c	43;"	d	file:
I1	rcv/ublox.c	46;"	d	file:
I2	rcv/crescent.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I2	rcv/javad.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I2	rcv/nvs.c	/^static short          I2(unsigned char *p) {short          i; memcpy(&i,p,2); return i;}$/;"	f	file:
I4	rcv/binex.c	/^static int I4(unsigned char *p)$/;"	f	file:
I4	rcv/crescent.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/javad.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/novatel.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
I4	rcv/nvs.c	/^static int            I4(unsigned char *p) {int            i; memcpy(&i,p,4); return i;}$/;"	f	file:
ID_ALMANAC	rcv/novatel.c	54;"	d	file:
ID_ALMB	rcv/novatel.c	75;"	d	file:
ID_CFGFMT	rcv/skytraq.c	36;"	d	file:
ID_CFGRATE	rcv/skytraq.c	37;"	d	file:
ID_CFGSERI	rcv/skytraq.c	35;"	d	file:
ID_CRESEPH	rcv/crescent.c	30;"	d	file:
ID_CRESIONUTC	rcv/crescent.c	29;"	d	file:
ID_CRESPOS	rcv/crescent.c	26;"	d	file:
ID_CRESRAW	rcv/crescent.c	31;"	d	file:
ID_CRESRAW2	rcv/crescent.c	27;"	d	file:
ID_CRESWAAS	rcv/crescent.c	28;"	d	file:
ID_FRMB	rcv/novatel.c	78;"	d	file:
ID_GALALMANAC	rcv/novatel.c	69;"	d	file:
ID_GALCLOCK	rcv/novatel.c	70;"	d	file:
ID_GALEPHEMERIS	rcv/novatel.c	68;"	d	file:
ID_GALFNAVRAWPAGE	rcv/novatel.c	72;"	d	file:
ID_GALINAVRAWWORD	rcv/novatel.c	73;"	d	file:
ID_GALIONO	rcv/novatel.c	71;"	d	file:
ID_GLOALMANAC	rcv/novatel.c	55;"	d	file:
ID_GLOEPHEMERIS	rcv/novatel.c	56;"	d	file:
ID_GW10ALM	rcv/gw10.c	27;"	d	file:
ID_GW10DGPS	rcv/gw10.c	21;"	d	file:
ID_GW10EPH	rcv/gw10.c	26;"	d	file:
ID_GW10GPS	rcv/gw10.c	19;"	d	file:
ID_GW10ION	rcv/gw10.c	28;"	d	file:
ID_GW10RAW	rcv/gw10.c	18;"	d	file:
ID_GW10REF	rcv/gw10.c	22;"	d	file:
ID_GW10REPH	rcv/gw10.c	29;"	d	file:
ID_GW10SATH	rcv/gw10.c	24;"	d	file:
ID_GW10SATO	rcv/gw10.c	25;"	d	file:
ID_GW10SBS	rcv/gw10.c	20;"	d	file:
ID_GW10SOL	rcv/gw10.c	23;"	d	file:
ID_IONB	rcv/novatel.c	76;"	d	file:
ID_IONUTC	rcv/novatel.c	57;"	d	file:
ID_LEXMSG	rcv/rcvlex.c	25;"	d	file:
ID_LEXRAW	rcv/rcvlex.c	24;"	d	file:
ID_QZSSIONUTC	rcv/novatel.c	64;"	d	file:
ID_QZSSRAWEPHEM	rcv/novatel.c	65;"	d	file:
ID_QZSSRAWSUBFRAME	rcv/novatel.c	66;"	d	file:
ID_RALB	rcv/novatel.c	79;"	d	file:
ID_RANGE	rcv/novatel.c	58;"	d	file:
ID_RANGECMP	rcv/novatel.c	59;"	d	file:
ID_RASB	rcv/novatel.c	80;"	d	file:
ID_RAWALM	rcv/novatel.c	60;"	d	file:
ID_RAWEPHEM	rcv/novatel.c	61;"	d	file:
ID_RAWSBASFRAME	rcv/novatel.c	67;"	d	file:
ID_RAWWAASFRAME	rcv/novatel.c	62;"	d	file:
ID_REPB	rcv/novatel.c	81;"	d	file:
ID_RESTART	rcv/skytraq.c	34;"	d	file:
ID_RGEB	rcv/novatel.c	82;"	d	file:
ID_RGED	rcv/novatel.c	83;"	d	file:
ID_RXMRAW	rcv/ublox.c	30;"	d	file:
ID_RXMSFRB	rcv/ublox.c	31;"	d	file:
ID_SS2ECEF	rcv/ss2.c	23;"	d	file:
ID_SS2EPH	rcv/ss2.c	24;"	d	file:
ID_SS2LLH	rcv/ss2.c	22;"	d	file:
ID_SS2RAW	rcv/ss2.c	25;"	d	file:
ID_SS2SBAS	rcv/ss2.c	26;"	d	file:
ID_STQGLOSTR	rcv/skytraq.c	33;"	d	file:
ID_STQRAW	rcv/skytraq.c	31;"	d	file:
ID_STQSFRB	rcv/skytraq.c	32;"	d	file:
ID_STQTIME	rcv/skytraq.c	30;"	d	file:
ID_UTCB	rcv/novatel.c	77;"	d	file:
ID_X02RATEPVT	rcv/nvs.c	30;"	d	file:
ID_X4AIONO	rcv/nvs.c	24;"	d	file:
ID_X4BTIME	rcv/nvs.c	25;"	d	file:
ID_XD5BIT	rcv/nvs.c	33;"	d	file:
ID_XD7ADVANCED	rcv/nvs.c	29;"	d	file:
ID_XD7SMOOTH	rcv/nvs.c	32;"	d	file:
ID_XE5BIT	rcv/nvs.c	27;"	d	file:
ID_XF4RATERAW	rcv/nvs.c	31;"	d	file:
ID_XF5RAW	rcv/nvs.c	23;"	d	file:
ID_XF7EPH	rcv/nvs.c	26;"	d	file:
IONOOPT_BRDC	rtklib.h	314;"	d
IONOOPT_EST	rtklib.h	317;"	d
IONOOPT_IFLC	rtklib.h	316;"	d
IONOOPT_LEX	rtklib.h	320;"	d
IONOOPT_OFF	rtklib.h	313;"	d
IONOOPT_QZS	rtklib.h	319;"	d
IONOOPT_SBAS	rtklib.h	315;"	d
IONOOPT_STEC	rtklib.h	321;"	d
IONOOPT_TEC	rtklib.h	318;"	d
IONOPT	options.c	38;"	d	file:
ISHEX	rcv/javad.c	30;"	d	file:
ISTXT	rcv/javad.c	29;"	d	file:
J2_GLO	ephemeris.c	63;"	d	file:
KNOT2M	solution.c	54;"	d	file:
L	gps_common.h	/^    double L[NFREQ+NEXOBS]; \/* observation data carrier-phase (cycle) *\/$/;"	m	struct:__anon40
LAPACK	rtkcmn.c	298;"	d	file:
LC	rtklib.h	/^    double LC [4];      \/* linear combination average *\/$/;"	m	struct:__anon92
LCv	rtklib.h	/^    double LCv[4];      \/* linear combination variance *\/$/;"	m	struct:__anon92
LD	lambda.c	/^static int LD(int n, const double *Q, double *L, double *D)$/;"	f	file:
LEN_GW10ALM	rcv/gw10.c	40;"	d	file:
LEN_GW10DGPS	rcv/gw10.c	34;"	d	file:
LEN_GW10EPH	rcv/gw10.c	39;"	d	file:
LEN_GW10GPS	rcv/gw10.c	32;"	d	file:
LEN_GW10ION	rcv/gw10.c	41;"	d	file:
LEN_GW10RAW	rcv/gw10.c	31;"	d	file:
LEN_GW10REF	rcv/gw10.c	35;"	d	file:
LEN_GW10REPH	rcv/gw10.c	42;"	d	file:
LEN_GW10SATH	rcv/gw10.c	37;"	d	file:
LEN_GW10SATO	rcv/gw10.c	38;"	d	file:
LEN_GW10SBS	rcv/gw10.c	33;"	d	file:
LEN_GW10SOL	rcv/gw10.c	36;"	d	file:
LEXEPHMAXAGE	qzslex.c	22;"	d	file:
LEXFRMLEN	qzslex.c	19;"	d	file:
LEXFRMPREAMB	qzslex.c	21;"	d	file:
LEXFRMPREAMB	rcv/rcvlex.c	17;"	d	file:
LEXHEADLEN	qzslex.c	26;"	d	file:
LEXIONMAXAGE	qzslex.c	23;"	d	file:
LEXRSLEN	qzslex.c	20;"	d	file:
LEXRSYNC1	rcv/rcvlex.c	19;"	d	file:
LEXRSYNC2	rcv/rcvlex.c	20;"	d	file:
LLI	gps_common.h	/^    unsigned char LLI [NFREQ+NEXOBS]; \/* loss of lock indicator *\/$/;"	m	struct:__anon40
LOCAL_CFLAGS	Android.mk	/^LOCAL_CFLAGS := -Wmissing-field-initializers$/;"	m
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := librtklib$/;"	m
LOCAL_MODULE_PATH	Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_SHARED_LIBRARIES)\/$/;"	m
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := optional$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SHARED_LIBRARIES	Android.mk	/^LOCAL_SHARED_LIBRARIES := liblog libcutils$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := $(RTKLIB)$/;"	m
LOOPMAX	lambda.c	23;"	d	file:
M	rtklib.h	/^    double M;           \/* mean anomaly (deg) *\/$/;"	m	struct:__anon72
M0	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
M0	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
MARKICON	convkml.c	33;"	d	file:
MAXAGESSR	ephemeris.c	79;"	d	file:
MAXAGESSR_HRCLK	ephemeris.c	80;"	d	file:
MAXANT	gps_common.h	88;"	d
MAXANT	rtklib.h	212;"	d
MAXBAND	gps_common.h	91;"	d
MAXBAND	rtklib.h	201;"	d
MAXCCORSSR	ephemeris.c	78;"	d	file:
MAXCLI	stream.c	65;"	d	file:
MAXCODE	gps_common.h	90;"	d
MAXCODE	rtklib.h	282;"	d
MAXCOMMENT	rtklib.h	204;"	d
MAXDTE	preceph.c	43;"	d	file:
MAXDTOE	rtklib.h	190;"	d
MAXDTOE_GLO	rtklib.h	192;"	d
MAXDTOE_S	rtklib.h	194;"	d
MAXDTOE_SBS	rtklib.h	193;"	d
MAXECORSSR	ephemeris.c	77;"	d	file:
MAXERRMSG	rtklib.h	211;"	d
MAXEXFILE	rtklib.h	197;"	d
MAXFIELD	solution.c	51;"	d	file:
MAXFREQ	rtklib.h	71;"	d
MAXFREQ_GLO	rinex.c	89;"	d	file:
MAXFREQ_GLO	rinex_s.c	89;"	d	file:
MAXGDOP	rtklib.h	195;"	d
MAXLEXRLEN	rcv/rcvlex.c	22;"	d	file:
MAXNGEO	rtklib.h	203;"	d
MAXNIGP	gps_common.h	89;"	d
MAXNIGP	rtklib.h	202;"	d
MAXNMEA	solution.c	52;"	d	file:
MAXNRPOS	rtklib.h	216;"	d
MAXOBS	rtklib.h	182;"	d
MAXOBSBUF	rtklib.h	215;"	d
MAXOBSTYPE	rtklib.h	185;"	d
MAXPOSHEAD	rinex.c	87;"	d	file:
MAXPOSHEAD	rinex_s.c	87;"	d	file:
MAXPRM	datum.c	14;"	d	file:
MAXPRNCMP	gps_common.h	62;"	d
MAXPRNCMP	gps_common.h	67;"	d
MAXPRNCMP	rtklib.h	164;"	d
MAXPRNCMP	rtklib.h	169;"	d
MAXPRNGAL	gps_common.h	35;"	d
MAXPRNGAL	gps_common.h	40;"	d
MAXPRNGAL	rtklib.h	138;"	d
MAXPRNGAL	rtklib.h	143;"	d
MAXPRNGLO	gps_common.h	24;"	d
MAXPRNGLO	gps_common.h	29;"	d
MAXPRNGLO	rtklib.h	127;"	d
MAXPRNGLO	rtklib.h	132;"	d
MAXPRNGPS	gps_common.h	18;"	d
MAXPRNGPS	rtklib.h	121;"	d
MAXPRNQZS	gps_common.h	46;"	d
MAXPRNQZS	gps_common.h	53;"	d
MAXPRNQZS	rtklib.h	149;"	d
MAXPRNQZS	rtklib.h	156;"	d
MAXPRNQZS_S	gps_common.h	48;"	d
MAXPRNQZS_S	rtklib.h	151;"	d
MAXPRNSBS	gps_common.h	74;"	d
MAXPRNSBS	rtklib.h	176;"	d
MAXRAWLEN	rtklib.h	210;"	d
MAXRCV	rtklib.h	184;"	d
MAXRCVFMT	rtklib.h	383;"	d
MAXRCVFMT	rtklib.h	385;"	d
MAXRNXLEN	rinex.c	86;"	d	file:
MAXRNXLEN	rinex_s.c	86;"	d	file:
MAXSAT	gps_common.h	77;"	d
MAXSAT	rtklib.h	179;"	d
MAXSBSAGEF	rtklib.h	198;"	d
MAXSBSAGEL	rtklib.h	199;"	d
MAXSBSMSG	rtklib.h	208;"	d
MAXSBSURA	rtklib.h	200;"	d
MAXSOLBUF	rtklib.h	213;"	d
MAXSOLMSG	rtklib.h	209;"	d
MAXSOLQ	rtklib.h	307;"	d
MAXSTATMSG	stream.c	66;"	d	file:
MAXSTRMSG	rtklib.h	206;"	d
MAXSTRPATH	rtklib.h	205;"	d
MAXSTRRTK	rtklib.h	207;"	d
MAXVAL	rcv/novatel.c	87;"	d	file:
MIN	rcv/binex.c	28;"	d	file:
MIN	rtcm3e.c	35;"	d	file:
MINFREQ_GLO	rinex.c	88;"	d	file:
MINFREQ_GLO	rinex_s.c	88;"	d	file:
MINPRNCMP	gps_common.h	61;"	d
MINPRNCMP	gps_common.h	66;"	d
MINPRNCMP	rtklib.h	163;"	d
MINPRNCMP	rtklib.h	168;"	d
MINPRNGAL	gps_common.h	34;"	d
MINPRNGAL	gps_common.h	39;"	d
MINPRNGAL	rtklib.h	137;"	d
MINPRNGAL	rtklib.h	142;"	d
MINPRNGLO	gps_common.h	23;"	d
MINPRNGLO	gps_common.h	28;"	d
MINPRNGLO	rtklib.h	126;"	d
MINPRNGLO	rtklib.h	131;"	d
MINPRNGPS	gps_common.h	17;"	d
MINPRNGPS	rtklib.h	120;"	d
MINPRNQZS	gps_common.h	45;"	d
MINPRNQZS	gps_common.h	52;"	d
MINPRNQZS	rtklib.h	148;"	d
MINPRNQZS	rtklib.h	155;"	d
MINPRNQZS_S	gps_common.h	47;"	d
MINPRNQZS_S	gps_common.h	55;"	d
MINPRNQZS_S	rtklib.h	150;"	d
MINPRNQZS_S	rtklib.h	158;"	d
MINPRNSBS	gps_common.h	73;"	d
MINPRNSBS	rtklib.h	175;"	d
MIN_EL	ionex.c	25;"	d	file:
MIN_HGT	ionex.c	26;"	d	file:
MODOPT	options.c	35;"	d	file:
MSG_DISCONN	rtklib.h	399;"	d
MU_CMP	ephemeris.c	62;"	d	file:
MU_GAL	ephemeris.c	61;"	d	file:
MU_GLO	ephemeris.c	60;"	d	file:
MU_GPS	ephemeris.c	59;"	d	file:
NAVOPT	options.c	41;"	d	file:
NEXOBS	gps_common.h	86;"	d
NEXOBS	rtklib.h	117;"	d
NFREQ	gps_common.h	81;"	d
NFREQ	rtklib.h	112;"	d
NFREQGLO	gps_common.h	83;"	d
NFREQGLO	rtklib.h	114;"	d
NINCOBS	rinex.c	90;"	d	file:
NINCOBS	rinex_s.c	90;"	d	file:
NMAX	preceph.c	42;"	d	file:
NMAX_STA	download.c	19;"	d	file:
NMAX_TYPE	download.c	20;"	d	file:
NMAX_URL	download.c	21;"	d	file:
NSATCMP	gps_common.h	63;"	d
NSATCMP	gps_common.h	68;"	d
NSATCMP	rtklib.h	165;"	d
NSATCMP	rtklib.h	170;"	d
NSATGAL	gps_common.h	36;"	d
NSATGAL	gps_common.h	41;"	d
NSATGAL	rtklib.h	139;"	d
NSATGAL	rtklib.h	144;"	d
NSATGLO	gps_common.h	25;"	d
NSATGLO	gps_common.h	30;"	d
NSATGLO	rtklib.h	128;"	d
NSATGLO	rtklib.h	133;"	d
NSATGPS	gps_common.h	19;"	d
NSATGPS	rtklib.h	122;"	d
NSATQZS	gps_common.h	49;"	d
NSATQZS	gps_common.h	56;"	d
NSATQZS	rtklib.h	152;"	d
NSATQZS	rtklib.h	159;"	d
NSATSBS	gps_common.h	75;"	d
NSATSBS	rtklib.h	177;"	d
NSYS	gps_common.h	71;"	d
NSYS	rtklib.h	173;"	d
NSYSCMP	gps_common.h	64;"	d
NSYSCMP	gps_common.h	69;"	d
NSYSCMP	rtklib.h	166;"	d
NSYSCMP	rtklib.h	171;"	d
NSYSGAL	gps_common.h	37;"	d
NSYSGAL	gps_common.h	42;"	d
NSYSGAL	rtklib.h	140;"	d
NSYSGAL	rtklib.h	145;"	d
NSYSGLO	gps_common.h	26;"	d
NSYSGLO	gps_common.h	31;"	d
NSYSGLO	rtklib.h	129;"	d
NSYSGLO	rtklib.h	134;"	d
NSYSGPS	gps_common.h	20;"	d
NSYSGPS	rtklib.h	123;"	d
NSYSQZS	gps_common.h	50;"	d
NSYSQZS	gps_common.h	57;"	d
NSYSQZS	rtklib.h	153;"	d
NSYSQZS	rtklib.h	160;"	d
NTRIP_AGENT	stream.c	68;"	d	file:
NTRIP_CLI_PORT	stream.c	69;"	d	file:
NTRIP_MAXRSP	stream.c	71;"	d	file:
NTRIP_MAXSTR	stream.c	72;"	d	file:
NTRIP_RSP_ERROR	stream.c	78;"	d	file:
NTRIP_RSP_HTTP	stream.c	77;"	d	file:
NTRIP_RSP_OK_CLI	stream.c	73;"	d	file:
NTRIP_RSP_OK_SVR	stream.c	74;"	d	file:
NTRIP_RSP_SRCTBL	stream.c	75;"	d	file:
NTRIP_RSP_TBLEND	stream.c	76;"	d	file:
NTRIP_SVR_PORT	stream.c	70;"	d	file:
NUMSYS	rinex.c	85;"	d	file:
NUMSYS	rinex_s.c	85;"	d	file:
NVSCFG	rcv/nvs.c	21;"	d	file:
NVSENDMSG	rcv/nvs.c	20;"	d	file:
NVSSYNC	rcv/nvs.c	19;"	d	file:
OBSTYPE_ALL	rtklib.h	225;"	d
OBSTYPE_CP	rtklib.h	222;"	d
OBSTYPE_DOP	rtklib.h	223;"	d
OBSTYPE_PR	rtklib.h	221;"	d
OBSTYPE_SNR	rtklib.h	224;"	d
OEM3HLEN	rcv/novatel.c	52;"	d	file:
OEM3SYNC1	rcv/novatel.c	47;"	d	file:
OEM3SYNC2	rcv/novatel.c	48;"	d	file:
OEM3SYNC3	rcv/novatel.c	49;"	d	file:
OEM4HLEN	rcv/novatel.c	51;"	d	file:
OEM4SYNC1	rcv/novatel.c	44;"	d	file:
OEM4SYNC2	rcv/novatel.c	45;"	d	file:
OEM4SYNC3	rcv/novatel.c	46;"	d	file:
OFFWEEK	rcv/gw10.c	44;"	d	file:
OFF_FRQNO	rcv/novatel.c	89;"	d	file:
OMG	rtklib.h	/^    double OMG;         \/* right ascension of ascending node (deg) *\/$/;"	m	struct:__anon72
OMG0	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
OMG0	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
OMGE	rtklib.h	64;"	d
OMGE_CMP	ephemeris.c	67;"	d	file:
OMGE_GAL	ephemeris.c	66;"	d	file:
OMGE_GLO	ephemeris.c	65;"	d	file:
OMGd	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
OMGd	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
P	gps_common.h	/^    double P[NFREQ+NEXOBS]; \/* observation data pseudorange (m) *\/$/;"	m	struct:__anon40
P	rtklib.h	/^    double *x, *P;      \/* float states and their covariance *\/$/;"	m	struct:__anon93
P2_10	rtcm3.c	31;"	d	file:
P2_10	rtcm3e.c	28;"	d	file:
P2_11	rtklib.h	408;"	d
P2_15	rtklib.h	409;"	d
P2_17	rtklib.h	410;"	d
P2_19	rtklib.h	411;"	d
P2_20	rtklib.h	412;"	d
P2_21	rtklib.h	413;"	d
P2_23	rtklib.h	414;"	d
P2_24	rtklib.h	415;"	d
P2_27	rtklib.h	416;"	d
P2_29	rtklib.h	417;"	d
P2_30	rtklib.h	418;"	d
P2_31	rtklib.h	419;"	d
P2_32	rtklib.h	420;"	d
P2_33	rtklib.h	421;"	d
P2_34	rtcm3.c	32;"	d	file:
P2_34	rtcm3e.c	29;"	d	file:
P2_35	rtklib.h	422;"	d
P2_38	rtklib.h	423;"	d
P2_39	rtklib.h	424;"	d
P2_40	rtklib.h	425;"	d
P2_43	rtklib.h	426;"	d
P2_46	rtcm3.c	33;"	d	file:
P2_46	rtcm3e.c	30;"	d	file:
P2_48	rtklib.h	427;"	d
P2_5	rtklib.h	406;"	d
P2_50	rtklib.h	428;"	d
P2_55	rtklib.h	429;"	d
P2_59	rtcm3.c	34;"	d	file:
P2_59	rtcm3e.c	31;"	d	file:
P2_6	rtklib.h	407;"	d
PI	rtklib.h	56;"	d
PIO2	tle.c	24;"	d	file:
PMODE_DGPS	rtklib.h	285;"	d
PMODE_FIXED	rtklib.h	289;"	d
PMODE_KINEMA	rtklib.h	286;"	d
PMODE_MOVEB	rtklib.h	288;"	d
PMODE_PPP_FIXED	rtklib.h	292;"	d
PMODE_PPP_KINEMA	rtklib.h	290;"	d
PMODE_PPP_STATIC	rtklib.h	291;"	d
PMODE_SINGLE	rtklib.h	284;"	d
PMODE_STATIC	rtklib.h	287;"	d
POLYCRC24Q	rtkcmn.c	112;"	d	file:
POLYCRC32	rtkcmn.c	111;"	d	file:
POSOPT	options.c	52;"	d	file:
PRUNIT_GLO	rtcm3.c	28;"	d	file:
PRUNIT_GLO	rtcm3e.c	26;"	d	file:
PRUNIT_GPS	rtcm3.c	27;"	d	file:
PRUNIT_GPS	rtcm3e.c	25;"	d	file:
Pa	rtklib.h	/^    double *xa,*Pa;     \/* fixed states and their covariance *\/$/;"	m	struct:__anon93
QO	tle.c	25;"	d	file:
QOMS2T	tle.c	39;"	d	file:
R2D	rtklib.h	58;"	d
R4	rcv/binex.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/crescent.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/javad.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/novatel.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/nvs.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R4	rcv/rcvlex.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/skytraq.c	/^static float R4(unsigned char *p)$/;"	f	file:
R4	rcv/ublox.c	/^static float          R4(unsigned char *p) {float          r; memcpy(&r,p,4); return r;}$/;"	f	file:
R8	rcv/binex.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/crescent.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/gw10.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/javad.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/novatel.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/nvs.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/rcvlex.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/skytraq.c	/^static double R8(unsigned char *p)$/;"	f	file:
R8	rcv/ss2.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
R8	rcv/ublox.c	/^static double         R8(unsigned char *p) {double         r; memcpy(&r,p,8); return r;}$/;"	f	file:
RANGE_MS	rtcm3.c	29;"	d	file:
RANGE_MS	rtcm3e.c	27;"	d	file:
RE_GLO	ephemeris.c	58;"	d	file:
RE_WGS84	rtklib.h	66;"	d
RNX2VER	rtklib.h	218;"	d
RNX3VER	rtklib.h	219;"	d
ROT_LEFT	rcv/javad.c	31;"	d	file:
ROUND	lambda.c	26;"	d	file:
ROUND	rtcm3e.c	33;"	d	file:
ROUND_U	rtcm3e.c	34;"	d	file:
RTCM2PREAMB	rtcm.c	52;"	d	file:
RTCM3PREAMB	qzslex.c	24;"	d	file:
RTCM3PREAMB	rtcm.c	53;"	d	file:
RTKLIB	Android.mk	/^RTKLIB := $(RTKLIB:$(LOCAL_PATH)\/%=%)$/;"	m
RTKLIB	Android.mk	/^RTKLIB :=$(wildcard $(LOCAL_PATH)\/*.c)$/;"	m
RTKLIB_H	rtklib.h	29;"	d
RTOL_KEPLER	ephemeris.c	74;"	d	file:
Rx	rtkcmn.c	1676;"	d	file:
Ry	rtkcmn.c	1681;"	d	file:
Rz	rtkcmn.c	1686;"	d	file:
S	tle.c	40;"	d	file:
SBSOPT_FCORR	rtklib.h	348;"	d
SBSOPT_ICORR	rtklib.h	349;"	d
SBSOPT_LCORR	rtklib.h	347;"	d
SBSOPT_RANGE	rtklib.h	350;"	d
SC2RAD	rtklib.h	60;"	d
SERIBUFFSIZE	stream.c	63;"	d	file:
SGN	lambda.c	25;"	d	file:
SGP4_STR3	tle.c	/^static void SGP4_STR3(double tsince, const tled_t *data, double *rs)$/;"	f	file:
SIN_5	ephemeris.c	69;"	d	file:
SIZP	convkml.c	28;"	d	file:
SIZR	convkml.c	29;"	d	file:
SNR	gps_common.h	/^    unsigned char SNR [NFREQ+NEXOBS]; \/* signal strength (0.25 dBHz) *\/$/;"	m	struct:__anon40
SNR2CN0_L1	rcv/crescent.c	33;"	d	file:
SNR2CN0_L2	rcv/crescent.c	34;"	d	file:
SO	tle.c	26;"	d	file:
SOLF_ENU	rtklib.h	296;"	d
SOLF_GSIF	rtklib.h	298;"	d
SOLF_LLH	rtklib.h	294;"	d
SOLF_NMEA	rtklib.h	297;"	d
SOLF_XYZ	rtklib.h	295;"	d
SOLOPT	options.c	43;"	d	file:
SOLQ_DGPS	rtklib.h	303;"	d
SOLQ_DR	rtklib.h	306;"	d
SOLQ_FIX	rtklib.h	300;"	d
SOLQ_FLOAT	rtklib.h	301;"	d
SOLQ_NONE	rtklib.h	299;"	d
SOLQ_PPP	rtklib.h	305;"	d
SOLQ_SBAS	rtklib.h	302;"	d
SOLQ_SINGLE	rtklib.h	304;"	d
SQR	ephemeris.c	56;"	d	file:
SQR	ionex.c	23;"	d	file:
SQR	preceph.c	40;"	d	file:
SQR	rinex.c	83;"	d	file:
SQR	rinex_s.c	83;"	d	file:
SQR	solution.c	48;"	d	file:
SQRT	rtkcmn.c	3142;"	d	file:
SQRT	solution.c	49;"	d	file:
SS2SOH	rcv/ss2.c	20;"	d	file:
STAOPT	options.c	49;"	d	file:
STD_BRDCCLK	ephemeris.c	81;"	d	file:
STQSYNC1	rcv/skytraq.c	27;"	d	file:
STQSYNC2	rcv/skytraq.c	28;"	d	file:
STRFMT_BINEX	rtklib.h	373;"	d
STRFMT_CRES	rtklib.h	368;"	d
STRFMT_GW10	rtklib.h	370;"	d
STRFMT_JAVAD	rtklib.h	371;"	d
STRFMT_LEXR	rtklib.h	374;"	d
STRFMT_NEWSTAR	rtklib.h	381;"	d
STRFMT_NMEA	rtklib.h	380;"	d
STRFMT_NVS	rtklib.h	372;"	d
STRFMT_OEM3	rtklib.h	365;"	d
STRFMT_OEM4	rtklib.h	364;"	d
STRFMT_RINEX	rtklib.h	376;"	d
STRFMT_RNXCLK	rtklib.h	378;"	d
STRFMT_RTCM2	rtklib.h	362;"	d
STRFMT_RTCM3	rtklib.h	363;"	d
STRFMT_SBAS	rtklib.h	379;"	d
STRFMT_SIRF	rtklib.h	375;"	d
STRFMT_SP3	rtklib.h	377;"	d
STRFMT_SS2	rtklib.h	367;"	d
STRFMT_STQ	rtklib.h	369;"	d
STRFMT_UBX	rtklib.h	366;"	d
STR_FILE	rtklib.h	353;"	d
STR_FTP	rtklib.h	359;"	d
STR_HTTP	rtklib.h	360;"	d
STR_MODE_R	rtklib.h	388;"	d
STR_MODE_RW	rtklib.h	390;"	d
STR_MODE_W	rtklib.h	389;"	d
STR_NONE	rtklib.h	351;"	d
STR_NTRIPCLI	rtklib.h	358;"	d
STR_NTRIPSVR	rtklib.h	357;"	d
STR_SERIAL	rtklib.h	352;"	d
STR_TCPCLI	rtklib.h	355;"	d
STR_TCPSVR	rtklib.h	354;"	d
STR_UDP	rtklib.h	356;"	d
STSOPT	options.c	50;"	d	file:
SWAP	lambda.c	27;"	d	file:
SWTOPT	options.c	34;"	d	file:
SYS_ALL	rtklib.h	102;"	d
SYS_CMP	rtklib.h	101;"	d
SYS_GAL	rtklib.h	99;"	d
SYS_GLO	rtklib.h	98;"	d
SYS_GPS	rtklib.h	96;"	d
SYS_NONE	rtklib.h	95;"	d
SYS_QZS	rtklib.h	100;"	d
SYS_SBS	rtklib.h	97;"	d
S_IREAD	download.c	18;"	d	file:
TFTOPT	options.c	45;"	d	file:
TIMES_GPST	rtklib.h	309;"	d
TIMES_JST	rtklib.h	311;"	d
TIMES_UTC	rtklib.h	310;"	d
TIMETAGH_LEN	stream.c	64;"	d	file:
TINT	convkml.c	30;"	d	file:
TINTACT	stream.c	62;"	d	file:
TOTHRD	tle.c	27;"	d	file:
TROPOPT_COR	rtklib.h	328;"	d
TROPOPT_CORG	rtklib.h	329;"	d
TROPOPT_EST	rtklib.h	326;"	d
TROPOPT_ESTG	rtklib.h	327;"	d
TROPOPT_OFF	rtklib.h	323;"	d
TROPOPT_SAAS	rtklib.h	324;"	d
TROPOPT_SBAS	rtklib.h	325;"	d
TRPOPT	options.c	39;"	d	file:
TSTEP	ephemeris.c	73;"	d	file:
TSYOPT	options.c	44;"	d	file:
TSYS_CMP	rtklib.h	109;"	d
TSYS_GAL	rtklib.h	107;"	d
TSYS_GLO	rtklib.h	106;"	d
TSYS_GPS	rtklib.h	104;"	d
TSYS_QZS	rtklib.h	108;"	d
TSYS_UTC	rtklib.h	105;"	d
TWOPI	tle.c	28;"	d	file:
TYPOPT	options.c	37;"	d	file:
U1	rcv/binex.c	36;"	d	file:
U1	rcv/crescent.c	39;"	d	file:
U1	rcv/gw10.c	49;"	d	file:
U1	rcv/javad.c	34;"	d	file:
U1	rcv/novatel.c	92;"	d	file:
U1	rcv/nvs.c	38;"	d	file:
U1	rcv/rcvlex.c	30;"	d	file:
U1	rcv/skytraq.c	42;"	d	file:
U1	rcv/ss2.c	31;"	d	file:
U1	rcv/ublox.c	45;"	d	file:
U2	rcv/binex.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/crescent.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/gw10.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/javad.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/novatel.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/nvs.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/rcvlex.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/skytraq.c	/^static unsigned short U2(unsigned char *p)$/;"	f	file:
U2	rcv/ss2.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U2	rcv/ublox.c	/^static unsigned short U2(unsigned char *p) {unsigned short u; memcpy(&u,p,2); return u;}$/;"	f	file:
U4	rcv/binex.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/crescent.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/gw10.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/javad.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/novatel.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/nvs.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/rcvlex.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/skytraq.c	/^static unsigned int U4(unsigned char *p)$/;"	f	file:
U4	rcv/ss2.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
U4	rcv/ublox.c	/^static unsigned int   U4(unsigned char *p) {unsigned int   u; memcpy(&u,p,4); return u;}$/;"	f	file:
UBXCFG	rcv/ublox.c	28;"	d	file:
UBXSYNC1	rcv/ublox.c	26;"	d	file:
UBXSYNC2	rcv/ublox.c	27;"	d	file:
VAR_NOTEC	ionex.c	24;"	d	file:
VER_RTKLIB	rtklib.h	51;"	d
WEEKOFFSET	sbas.c	45;"	d	file:
WL1	rcv/novatel.c	85;"	d	file:
WL2	rcv/novatel.c	86;"	d	file:
X3PIO2	tle.c	29;"	d	file:
XJ2	tle.c	30;"	d	file:
XJ3	tle.c	31;"	d	file:
XJ4	tle.c	32;"	d	file:
XKE	tle.c	33;"	d	file:
XKMPER	tle.c	34;"	d	file:
XMNPDA	tle.c	35;"	d	file:
XXLIB_H	gps_common.h	2;"	d
_POSIX_C_SOURCE	rtkcmn.c	93;"	d	file:
__USE_MISC	stream.c	48;"	d	file:
acc	gps_common.h	/^    double acc[3];      \/* satellite acceleration (ecef) (m\/s^2) *\/$/;"	m	struct:__anon43
acc	gps_common.h	/^    double acc[3];      \/* satellite acceleration (m\/s2) *\/$/;"	m	struct:__anon62
acc	gps_common.h	/^    double acc[3];      \/* satellite acceleration (m\/s^2) (ecef) *\/$/;"	m	struct:__anon44
accept_nb	stream.c	/^static socket_t accept_nb(socket_t sock, struct sockaddr *addr, socklen_t *len)$/;"	f	file:
accsock	stream.c	/^static int accsock(tcpsvr_t *tcpsvr, char *msg)$/;"	f	file:
add_data	tle.c	/^static int add_data(tle_t *tle, const tled_t *data)$/;"	f	file:
add_eph	rinex.c	/^static int add_eph(nav_t *nav, const eph_t *eph)$/;"	f	file:
add_eph	rinex_s.c	/^static int add_eph(nav_t *nav, const eph_t *eph)$/;"	f	file:
add_geph	rinex.c	/^static int add_geph(nav_t *nav, const geph_t *geph)$/;"	f	file:
add_geph	rinex_s.c	/^static int add_geph(nav_t *nav, const geph_t *geph)$/;"	f	file:
add_path	download.c	/^static int add_path(paths_t *paths, const char *remot, const char *dir)$/;"	f	file:
add_seph	rinex.c	/^static int add_seph(nav_t *nav, const seph_t *seph)$/;"	f	file:
add_seph	rinex_s.c	/^static int add_seph(nav_t *nav, const seph_t *seph)$/;"	f	file:
addobsdata	rinex.c	/^static int addobsdata(obs_t *obs, const obsd_t *data)$/;"	f	file:
addobsdata	rinex_s.c	/^static int addobsdata(obs_t *obs, const obsd_t *data)$/;"	f	file:
addpcv	rtkcmn.c	/^static void addpcv(const pcv_t *pcv, pcvs_t *pcvs)$/;"	f	file:
addpeph	preceph.c	/^static int addpeph(nav_t *nav, peph_t *peph)$/;"	f	file:
addr	stream.c	/^    char addr[1024];        \/* download address *\/$/;"	m	struct:__anon7	file:
addr	stream.c	/^    struct sockaddr_in addr; \/* address resolved *\/$/;"	m	struct:__anon3	typeref:struct:__anon3::sockaddr_in	file:
addsol	solution.c	/^extern int addsol(solbuf_t *solbuf, const sol_t *sol)$/;"	f
addsolstat	solution.c	/^static void addsolstat(solstatbuf_t *statbuf, const solstat_t *stat)$/;"	f	file:
addtec	ionex.c	/^static tec_t *addtec(const double *lats, const double *lons, const double *hgts,$/;"	f	file:
adjcp	rtcm3.c	/^static double adjcp(rtcm_t *rtcm, int sat, int freq, double cp)$/;"	f	file:
adjday	rcv/binex.c	/^static gtime_t adjday(gtime_t time, double tod)$/;"	f	file:
adjday	rcv/javad.c	/^static gtime_t adjday(gtime_t time, double tod)$/;"	f	file:
adjday	rcv/nvs.c	/^static gtime_t adjday(gtime_t time, double tod)$/;"	f	file:
adjday	rinex.c	/^static gtime_t adjday(gtime_t t, gtime_t t0)$/;"	f	file:
adjday	rinex_s.c	/^static gtime_t adjday(gtime_t t, gtime_t t0)$/;"	f	file:
adjday_glot	rtcm3.c	/^static void adjday_glot(rtcm_t *rtcm, double tod)$/;"	f	file:
adjgpsweek	rtkcmn.c	/^extern int adjgpsweek(int week)$/;"	f
adjhour	rtcm2.c	/^static void adjhour(rtcm_t *rtcm, double zcnt)$/;"	f	file:
adjweek	rcv/binex.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/gw10.c	/^static int adjweek(raw_t *raw, double tow)$/;"	f	file:
adjweek	rcv/javad.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/novatel.c	/^static gtime_t adjweek(gtime_t time, double tow)$/;"	f	file:
adjweek	rcv/ss2.c	/^static int adjweek(raw_t *raw, double sec)$/;"	f	file:
adjweek	rinex.c	/^static gtime_t adjweek(gtime_t t, gtime_t t0)$/;"	f	file:
adjweek	rinex_s.c	/^static gtime_t adjweek(gtime_t t, gtime_t t0)$/;"	f	file:
adjweek	rtcm3.c	/^static void adjweek(rtcm_t *rtcm, double tow)$/;"	f	file:
af0	gps_common.h	/^    double af0,af1;     \/* satellite clock bias and drift (s,s\/s) *\/$/;"	m	struct:__anon62
af0	gps_common.h	/^    double af0,af1;     \/* satellite clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon44
af1	gps_common.h	/^    double af0,af1;     \/* satellite clock bias and drift (s,s\/s) *\/$/;"	m	struct:__anon62
af1	gps_common.h	/^    double af0,af1;     \/* satellite clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon44
age	gps_common.h	/^    float age;          \/* age of differential (s) *\/$/;"	m	struct:__anon68
age	gps_common.h	/^    int svh,sva,age;    \/* satellite health, accuracy, age of operation *\/$/;"	m	struct:__anon43
ai	gps_common.h	/^    short ai;           \/* degradation factor indicator *\/$/;"	m	struct:__anon54
alert	rtklib.h	/^    int alert;          \/* alert flag *\/$/;"	m	struct:__anon79
alias	rtklib.h	/^    char alias[32];     \/* alias name *\/$/;"	m	struct:__anon72
alm	gps_common.h	/^    alm_t *alm;         \/* almanac data *\/$/;"	m	struct:__anon64
alm2pos	ephemeris.c	/^extern void alm2pos(gtime_t time, const alm_t *alm, double *rs, double *dts)$/;"	f
alm_t	gps_common.h	/^} alm_t;$/;"	t	typeref:struct:__anon47
ambc	rtklib.h	/^    ambc_t ambc[MAXSAT]; \/* ambibuity control *\/$/;"	m	struct:__anon93
ambc_t	rtklib.h	/^} ambc_t;$/;"	t	typeref:struct:__anon92
ant	rtklib.h	/^    char ant [3][32];   \/* antenna #\/type *\/$/;"	m	struct:__anon91
antdel	gps_common.h	/^    double antdel[2][3]; \/* antenna delta {{rov_e,rov_n,rov_u},{ref_e,ref_n,ref_u}} *\/$/;"	m	struct:__anon67
antdel	rtklib.h	/^    double antdel[3];   \/* antenna delta h\/e\/n *\/$/;"	m	struct:__anon91
antdes	rtklib.h	/^    char antdes [MAXANT]; \/* antenna descriptor *\/$/;"	m	struct:__anon81
antmodel	rtkcmn.c	/^extern void antmodel(const pcv_t *pcv, const double *del, const double *azel,$/;"	f
antmodel_s	rtkcmn.c	/^extern void antmodel_s(const pcv_t *pcv, double nadir, double *dant)$/;"	f
antpos_	options.c	/^static double antpos_[2][3];$/;"	v	file:
antpostype_	options.c	/^static int antpostype_[2];$/;"	v	file:
antsetup	rtklib.h	/^    int antsetup;       \/* antenna setup id *\/$/;"	m	struct:__anon81
antsno	rtklib.h	/^    char antsno [MAXANT]; \/* antenna serial number *\/$/;"	m	struct:__anon81
anttype	gps_common.h	/^    char anttype[2][MAXANT]; \/* antenna types {rover,base} *\/$/;"	m	struct:__anon67
apppos	rtklib.h	/^    double apppos[3];   \/* approx position x\/y\/z *\/$/;"	m	struct:__anon91
ast_args	rtkcmn.c	/^static void ast_args(double t, double *f)$/;"	f	file:
autopos	rtklib.h	/^    int autopos;        \/* auto approx position *\/$/;"	m	struct:__anon91
az	rtklib.h	/^    float az,el;        \/* azimuth\/elevation angle (rad) *\/$/;"	m	struct:__anon83
azel	gps_common.h	/^    double azel[2];     \/* azimuth\/elevation angles {az,el} (rad) *\/$/;"	m	struct:__anon69
baseline	gps_common.h	/^    double baseline[2]; \/* baseline length constraint {const,sigma} (m) *\/$/;"	m	struct:__anon67
bcd2num	rcv/gw10.c	/^static int bcd2num(unsigned char bcd)$/;"	f	file:
bds_tgd	rcv/binex.c	/^static double bds_tgd(int tgd)$/;"	f	file:
bdt0	rtkcmn.c	/^static const double bdt0 []={2006,1, 1,0,0,0}; \/* beidou time reference *\/$/;"	v	file:
bdt2gpst	rtkcmn.c	/^extern gtime_t bdt2gpst(gtime_t t)$/;"	f
bdt2time	rtkcmn.c	/^extern gtime_t bdt2time(int week, double sec)$/;"	f
bite	rtklib.h	/^    unsigned char bite; \/* IGP mask end bit *\/$/;"	m	struct:__anon78
bits	rtklib.h	/^    unsigned char bits; \/* IGP mask start bit *\/$/;"	m	struct:__anon78
blq	rtklib.h	/^    char blq    [MAXSTRPATH]; \/* ocean tide loading blq file *\/$/;"	m	struct:__anon90
bstar	rtklib.h	/^    double bstar;       \/* B* drag term *\/$/;"	m	struct:__anon72
buff	rtklib.h	/^    unsigned char *buff; \/* input buffers *\/$/;"	m	struct:__anon97
buff	rtklib.h	/^    unsigned char *buff[3]; \/* input buffers {rov,base,corr} *\/$/;"	m	struct:__anon98
buff	rtklib.h	/^    unsigned char buff[1200]; \/* message buffer *\/$/;"	m	struct:__anon85
buff	rtklib.h	/^    unsigned char buff[MAXRAWLEN]; \/* message buffer *\/$/;"	m	struct:__anon94
buff	rtklib.h	/^    unsigned char buff[MAXSOLMSG+1]; \/* message buffer *\/$/;"	m	struct:__anon82
buff	stream.c	/^    unsigned char *buff;    \/* write buffer *\/$/;"	m	struct:__anon1	file:
buff	stream.c	/^    unsigned char buff[NTRIP_MAXRSP]; \/* response buffer *\/$/;"	m	struct:__anon6	file:
buff2sysopts	options.c	/^static void buff2sysopts(void)$/;"	f	file:
buffsize	rtklib.h	/^    int buffsize;       \/* input buffer size (bytes) *\/$/;"	m	struct:__anon98
buffsize	rtklib.h	/^    int buffsize;       \/* input\/monitor buffer size (bytes) *\/$/;"	m	struct:__anon97
buffsize	stream.c	/^    int buffsize;           \/* write buffer size (bytes) *\/$/;"	m	struct:__anon1	file:
buffsize	stream.c	/^static int buffsize =32768; \/* receive\/send buffer size (bytes) *\/$/;"	v	file:
cbias	gps_common.h	/^    double cbias[MAXSAT][3];   \/* code bias (0:p1-p2,1:p1-c1,2:p2-c2) (m) *\/$/;"	m	struct:__anon64
cbias	gps_common.h	/^    float cbias[MAXCODE]; \/* code biases (m) *\/$/;"	m	struct:__anon61
cellmask	rtcm3.c	/^    unsigned char cellmask[64];     \/* cell mask *\/$/;"	m	struct:__anon70	file:
cerr	gps_common.h	/^    double cerr[4][NFREQ*2]; \/* code errors (m) *\/$/;"	m	struct:__anon66
check_parity	rcv/gw10.c	/^extern int check_parity(unsigned int word, unsigned char *data)$/;"	f
checkpri	rcv/javad.c	/^static int checkpri(const char *opt, int sys, int code, int freq)$/;"	f	file:
checkpri	rcv/novatel.c	/^static int checkpri(const char *opt, int sys, int code, int freq)$/;"	f	file:
checksum	rcv/javad.c	/^static int checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	rcv/skytraq.c	/^static unsigned char checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	rcv/ublox.c	/^static int checksum(unsigned char *buff, int len)$/;"	f	file:
checksum	tle.c	/^static int checksum(const char *buff)$/;"	f	file:
chisqr	rtkcmn.c	/^const double chisqr[100]={      \/* chi-sqr(n) (alpha=0.001) *\/$/;"	v
chksum	rcv/crescent.c	/^static int chksum(const unsigned char *buff, int len)$/;"	f	file:
chksum	rcv/gw10.c	/^static int chksum(const unsigned char *buff, int n)$/;"	f	file:
chksum	rcv/novatel.c	/^static unsigned char chksum(const unsigned char *buff, int len)$/;"	f	file:
chksum	rcv/ss2.c	/^static int chksum(const unsigned char *buff, int len)$/;"	f	file:
chop	options.c	/^static void chop(char *str)$/;"	f	file:
chop	tle.c	/^static void chop(char *buff)$/;"	f	file:
cic	gps_common.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon42
cis	gps_common.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon42
clearbuff	rcv/javad.c	/^static void clearbuff(raw_t *raw)$/;"	f	file:
cli	stream.c	/^    tcp_t cli[MAXCLI];      \/* tcp client controls *\/$/;"	m	struct:__anon4	file:
clk	gps_common.h	/^    double clk[MAXSAT][1]; \/* satellite clock (s) *\/$/;"	m	struct:__anon46
clk_ext	rtcm3.c	/^    unsigned char clk_ext;          \/* external clock indicator *\/$/;"	m	struct:__anon70	file:
clk_str	rtcm3.c	/^    unsigned char clk_str;          \/* clock steering indicator *\/$/;"	m	struct:__anon70	file:
closefile	stream.c	/^static void closefile(file_t *file)$/;"	f	file:
closefile_	stream.c	/^static void closefile_(file_t *file)$/;"	f	file:
closeftp	stream.c	/^static void closeftp(ftp_t *ftp)$/;"	f	file:
closegeoid	geoid.c	/^extern void closegeoid(void)$/;"	f
closentrip	stream.c	/^static void closentrip(ntrip_t *ntrip)$/;"	f	file:
closeserial	stream.c	/^static void closeserial(serial_t *serial)$/;"	f	file:
closesocket	stream.c	92;"	d	file:
closetcpcli	stream.c	/^static void closetcpcli(tcpcli_t *tcpcli)$/;"	f	file:
closetcpsvr	stream.c	/^static void closetcpsvr(tcpsvr_t *tcpsvr)$/;"	f	file:
cmp_str	download.c	/^static int cmp_str(const char *str1, const char *str2)$/;"	f	file:
cmp_tle_data	tle.c	/^static int cmp_tle_data(const void *p1, const void *p2)$/;"	f	file:
cmpeph	rtkcmn.c	/^static int cmpeph(const void *p1, const void *p2)$/;"	f	file:
cmpgeph	rtkcmn.c	/^static int cmpgeph(const void *p1, const void *p2)$/;"	f	file:
cmpmsgs	sbas.c	/^static int cmpmsgs(const void *p1, const void *p2)$/;"	f	file:
cmpobs	rtkcmn.c	/^static int cmpobs(const void *p1, const void *p2)$/;"	f	file:
cmppclk	rinex.c	/^static int cmppclk(const void *p1, const void *p2)$/;"	f	file:
cmppclk	rinex_s.c	/^static int cmppclk(const void *p1, const void *p2)$/;"	f	file:
cmppeph	preceph.c	/^static int cmppeph(const void *p1, const void *p2)$/;"	f	file:
cmpprm	datum.c	/^static int cmpprm(const void *p1, const void *p2)$/;"	f	file:
cmpseph	rtkcmn.c	/^static int cmpseph(const void *p1, const void *p2)$/;"	f	file:
cmpsol	solution.c	/^static int cmpsol(const void *p1, const void *p2)$/;"	f	file:
cmpsolstat	solution.c	/^static int cmpsolstat(const void *p1, const void *p2)$/;"	f	file:
code	datum.c	/^    int code;                       \/* mesh code *\/$/;"	m	struct:__anon103	file:
code	gps_common.h	/^    char code[MAXANT];  \/* serial number or satellite code *\/$/;"	m	struct:__anon53
code	gps_common.h	/^    int code;           \/* GPS\/QZS: code on L2, GAL\/CMP: data sources *\/$/;"	m	struct:__anon42
code	gps_common.h	/^    unsigned char code[NFREQ+NEXOBS]; \/* code indicator (CODE_???) *\/$/;"	m	struct:__anon40
code	rinex.c	/^    unsigned char code[MAXOBSTYPE];     \/* obs code (CODE_L??) *\/$/;"	m	struct:__anon99	file:
code	rinex_s.c	/^    unsigned char code[MAXOBSTYPE];     \/* obs code (CODE_L??) *\/$/;"	m	struct:__anon102	file:
code2obs	rtkcmn.c	/^extern char *code2obs(unsigned char code, int *freq)$/;"	f
code2sys	preceph.c	/^static int code2sys(char code)$/;"	f	file:
codepris	rtkcmn.c	/^static char codepris[6][MAXFREQ][16]={  \/* code priority table *\/$/;"	v	file:
codesmooth	gps_common.h	/^    int codesmooth;     \/* code smoothing window size (0:none) *\/$/;"	m	struct:__anon67
coef	gps_common.h	/^    double coef[3][2];  \/* coefficients lat x lon (3 x 2) *\/$/;"	m	struct:__anon63
combpclk	rinex.c	/^static void combpclk(nav_t *nav)$/;"	f	file:
combpclk	rinex_s.c	/^static void combpclk(nav_t *nav)$/;"	f	file:
combpeph	preceph.c	/^static void combpeph(nav_t *nav)$/;"	f	file:
combtec	ionex.c	/^static void combtec(nav_t *nav)$/;"	f	file:
comment	rtklib.h	/^    char *comment;      \/* option comment\/enum labels\/unit *\/$/;"	m	struct:__anon88
comment	rtklib.h	/^    char comment[MAXCOMMENT][64]; \/* comments *\/$/;"	m	struct:__anon91
compact_paths	download.c	/^static void compact_paths(paths_t *paths)$/;"	f	file:
connect_nb	stream.c	/^static int connect_nb(socket_t sock, struct sockaddr *addr, socklen_t len)$/;"	f	file:
consock	stream.c	/^static int consock(tcpcli_t *tcpcli, char *msg)$/;"	f	file:
conv	rtklib.h	/^    strconv_t *conv[16]; \/* stream converter *\/$/;"	m	struct:__anon97
convcode	rinex.c	/^static void convcode(double ver, int sys, const char *str, char *type)$/;"	f	file:
convcode	rinex_s.c	/^static void convcode(double ver, int sys, const char *str, char *type)$/;"	f	file:
convkml	convkml.c	/^extern int convkml(const char *infile, const char *outfile, gtime_t ts,$/;"	f
covecef	rtkcmn.c	/^extern void covecef(const double *pos, const double *Q, double *P)$/;"	f
covenu	rtkcmn.c	/^extern void covenu(const double *pos, const double *P, double *Q)$/;"	f
covtosol	solution.c	/^static void covtosol(const double *P, sol_t *sol)$/;"	f	file:
cp	rtklib.h	/^    double cp[MAXSAT][NFREQ+NEXOBS]; \/* carrier-phase measurement *\/$/;"	m	struct:__anon85
cp_pr	rtcm3e.c	/^static double cp_pr(double cp, double pr_cyc)$/;"	f	file:
cputime	rtklib.h	/^    int cputime;        \/* CPU time (ms) for a processing cycle *\/$/;"	m	struct:__anon98
crc	gps_common.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon42
crc16	rtkcmn.c	/^extern unsigned short crc16(const unsigned char *buff, int len)$/;"	f
crc24q	rtkcmn.c	/^extern unsigned int crc24q(const unsigned char *buff, int len)$/;"	f
crc32	rtkcmn.c	/^extern unsigned int crc32(const unsigned char *buff, int len)$/;"	f
crc32r	rcv/rcvlex.c	/^static unsigned int crc32r(const unsigned char *buff, int len)$/;"	f	file:
createdir	rtkcmn.c	/^extern void createdir(const char *path)$/;"	f
cross3	rtkcmn.c	/^extern void cross3(const double *a, const double *b, double *c)$/;"	f
crs	gps_common.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon42
csmooth	rtkcmn.c	/^extern void csmooth(obs_t *obs, int ns)$/;"	f
csum8	rcv/binex.c	/^static unsigned char csum8(const unsigned char *buff, int len)$/;"	f	file:
cuc	gps_common.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon42
cus	gps_common.h	/^    double crc,crs,cuc,cus,cic,cis;$/;"	m	struct:__anon42
cycle	rtklib.h	/^    int cycle;          \/* processing cycle (ms) *\/$/;"	m	struct:__anon98
cycle	rtklib.h	/^    int cycle;          \/* server cycle (ms) *\/$/;"	m	struct:__anon97
cyclic	rtklib.h	/^    int cyclic;         \/* cyclic buffer flag *\/$/;"	m	struct:__anon82
daf0	gps_common.h	/^    double daf0,daf1;   \/* delta clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon55
daf1	gps_common.h	/^    double daf0,daf1;   \/* delta clock-offset\/drift (s,s\/s) *\/$/;"	m	struct:__anon55
data	gps_common.h	/^    double *data;       \/* TEC grid data (tecu) *\/$/;"	m	struct:__anon48
data	gps_common.h	/^    erpd_t *data;       \/* earth rotation parameter data *\/$/;"	m	struct:__anon52
data	gps_common.h	/^    obsd_t *data;       \/* observation data records *\/$/;"	m	struct:__anon41
data	gps_common.h	/^    stecd_t *data;      \/* stec data *\/$/;"	m	struct:__anon50
data	rtklib.h	/^    sol_t *data;        \/* solution data *\/$/;"	m	struct:__anon82
data	rtklib.h	/^    solstat_t *data;    \/* solution status data *\/$/;"	m	struct:__anon84
data	rtklib.h	/^    tled_t *data;       \/* norad two line element data *\/$/;"	m	struct:__anon73
data	rtklib.h	/^    zwdd_t *data;       \/* zwd data *\/$/;"	m	struct:__anon75
dataindex	ionex.c	/^static int dataindex(int i, int j, int k, const int *ndata)$/;"	f	file:
datum	rtklib.h	/^    int datum;          \/* datum (0:WGS84,1:Tokyo) *\/$/;"	m	struct:__anon89
db	datum.c	/^    float db,dl;                    \/* difference of latitude\/longitude (sec) *\/$/;"	m	struct:__anon103	file:
dcb	rtklib.h	/^    char dcb    [MAXSTRPATH]; \/* dcb data file *\/$/;"	m	struct:__anon90
dclk	gps_common.h	/^    double dclk [3];    \/* delta clock {c0,c1,c2} (m,m\/s,m\/s^2) *\/$/;"	m	struct:__anon61
ddeph	gps_common.h	/^    double ddeph[3];    \/* dot delta orbit {radial,along,cross} (m\/s) *\/$/;"	m	struct:__anon61
decode_Dx	rcv/javad.c	/^static int decode_Dx(raw_t *raw, char code)$/;"	f	file:
decode_EA	rcv/javad.c	/^static int decode_EA(raw_t *raw)$/;"	f	file:
decode_EN	rcv/javad.c	/^static int decode_EN(raw_t *raw)$/;"	f	file:
decode_ET	rcv/javad.c	/^static int decode_ET(raw_t *raw)$/;"	f	file:
decode_EU	rcv/javad.c	/^static int decode_EU(raw_t *raw)$/;"	f	file:
decode_Ex	rcv/javad.c	/^static int decode_Ex(raw_t *raw, char code)$/;"	f	file:
decode_Fx	rcv/javad.c	/^static int decode_Fx(raw_t *raw, char code)$/;"	f	file:
decode_GA	rcv/javad.c	/^static int decode_GA(raw_t *raw)$/;"	f	file:
decode_GE	rcv/javad.c	/^static int decode_GE(raw_t *raw)$/;"	f	file:
decode_ID	rcv/javad.c	/^static int decode_ID(raw_t *raw)$/;"	f	file:
decode_IO	rcv/javad.c	/^static int decode_IO(raw_t *raw)$/;"	f	file:
decode_L1Cnav	rcv/javad.c	/^static int decode_L1Cnav(const unsigned char *buff, int sat, raw_t *raw)$/;"	f	file:
decode_L1nav	rcv/javad.c	/^static int decode_L1nav(const unsigned char *buff, int sat, raw_t *raw)$/;"	f	file:
decode_L2nav	rcv/javad.c	/^static int decode_L2nav(const unsigned char *buff, int sat, raw_t *raw)$/;"	f	file:
decode_L5nav	rcv/javad.c	/^static int decode_L5nav(const unsigned char *buff, int sat, raw_t *raw)$/;"	f	file:
decode_LD	rcv/javad.c	/^static int decode_LD(raw_t *raw)$/;"	f	file:
decode_NA	rcv/javad.c	/^static int decode_NA(raw_t *raw)$/;"	f	file:
decode_NE	rcv/javad.c	/^static int decode_NE(raw_t *raw)$/;"	f	file:
decode_NN	rcv/javad.c	/^static int decode_NN(raw_t *raw)$/;"	f	file:
decode_NU	rcv/javad.c	/^static int decode_NU(raw_t *raw)$/;"	f	file:
decode_Px	rcv/javad.c	/^static int decode_Px(raw_t *raw, char code)$/;"	f	file:
decode_QA	rcv/javad.c	/^static int decode_QA(raw_t *raw)$/;"	f	file:
decode_QE	rcv/javad.c	/^static int decode_QE(raw_t *raw)$/;"	f	file:
decode_QU	rcv/javad.c	/^static int decode_QU(raw_t *raw)$/;"	f	file:
decode_RD	rcv/javad.c	/^static int decode_RD(raw_t *raw)$/;"	f	file:
decode_RT	rcv/javad.c	/^static int decode_RT(raw_t *raw)$/;"	f	file:
decode_Rx	rcv/javad.c	/^static int decode_Rx(raw_t *raw, char code)$/;"	f	file:
decode_SI	rcv/javad.c	/^static int decode_SI(raw_t *raw)$/;"	f	file:
decode_TC	rcv/javad.c	/^static int decode_TC(raw_t *raw)$/;"	f	file:
decode_UO	rcv/javad.c	/^static int decode_UO(raw_t *raw)$/;"	f	file:
decode_WA	rcv/javad.c	/^static int decode_WA(raw_t *raw)$/;"	f	file:
decode_WD	rcv/javad.c	/^static int decode_WD(raw_t *raw)$/;"	f	file:
decode_WE	rcv/javad.c	/^static int decode_WE(raw_t *raw)$/;"	f	file:
decode_WU	rcv/javad.c	/^static int decode_WU(raw_t *raw)$/;"	f	file:
decode_alm1	rcv/skytraq.c	/^static int decode_alm1(int sat, raw_t *raw)$/;"	f	file:
decode_alm1	rcv/ublox.c	/^static int decode_alm1(int sat, raw_t *raw)$/;"	f	file:
decode_alm2	rcv/skytraq.c	/^static int decode_alm2(int sat, raw_t *raw)$/;"	f	file:
decode_alm2	rcv/ublox.c	/^static int decode_alm2(int sat, raw_t *raw)$/;"	f	file:
decode_almanac	rcvraw.c	/^static void decode_almanac(const unsigned char *buff, alm_t *alm)$/;"	f	file:
decode_bnx	rcv/binex.c	/^static int decode_bnx(raw_t *raw)$/;"	f	file:
decode_bnx_00	rcv/binex.c	/^static int decode_bnx_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_00	rcv/binex.c	/^static int decode_bnx_00_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_01	rcv/binex.c	/^static int decode_bnx_00_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_02	rcv/binex.c	/^static int decode_bnx_00_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_03	rcv/binex.c	/^static int decode_bnx_00_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_04	rcv/binex.c	/^static int decode_bnx_00_04(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_05	rcv/binex.c	/^static int decode_bnx_00_05(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_06	rcv/binex.c	/^static int decode_bnx_00_06(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_07	rcv/binex.c	/^static int decode_bnx_00_07(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_08	rcv/binex.c	/^static int decode_bnx_00_08(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_09	rcv/binex.c	/^static int decode_bnx_00_09(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0a	rcv/binex.c	/^static int decode_bnx_00_0a(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0b	rcv/binex.c	/^static int decode_bnx_00_0b(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0c	rcv/binex.c	/^static int decode_bnx_00_0c(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0d	rcv/binex.c	/^static int decode_bnx_00_0d(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0e	rcv/binex.c	/^static int decode_bnx_00_0e(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_0f	rcv/binex.c	/^static int decode_bnx_00_0f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_10	rcv/binex.c	/^static int decode_bnx_00_10(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_11	rcv/binex.c	/^static int decode_bnx_00_11(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_12	rcv/binex.c	/^static int decode_bnx_00_12(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_13	rcv/binex.c	/^static int decode_bnx_00_13(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_14	rcv/binex.c	/^static int decode_bnx_00_14(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_15	rcv/binex.c	/^static int decode_bnx_00_15(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_16	rcv/binex.c	/^static int decode_bnx_00_16(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_17	rcv/binex.c	/^static int decode_bnx_00_17(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_18	rcv/binex.c	/^static int decode_bnx_00_18(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_19	rcv/binex.c	/^static int decode_bnx_00_19(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1a	rcv/binex.c	/^static int decode_bnx_00_1a(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1b	rcv/binex.c	/^static int decode_bnx_00_1b(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1c	rcv/binex.c	/^static int decode_bnx_00_1c(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1d	rcv/binex.c	/^static int decode_bnx_00_1d(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1e	rcv/binex.c	/^static int decode_bnx_00_1e(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_1f	rcv/binex.c	/^static int decode_bnx_00_1f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_20	rcv/binex.c	/^static int decode_bnx_00_20(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_21	rcv/binex.c	/^static int decode_bnx_00_21(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_22	rcv/binex.c	/^static int decode_bnx_00_22(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_00_7f	rcv/binex.c	/^static int decode_bnx_00_7f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01	rcv/binex.c	/^static int decode_bnx_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_00	rcv/binex.c	/^static int decode_bnx_01_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_01	rcv/binex.c	/^static int decode_bnx_01_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_02	rcv/binex.c	/^static int decode_bnx_01_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_03	rcv/binex.c	/^static int decode_bnx_01_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_04	rcv/binex.c	/^static int decode_bnx_01_04(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_05	rcv/binex.c	/^static int decode_bnx_01_05(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_01_06	rcv/binex.c	/^static int decode_bnx_01_06(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_02	rcv/binex.c	/^static int decode_bnx_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_03	rcv/binex.c	/^static int decode_bnx_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7d	rcv/binex.c	/^static int decode_bnx_7d(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7e	rcv/binex.c	/^static int decode_bnx_7e(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f	rcv/binex.c	/^static int decode_bnx_7f(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_00	rcv/binex.c	/^static int decode_bnx_7f_00(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_01	rcv/binex.c	/^static int decode_bnx_7f_01(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_02	rcv/binex.c	/^static int decode_bnx_7f_02(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_03	rcv/binex.c	/^static int decode_bnx_7f_03(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_04	rcv/binex.c	/^static int decode_bnx_7f_04(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_05	rcv/binex.c	/^static int decode_bnx_7f_05(raw_t *raw, unsigned char *buff, int len)$/;"	f	file:
decode_bnx_7f_05_obs	rcv/binex.c	/^static unsigned char *decode_bnx_7f_05_obs(raw_t *raw, unsigned char *buff,$/;"	f	file:
decode_cres	rcv/crescent.c	/^static int decode_cres(raw_t *raw)$/;"	f	file:
decode_creseph	rcv/crescent.c	/^static int decode_creseph(raw_t *raw)$/;"	f	file:
decode_cresionutc	rcv/crescent.c	/^static int decode_cresionutc(raw_t *raw)$/;"	f	file:
decode_crespos	rcv/crescent.c	/^static int decode_crespos(raw_t *raw)$/;"	f	file:
decode_cresraw	rcv/crescent.c	/^static int decode_cresraw(raw_t *raw)$/;"	f	file:
decode_cresraw2	rcv/crescent.c	/^static int decode_cresraw2(raw_t *raw)$/;"	f	file:
decode_creswaas	rcv/crescent.c	/^static int decode_creswaas(raw_t *raw)$/;"	f	file:
decode_eph	rcv/javad.c	/^static int decode_eph(raw_t *raw, int sys)$/;"	f	file:
decode_eph	rinex.c	/^static int decode_eph(double ver, int sat, gtime_t toc, const double *data,$/;"	f	file:
decode_eph	rinex_s.c	/^static int decode_eph(double ver, int sat, gtime_t toc, const double *data,$/;"	f	file:
decode_ephem	rcv/skytraq.c	/^static int decode_ephem(int sat, raw_t *raw)$/;"	f	file:
decode_ephem	rcv/ublox.c	/^static int decode_ephem(int sat, raw_t *raw)$/;"	f	file:
decode_frame	rcvraw.c	/^extern int decode_frame(const unsigned char *buff, eph_t *eph, alm_t *alm,$/;"	f
decode_frmb	rcv/novatel.c	/^static int decode_frmb(raw_t *raw)$/;"	f	file:
decode_galalmanacb	rcv/novatel.c	/^static int decode_galalmanacb(raw_t *raw)$/;"	f	file:
decode_galclockb	rcv/novatel.c	/^static int decode_galclockb(raw_t *raw)$/;"	f	file:
decode_galephemerisb	rcv/novatel.c	/^static int decode_galephemerisb(raw_t *raw)$/;"	f	file:
decode_galfnavrawpageb	rcv/novatel.c	/^static int decode_galfnavrawpageb(raw_t *raw)$/;"	f	file:
decode_galinavrawwordb	rcv/novatel.c	/^static int decode_galinavrawwordb(raw_t *raw)$/;"	f	file:
decode_galionob	rcv/novatel.c	/^static int decode_galionob(raw_t *raw)$/;"	f	file:
decode_geph	rinex.c	/^static int decode_geph(double ver, int sat, gtime_t toc, double *data,$/;"	f	file:
decode_geph	rinex_s.c	/^static int decode_geph(double ver, int sat, gtime_t toc, double *data,$/;"	f	file:
decode_gloephem	rcv/nvs.c	/^static int decode_gloephem(int sat, raw_t *raw)$/;"	f	file:
decode_gloephemerisb	rcv/novatel.c	/^static int decode_gloephemerisb(raw_t *raw)$/;"	f	file:
decode_gnavh	rinex.c	/^static void decode_gnavh(char *buff, nav_t *nav)$/;"	f	file:
decode_gnavh	rinex_s.c	/^static void decode_gnavh(char *buff, nav_t *nav)$/;"	f	file:
decode_gpsephem	rcv/nvs.c	/^static int decode_gpsephem(int sat, raw_t *raw)$/;"	f	file:
decode_gw10	rcv/gw10.c	/^static int decode_gw10(raw_t *raw)$/;"	f	file:
decode_gw10gps	rcv/gw10.c	/^static int decode_gw10gps(raw_t *raw)$/;"	f	file:
decode_gw10raw	rcv/gw10.c	/^static int decode_gw10raw(raw_t *raw)$/;"	f	file:
decode_gw10reph	rcv/gw10.c	/^static int decode_gw10reph(raw_t *raw)$/;"	f	file:
decode_gw10sbs	rcv/gw10.c	/^static int decode_gw10sbs(raw_t *raw)$/;"	f	file:
decode_gw10sol	rcv/gw10.c	/^static int decode_gw10sol(raw_t *raw)$/;"	f	file:
decode_head1001	rtcm3.c	/^static int decode_head1001(rtcm_t *rtcm, int *sync)$/;"	f	file:
decode_head1009	rtcm3.c	/^static int decode_head1009(rtcm_t *rtcm, int *sync)$/;"	f	file:
decode_hnavh	rinex.c	/^static void decode_hnavh(char *buff, nav_t *nav)$/;"	f	file:
decode_hnavh	rinex_s.c	/^static void decode_hnavh(char *buff, nav_t *nav)$/;"	f	file:
decode_ionb	rcv/novatel.c	/^static int decode_ionb(raw_t *raw)$/;"	f	file:
decode_ionutcb	rcv/novatel.c	/^static int decode_ionutcb(raw_t *raw)$/;"	f	file:
decode_javad	rcv/javad.c	/^static int decode_javad(raw_t *raw)$/;"	f	file:
decode_lexeph	qzslex.c	/^static int decode_lexeph(const unsigned char *buff, int i, gtime_t toe,$/;"	f	file:
decode_lexhealth	qzslex.c	/^static int decode_lexhealth(const unsigned char *buff, int i, gtime_t tof,$/;"	f	file:
decode_lexion	qzslex.c	/^static int decode_lexion(const unsigned char *buff, int i, gtime_t tof,$/;"	f	file:
decode_lexmsg	rcv/rcvlex.c	/^static int decode_lexmsg(raw_t *raw)$/;"	f	file:
decode_lexr	rcv/rcvlex.c	/^static int decode_lexr(raw_t *raw)$/;"	f	file:
decode_lexraw	rcv/rcvlex.c	/^static int decode_lexraw(raw_t *raw)$/;"	f	file:
decode_lextof	qzslex.c	/^static int decode_lextof(const unsigned char *buff, int i, gtime_t *tof,$/;"	f	file:
decode_lextype10	qzslex.c	/^static int decode_lextype10(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_lextype11	qzslex.c	/^static int decode_lextype11(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_lextype12	qzslex.c	/^static int decode_lextype12(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_lextype20	qzslex.c	/^static int decode_lextype20(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f	file:
decode_line1	tle.c	/^static int decode_line1(const char *buff, tled_t *data)$/;"	f	file:
decode_line2	tle.c	/^static int decode_line2(const char *buff, tled_t *data)$/;"	f	file:
decode_longcorr0	sbas.c	/^static int decode_longcorr0(const sbsmsg_t *msg, int p, sbssat_t *sbssat)$/;"	f	file:
decode_longcorr1	sbas.c	/^static int decode_longcorr1(const sbsmsg_t *msg, int p, sbssat_t *sbssat)$/;"	f	file:
decode_longcorrh	sbas.c	/^static int decode_longcorrh(const sbsmsg_t *msg, int p, sbssat_t *sbssat)$/;"	f	file:
decode_msm0	rtcm3.c	/^static int decode_msm0(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm4	rtcm3.c	/^static int decode_msm4(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm5	rtcm3.c	/^static int decode_msm5(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm6	rtcm3.c	/^static int decode_msm6(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm7	rtcm3.c	/^static int decode_msm7(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_msm_head	rtcm3.c	/^static int decode_msm_head(rtcm_t *rtcm, int sys, int *sync, int *iod,$/;"	f	file:
decode_nD	rcv/javad.c	/^static int decode_nD(raw_t *raw, int sys)$/;"	f	file:
decode_navh	rinex.c	/^static void decode_navh(char *buff, nav_t *nav)$/;"	f	file:
decode_navh	rinex_s.c	/^static void decode_navh(char *buff, nav_t *nav)$/;"	f	file:
decode_nd	rcv/javad.c	/^static int decode_nd(raw_t *raw, int sys)$/;"	f	file:
decode_nmea	solution.c	/^static int decode_nmea(char *buff, sol_t *sol)$/;"	f	file:
decode_nmeagga	solution.c	/^static int decode_nmeagga(char **val, int n, sol_t *sol)$/;"	f	file:
decode_nmearmc	solution.c	/^static int decode_nmearmc(char **val, int n, sol_t *sol)$/;"	f	file:
decode_nvs	rcv/nvs.c	/^static int decode_nvs(raw_t *raw)$/;"	f	file:
decode_obsdata	rinex.c	/^static int decode_obsdata(FILE *fp, char *buff, double ver, sigind_t *index,$/;"	f	file:
decode_obsdata	rinex_s.c	/^static int decode_obsdata(FILE *fp, char *buff, double ver, sigind_t *index,$/;"	f	file:
decode_obsepoch	rinex.c	/^static int decode_obsepoch(FILE *fp, char *buff, double ver, gtime_t *time,$/;"	f	file:
decode_obsepoch	rinex_s.c	/^static int decode_obsepoch(FILE *fp, char *buff, double ver, gtime_t *time,$/;"	f	file:
decode_obsh	rinex.c	/^static void decode_obsh(FILE *fp, char *buff, double ver, int *tsys,$/;"	f	file:
decode_obsh	rinex_s.c	/^static void decode_obsh(FILE *fp, char *buff, double ver, int *tsys,$/;"	f	file:
decode_oem3	rcv/novatel.c	/^static int decode_oem3(raw_t *raw)$/;"	f	file:
decode_oem4	rcv/novatel.c	/^static int decode_oem4(raw_t *raw)$/;"	f	file:
decode_px	rcv/javad.c	/^static int decode_px(raw_t *raw, char code)$/;"	f	file:
decode_qzssionutcb	rcv/novatel.c	/^static int decode_qzssionutcb(raw_t *raw)$/;"	f	file:
decode_qzssrawephemb	rcv/novatel.c	/^static int decode_qzssrawephemb(raw_t *raw)$/;"	f	file:
decode_qzssrawsubframeb	rcv/novatel.c	/^static int decode_qzssrawsubframeb(raw_t *raw)$/;"	f	file:
decode_rangeb	rcv/novatel.c	/^static int decode_rangeb(raw_t *raw)$/;"	f	file:
decode_rangecmpb	rcv/novatel.c	/^static int decode_rangecmpb(raw_t *raw)$/;"	f	file:
decode_rawephemb	rcv/novatel.c	/^static int decode_rawephemb(raw_t *raw)$/;"	f	file:
decode_rawsbasframeb	rcv/novatel.c	/^static int decode_rawsbasframeb(raw_t *raw)$/;"	f	file:
decode_rawwaasframeb	rcv/novatel.c	/^static int decode_rawwaasframeb(raw_t *raw)$/;"	f	file:
decode_refpos	solution.c	/^static void decode_refpos(char *buff, const solopt_t *opt, double *rb)$/;"	f	file:
decode_repb	rcv/novatel.c	/^static int decode_repb(raw_t *raw)$/;"	f	file:
decode_rgeb	rcv/novatel.c	/^static int decode_rgeb(raw_t *raw)$/;"	f	file:
decode_rged	rcv/novatel.c	/^static int decode_rged(raw_t *raw)$/;"	f	file:
decode_rtcm2	rtcm2.c	/^extern int decode_rtcm2(rtcm_t *rtcm)$/;"	f
decode_rtcm3	rtcm3.c	/^extern int decode_rtcm3(rtcm_t *rtcm)$/;"	f
decode_rx	rcv/javad.c	/^static int decode_rx(raw_t *raw, char code)$/;"	f	file:
decode_rxmraw	rcv/ublox.c	/^static int decode_rxmraw(raw_t *raw)$/;"	f	file:
decode_rxmsfrb	rcv/ublox.c	/^static int decode_rxmsfrb(raw_t *raw)$/;"	f	file:
decode_sbstype1	sbas.c	/^static int decode_sbstype1(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype18	sbas.c	/^static int decode_sbstype18(const sbsmsg_t *msg, sbsion_t *sbsion)$/;"	f	file:
decode_sbstype2	sbas.c	/^static int decode_sbstype2(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype24	sbas.c	/^static int decode_sbstype24(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype25	sbas.c	/^static int decode_sbstype25(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype26	sbas.c	/^static int decode_sbstype26(const sbsmsg_t *msg, sbsion_t *sbsion)$/;"	f	file:
decode_sbstype6	sbas.c	/^static int decode_sbstype6(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype7	sbas.c	/^static int decode_sbstype7(const sbsmsg_t *msg, sbssat_t *sbssat)$/;"	f	file:
decode_sbstype9	sbas.c	/^static int decode_sbstype9(const sbsmsg_t *msg, nav_t *nav)$/;"	f	file:
decode_seph	rinex.c	/^static int decode_seph(double ver, int sat, gtime_t toc, double *data,$/;"	f	file:
decode_seph	rinex_s.c	/^static int decode_seph(double ver, int sat, gtime_t toc, double *data,$/;"	f	file:
decode_sol	solution.c	/^static int decode_sol(char *buff, const solopt_t *opt, sol_t *sol, double *rb)$/;"	f	file:
decode_solenu	solution.c	/^static int decode_solenu(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solgsi	solution.c	/^static int decode_solgsi(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solllh	solution.c	/^static int decode_solllh(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solopt	solution.c	/^static void decode_solopt(char *buff, solopt_t *opt)$/;"	f	file:
decode_solpos	solution.c	/^static int decode_solpos(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_solstat	solution.c	/^static int decode_solstat(char *buff, solstat_t *stat)$/;"	f	file:
decode_soltime	solution.c	/^static char *decode_soltime(char *buff, const solopt_t *opt, gtime_t *time)$/;"	f	file:
decode_solxyz	solution.c	/^static int decode_solxyz(char *buff, const solopt_t *opt, sol_t *sol)$/;"	f	file:
decode_ss2	rcv/ss2.c	/^static int decode_ss2(raw_t *raw)$/;"	f	file:
decode_ss2ecef	rcv/ss2.c	/^static int decode_ss2ecef(raw_t *raw)$/;"	f	file:
decode_ss2eph	rcv/ss2.c	/^static int decode_ss2eph(raw_t *raw)$/;"	f	file:
decode_ss2llh	rcv/ss2.c	/^static int decode_ss2llh(raw_t *raw)$/;"	f	file:
decode_ss2meas	rcv/ss2.c	/^static int decode_ss2meas(raw_t *raw)$/;"	f	file:
decode_ss2sbas	rcv/ss2.c	/^static int decode_ss2sbas(raw_t *raw)$/;"	f	file:
decode_ssr1	rtcm3.c	/^static int decode_ssr1(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr1_head	rtcm3.c	/^static int decode_ssr1_head(rtcm_t *rtcm, int sys, int *sync, int *iod,$/;"	f	file:
decode_ssr2	rtcm3.c	/^static int decode_ssr2(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr2_head	rtcm3.c	/^static int decode_ssr2_head(rtcm_t *rtcm, int sys, int *sync, int *iod,$/;"	f	file:
decode_ssr3	rtcm3.c	/^static int decode_ssr3(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr4	rtcm3.c	/^static int decode_ssr4(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr5	rtcm3.c	/^static int decode_ssr5(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_ssr6	rtcm3.c	/^static int decode_ssr6(rtcm_t *rtcm, int sys)$/;"	f	file:
decode_stq	rcv/skytraq.c	/^static int decode_stq(raw_t *raw)$/;"	f	file:
decode_stqglostr	rcv/skytraq.c	/^static int decode_stqglostr(raw_t *raw)$/;"	f	file:
decode_stqraw	rcv/skytraq.c	/^static int decode_stqraw(raw_t *raw)$/;"	f	file:
decode_stqsfrb	rcv/skytraq.c	/^static int decode_stqsfrb(raw_t *raw)$/;"	f	file:
decode_stqtime	rcv/skytraq.c	/^static int decode_stqtime(raw_t *raw)$/;"	f	file:
decode_subfrm1	rcvraw.c	/^static int decode_subfrm1(const unsigned char *buff, eph_t *eph)$/;"	f	file:
decode_subfrm2	rcvraw.c	/^static int decode_subfrm2(const unsigned char *buff, eph_t *eph)$/;"	f	file:
decode_subfrm3	rcvraw.c	/^static int decode_subfrm3(const unsigned char *buff, eph_t *eph)$/;"	f	file:
decode_subfrm4	rcvraw.c	/^static int decode_subfrm4(const unsigned char *buff, alm_t *alm, double *ion,$/;"	f	file:
decode_subfrm5	rcvraw.c	/^static int decode_subfrm5(const unsigned char *buff, alm_t *alm)$/;"	f	file:
decode_trackstat	rcv/novatel.c	/^static int decode_trackstat(unsigned int stat, int *sys, int *code, int *track,$/;"	f	file:
decode_type1	rtcm2.c	/^static int decode_type1(rtcm_t *rtcm)$/;"	f	file:
decode_type1001	rtcm3.c	/^static int decode_type1001(rtcm_t *rtcm)$/;"	f	file:
decode_type1002	rtcm3.c	/^static int decode_type1002(rtcm_t *rtcm)$/;"	f	file:
decode_type1003	rtcm3.c	/^static int decode_type1003(rtcm_t *rtcm)$/;"	f	file:
decode_type1004	rtcm3.c	/^static int decode_type1004(rtcm_t *rtcm)$/;"	f	file:
decode_type1005	rtcm3.c	/^static int decode_type1005(rtcm_t *rtcm)$/;"	f	file:
decode_type1006	rtcm3.c	/^static int decode_type1006(rtcm_t *rtcm)$/;"	f	file:
decode_type1007	rtcm3.c	/^static int decode_type1007(rtcm_t *rtcm)$/;"	f	file:
decode_type1008	rtcm3.c	/^static int decode_type1008(rtcm_t *rtcm)$/;"	f	file:
decode_type1009	rtcm3.c	/^static int decode_type1009(rtcm_t *rtcm)$/;"	f	file:
decode_type1010	rtcm3.c	/^static int decode_type1010(rtcm_t *rtcm)$/;"	f	file:
decode_type1011	rtcm3.c	/^static int decode_type1011(rtcm_t *rtcm)$/;"	f	file:
decode_type1012	rtcm3.c	/^static int decode_type1012(rtcm_t *rtcm)$/;"	f	file:
decode_type1013	rtcm3.c	/^static int decode_type1013(rtcm_t *rtcm)$/;"	f	file:
decode_type1019	rtcm3.c	/^static int decode_type1019(rtcm_t *rtcm)$/;"	f	file:
decode_type1020	rtcm3.c	/^static int decode_type1020(rtcm_t *rtcm)$/;"	f	file:
decode_type1021	rtcm3.c	/^static int decode_type1021(rtcm_t *rtcm)$/;"	f	file:
decode_type1022	rtcm3.c	/^static int decode_type1022(rtcm_t *rtcm)$/;"	f	file:
decode_type1023	rtcm3.c	/^static int decode_type1023(rtcm_t *rtcm)$/;"	f	file:
decode_type1024	rtcm3.c	/^static int decode_type1024(rtcm_t *rtcm)$/;"	f	file:
decode_type1025	rtcm3.c	/^static int decode_type1025(rtcm_t *rtcm)$/;"	f	file:
decode_type1026	rtcm3.c	/^static int decode_type1026(rtcm_t *rtcm)$/;"	f	file:
decode_type1027	rtcm3.c	/^static int decode_type1027(rtcm_t *rtcm)$/;"	f	file:
decode_type1030	rtcm3.c	/^static int decode_type1030(rtcm_t *rtcm)$/;"	f	file:
decode_type1031	rtcm3.c	/^static int decode_type1031(rtcm_t *rtcm)$/;"	f	file:
decode_type1032	rtcm3.c	/^static int decode_type1032(rtcm_t *rtcm)$/;"	f	file:
decode_type1033	rtcm3.c	/^static int decode_type1033(rtcm_t *rtcm)$/;"	f	file:
decode_type1034	rtcm3.c	/^static int decode_type1034(rtcm_t *rtcm)$/;"	f	file:
decode_type1035	rtcm3.c	/^static int decode_type1035(rtcm_t *rtcm)$/;"	f	file:
decode_type1037	rtcm3.c	/^static int decode_type1037(rtcm_t *rtcm)$/;"	f	file:
decode_type1038	rtcm3.c	/^static int decode_type1038(rtcm_t *rtcm)$/;"	f	file:
decode_type1039	rtcm3.c	/^static int decode_type1039(rtcm_t *rtcm)$/;"	f	file:
decode_type1044	rtcm3.c	/^static int decode_type1044(rtcm_t *rtcm)$/;"	f	file:
decode_type1045	rtcm3.c	/^static int decode_type1045(rtcm_t *rtcm)$/;"	f	file:
decode_type1046	rtcm3.c	/^static int decode_type1046(rtcm_t *rtcm)$/;"	f	file:
decode_type1230	rtcm3.c	/^static int decode_type1230(rtcm_t *rtcm)$/;"	f	file:
decode_type14	rtcm2.c	/^static int decode_type14(rtcm_t *rtcm)$/;"	f	file:
decode_type16	rtcm2.c	/^static int decode_type16(rtcm_t *rtcm)$/;"	f	file:
decode_type17	rtcm2.c	/^static int decode_type17(rtcm_t *rtcm)$/;"	f	file:
decode_type18	rtcm2.c	/^static int decode_type18(rtcm_t *rtcm)$/;"	f	file:
decode_type19	rtcm2.c	/^static int decode_type19(rtcm_t *rtcm)$/;"	f	file:
decode_type22	rtcm2.c	/^static int decode_type22(rtcm_t *rtcm)$/;"	f	file:
decode_type23	rtcm2.c	/^static int decode_type23(rtcm_t *rtcm)$/;"	f	file:
decode_type24	rtcm2.c	/^static int decode_type24(rtcm_t *rtcm)$/;"	f	file:
decode_type3	rtcm2.c	/^static int decode_type3(rtcm_t *rtcm)$/;"	f	file:
decode_type31	rtcm2.c	/^static int decode_type31(rtcm_t *rtcm)$/;"	f	file:
decode_type32	rtcm2.c	/^static int decode_type32(rtcm_t *rtcm)$/;"	f	file:
decode_type34	rtcm2.c	/^static int decode_type34(rtcm_t *rtcm)$/;"	f	file:
decode_type36	rtcm2.c	/^static int decode_type36(rtcm_t *rtcm)$/;"	f	file:
decode_type37	rtcm2.c	/^static int decode_type37(rtcm_t *rtcm)$/;"	f	file:
decode_type59	rtcm2.c	/^static int decode_type59(rtcm_t *rtcm)$/;"	f	file:
decode_ubx	rcv/ublox.c	/^static int decode_ubx(raw_t *raw)$/;"	f	file:
decode_utcb	rcv/novatel.c	/^static int decode_utcb(raw_t *raw)$/;"	f	file:
decode_word	rtkcmn.c	/^extern int decode_word(unsigned int word, unsigned char *data)$/;"	f
decode_x4aiono	rcv/nvs.c	/^static int decode_x4aiono(raw_t *raw)$/;"	f	file:
decode_x4btime	rcv/nvs.c	/^static int decode_x4btime(raw_t *raw)$/;"	f	file:
decode_xE	rcv/javad.c	/^static int decode_xE(raw_t *raw, char code)$/;"	f	file:
decode_xP	rcv/javad.c	/^static int decode_xP(raw_t *raw, char code)$/;"	f	file:
decode_xR	rcv/javad.c	/^static int decode_xR(raw_t *raw, char code)$/;"	f	file:
decode_xd	rcv/javad.c	/^static int decode_xd(raw_t *raw, char code)$/;"	f	file:
decode_xe5bit	rcv/nvs.c	/^static int decode_xe5bit(raw_t *raw)$/;"	f	file:
decode_xf5raw	rcv/nvs.c	/^static int decode_xf5raw(raw_t *raw)$/;"	f	file:
decode_xf7eph	rcv/nvs.c	/^static int decode_xf7eph(raw_t *raw)$/;"	f	file:
decode_xp	rcv/javad.c	/^static int decode_xp(raw_t *raw, char code)$/;"	f	file:
decode_xr	rcv/javad.c	/^static int decode_xr(raw_t *raw, char code)$/;"	f	file:
decodef	rtkcmn.c	/^static int decodef(char *p, int n, double *v)$/;"	f	file:
decodeftppath	stream.c	/^static void decodeftppath(const char *path, char *addr, char *file, char *user,$/;"	f	file:
decodelen	rcv/javad.c	/^static int decodelen(const unsigned char *buff)$/;"	f	file:
decodetcppath	stream.c	/^static void decodetcppath(const char *path, char *addr, char *port, char *user,$/;"	f	file:
deg2dms	rtkcmn.c	/^extern void deg2dms(double deg, double *dms)$/;"	f
degf	rtklib.h	/^    int degf;           \/* latitude\/longitude format (0:ddd.ddd,1:ddd mm ss) *\/$/;"	m	struct:__anon89
degfcorr	sbas.c	/^static double degfcorr(int ai)$/;"	f	file:
del	rtklib.h	/^    double del[3];      \/* antenna position delta (e\/n\/u or x\/y\/z) (m) *\/$/;"	m	struct:__anon81
delay	gps_common.h	/^    float delay;        \/* vertical delay estimate (m) *\/$/;"	m	struct:__anon58
deln	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
deltype	rtklib.h	/^    int deltype;        \/* antenna delta type (0:enu,1:xyz) *\/$/;"	m	struct:__anon81
deph	gps_common.h	/^    double deph [3];    \/* delta orbit {radial,along,cross} (m) *\/$/;"	m	struct:__anon61
deq	ephemeris.c	/^static void deq(const double *x, double *xdot, const double *acc)$/;"	f	file:
desig	rtklib.h	/^    char desig[16];     \/* international designator *\/$/;"	m	struct:__anon72
dev	stream.c	/^    dev_t dev;              \/* serial device *\/$/;"	m	struct:__anon1	file:
dev_t	stream.c	86;"	d	file:
dev_t	stream.c	90;"	d	file:
dgemm_	rtkcmn.c	299;"	d	file:
dgetrf_	rtkcmn.c	300;"	d	file:
dgetri_	rtkcmn.c	301;"	d	file:
dgetrs_	rtkcmn.c	302;"	d	file:
dgps	gps_common.h	/^    dgps_t dgps[MAXSAT]; \/* DGPS corrections *\/$/;"	m	struct:__anon64
dgps	rtklib.h	/^    dgps_t *dgps;       \/* output of dgps corrections *\/$/;"	m	struct:__anon85
dgps_t	gps_common.h	/^} dgps_t;$/;"	t	typeref:struct:__anon60
dir	rtklib.h	/^    char dir [1024];    \/* local directory *\/$/;"	m	struct:__anon87
discontcp	stream.c	/^static void discontcp(tcp_t *tcp, int tcon)$/;"	f	file:
dl	datum.c	/^    float db,dl;                    \/* difference of latitude\/longitude (sec) *\/$/;"	m	struct:__anon103	file:
dl_exec	download.c	/^extern int dl_exec(gtime_t ts, gtime_t te, double ti, int seqnos, int seqnoe,$/;"	f
dl_readstas	download.c	/^extern int dl_readstas(const char *file, char **stas, int nmax)$/;"	f
dl_readurls	download.c	/^extern int dl_readurls(const char *file, char **types, int ntype, url_t *urls,$/;"	f
dl_test	download.c	/^extern void dl_test(gtime_t ts, gtime_t te, double ti, const url_t *urls,$/;"	f
dlatdlon	datum.c	/^static int dlatdlon(const double *post, double *dpos)$/;"	f	file:
dmm2deg	solution.c	/^static double dmm2deg(double dmm)$/;"	f	file:
dms2deg	rtkcmn.c	/^extern double dms2deg(const double *dms)$/;"	f
dops	rtkcmn.c	/^extern void dops(int ns, const double *azel, double elmin, double *dop)$/;"	f
dot	rtkcmn.c	/^extern double dot(const double *a, const double *b, int n)$/;"	f
dpCA	rtklib.h	/^    double prCA[MAXSAT],dpCA[MAXSAT]; \/* L1\/CA pseudrange\/doppler for javad *\/$/;"	m	struct:__anon94
dpos	gps_common.h	/^    double dpos[3];     \/* delta position (m) (ecef) *\/$/;"	m	struct:__anon55
dt	gps_common.h	/^    double dt;          \/* range-rate correction delta-time (s) *\/$/;"	m	struct:__anon54
dtaun	gps_common.h	/^    double dtaun;       \/* delay between L1 and L2 (s) *\/$/;"	m	struct:__anon43
dtr	gps_common.h	/^    double dtr[6];      \/* receiver clock bias to time systems (s) *\/$/;"	m	struct:__anon68
dvel	gps_common.h	/^    double dvel[3];     \/* delta velocity (m\/s) (ecef) *\/$/;"	m	struct:__anon55
dynamics	gps_common.h	/^    int dynamics;       \/* dynamics model (0:none,1:velociy,2:accel) *\/$/;"	m	struct:__anon67
e	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
e	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
ecc	rtklib.h	/^    double ecc;         \/* eccentricity *\/$/;"	m	struct:__anon72
ecef2enu	rtkcmn.c	/^extern void ecef2enu(const double *pos, const double *r, double *e)$/;"	f
ecef2pos	rtkcmn.c	/^extern void ecef2pos(const double *r, double *pos)$/;"	f
eci2ecef	rtkcmn.c	/^extern void eci2ecef(gtime_t tutc, const double *erpv, double *U, double *gmst)$/;"	f
el	rtklib.h	/^    float az,el;        \/* azimuth\/elevation angle (rad) *\/$/;"	m	struct:__anon83
eleno	rtklib.h	/^    int eleno;          \/* element number *\/$/;"	m	struct:__anon72
elmask_	options.c	/^static double elmask_,elmaskar_,elmaskhold_;$/;"	v	file:
elmaskar	gps_common.h	/^    double elmaskar;    \/* elevation mask of AR for rising satellite (deg) *\/$/;"	m	struct:__anon67
elmaskar_	options.c	/^static double elmask_,elmaskar_,elmaskhold_;$/;"	v	file:
elmaskhold	gps_common.h	/^    double elmaskhold;  \/* elevation mask to hold ambiguity (deg) *\/$/;"	m	struct:__anon67
elmaskhold_	options.c	/^static double elmask_,elmaskar_,elmaskhold_;$/;"	v	file:
elmin	gps_common.h	/^    double elmin;       \/* elevation mask angle (rad) *\/$/;"	m	struct:__anon67
ena	gps_common.h	/^    int ena[2];         \/* enable flag {rover,base} *\/$/;"	m	struct:__anon65
ena	gps_common.h	/^    int ena[4];         \/* model enabled *\/$/;"	m	struct:__anon66
encbase64	stream.c	/^static int encbase64(char *str, const unsigned char *byte, int n)$/;"	f	file:
encode_eph_gal	rtcm3e.c	/^static int encode_eph_gal(int type, rtcm_t *rtcm, int sync)$/;"	f	file:
encode_head	rtcm3e.c	/^static int encode_head(int type, rtcm_t *rtcm, int sys, int sync, int nsat)$/;"	f	file:
encode_msm1	rtcm3e.c	/^static int encode_msm1(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm2	rtcm3e.c	/^static int encode_msm2(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm3	rtcm3e.c	/^static int encode_msm3(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm4	rtcm3e.c	/^static int encode_msm4(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm5	rtcm3e.c	/^static int encode_msm5(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm6	rtcm3e.c	/^static int encode_msm6(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm7	rtcm3e.c	/^static int encode_msm7(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_msm_cnr	rtcm3e.c	/^static int encode_msm_cnr(rtcm_t *rtcm, int i, const float *cnr, int ncell)$/;"	f	file:
encode_msm_cnr_ex	rtcm3e.c	/^static int encode_msm_cnr_ex(rtcm_t *rtcm, int i, const float *cnr, int ncell)$/;"	f	file:
encode_msm_half_amb	rtcm3e.c	/^static int encode_msm_half_amb(rtcm_t *rtcm, int i, const unsigned char *half,$/;"	f	file:
encode_msm_head	rtcm3e.c	/^static int encode_msm_head(int type, rtcm_t *rtcm, int sys, int sync, int *nsat,$/;"	f	file:
encode_msm_info	rtcm3e.c	/^static int encode_msm_info(rtcm_t *rtcm, int i, const unsigned char *info,$/;"	f	file:
encode_msm_int_rrng	rtcm3e.c	/^static int encode_msm_int_rrng(rtcm_t *rtcm, int i, const double *rrng,$/;"	f	file:
encode_msm_lock	rtcm3e.c	/^static int encode_msm_lock(rtcm_t *rtcm, int i, const int *lock, int ncell)$/;"	f	file:
encode_msm_lock_ex	rtcm3e.c	/^static int encode_msm_lock_ex(rtcm_t *rtcm, int i, const int *lock, int ncell)$/;"	f	file:
encode_msm_mod_rrng	rtcm3e.c	/^static int encode_msm_mod_rrng(rtcm_t *rtcm, int i, const double *rrng,$/;"	f	file:
encode_msm_phrng	rtcm3e.c	/^static int encode_msm_phrng(rtcm_t *rtcm, int i, const double *phrng, int ncell)$/;"	f	file:
encode_msm_phrng_ex	rtcm3e.c	/^static int encode_msm_phrng_ex(rtcm_t *rtcm, int i, const double *phrng,$/;"	f	file:
encode_msm_psrng	rtcm3e.c	/^static int encode_msm_psrng(rtcm_t *rtcm, int i, const double *psrng, int ncell)$/;"	f	file:
encode_msm_psrng_ex	rtcm3e.c	/^static int encode_msm_psrng_ex(rtcm_t *rtcm, int i, const double *psrng,$/;"	f	file:
encode_msm_rate	rtcm3e.c	/^static int encode_msm_rate(rtcm_t *rtcm, int i, const double *rate, int ncell)$/;"	f	file:
encode_msm_rrate	rtcm3e.c	/^static int encode_msm_rrate(rtcm_t *rtcm, int i, const double *rrate, int nsat)$/;"	f	file:
encode_rtcm3	rtcm3e.c	/^extern int encode_rtcm3(rtcm_t *rtcm, int type, int sync)$/;"	f
encode_ssr1	rtcm3e.c	/^static int encode_ssr1(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr2	rtcm3e.c	/^static int encode_ssr2(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr3	rtcm3e.c	/^static int encode_ssr3(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr4	rtcm3e.c	/^static int encode_ssr4(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr5	rtcm3e.c	/^static int encode_ssr5(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr6	rtcm3e.c	/^static int encode_ssr6(rtcm_t *rtcm, int sys, int sync)$/;"	f	file:
encode_ssr_head	rtcm3e.c	/^static int encode_ssr_head(int type, rtcm_t *rtcm, int sys, int nsat, int sync,$/;"	f	file:
encode_type1001	rtcm3e.c	/^static int encode_type1001(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1002	rtcm3e.c	/^static int encode_type1002(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1003	rtcm3e.c	/^static int encode_type1003(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1004	rtcm3e.c	/^static int encode_type1004(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1005	rtcm3e.c	/^static int encode_type1005(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1006	rtcm3e.c	/^static int encode_type1006(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1007	rtcm3e.c	/^static int encode_type1007(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1008	rtcm3e.c	/^static int encode_type1008(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1009	rtcm3e.c	/^static int encode_type1009(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1010	rtcm3e.c	/^static int encode_type1010(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1011	rtcm3e.c	/^static int encode_type1011(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1012	rtcm3e.c	/^static int encode_type1012(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1019	rtcm3e.c	/^static int encode_type1019(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1020	rtcm3e.c	/^static int encode_type1020(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1033	rtcm3e.c	/^static int encode_type1033(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1044	rtcm3e.c	/^static int encode_type1044(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1045	rtcm3e.c	/^static int encode_type1045(rtcm_t *rtcm, int sync)$/;"	f	file:
encode_type1046	rtcm3e.c	/^static int encode_type1046(rtcm_t *rtcm, int sync)$/;"	f	file:
end	rtklib.h	/^    int start,end;      \/* start\/end index *\/$/;"	m	struct:__anon82
endfile	rcv/javad.c	/^static int endfile(raw_t *raw)$/;"	f	file:
enu2ecef	rtkcmn.c	/^extern void enu2ecef(const double *pos, const double *e, double *r)$/;"	f
enum2str	options.c	/^static int enum2str(char *s, const char *comment, int val)$/;"	f	file:
eop	rtklib.h	/^    char eop    [MAXSTRPATH]; \/* eop data file *\/$/;"	m	struct:__anon90
eph	gps_common.h	/^    eph_t *eph;         \/* GPS\/QZS\/GAL ephemeris *\/$/;"	m	struct:__anon64
eph2clk	ephemeris.c	/^extern double eph2clk(gtime_t time, const eph_t *eph)$/;"	f
eph2pos	ephemeris.c	/^extern void eph2pos(gtime_t time, const eph_t *eph, double *rs, double *dts,$/;"	f
eph_t	gps_common.h	/^} eph_t;$/;"	t	typeref:struct:__anon42
ephclk	ephemeris.c	/^static int ephclk(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
ephpos	ephemeris.c	/^static int ephpos(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
ephsat	rtklib.h	/^    int    ephsat;      \/* ephemeris satellite number *\/$/;"	m	struct:__anon86
ephsat	rtklib.h	/^    int ephsat;         \/* sat number of update ephemeris (0:no satellite) *\/$/;"	m	struct:__anon94
ephsat	rtklib.h	/^    int ephsat;         \/* update satellite of ephemeris *\/$/;"	m	struct:__anon85
ephsat	rtklib.h	/^    int ephsat[32];     \/* satellites of output ephemeris *\/$/;"	m	struct:__anon96
epoch	rtklib.h	/^    gtime_t epoch;      \/* element set epoch (UTC) *\/$/;"	m	struct:__anon72
epoch	rtklib.h	/^    gtime_t epoch[4];   \/* last epoch *\/$/;"	m	struct:__anon92
epoch2time	rtkcmn.c	/^extern gtime_t epoch2time(const double *ep)$/;"	f
eratio	gps_common.h	/^    double eratio[NFREQ]; \/* code\/phase error ratio *\/$/;"	m	struct:__anon67
erp	gps_common.h	/^    erp_t  erp;         \/* earth rotation parameters *\/$/;"	m	struct:__anon64
erp_t	gps_common.h	/^} erp_t;$/;"	t	typeref:struct:__anon52
erpd_t	gps_common.h	/^} erpd_t;$/;"	t	typeref:struct:__anon51
err	gps_common.h	/^    double err[5];      \/* measurement error factor *\/$/;"	m	struct:__anon67
errbuf	rtklib.h	/^    char errbuf[MAXERRMSG]; \/* error message buffer *\/$/;"	m	struct:__anon93
error	stream.c	/^    int error;              \/* error code (0:no error,1-10:wget error, *\/$/;"	m	struct:__anon7	file:
error	stream.c	/^    int error;              \/* error state *\/$/;"	m	struct:__anon1	file:
errsock	stream.c	/^static int errsock(void) {return WSAGetLastError();}$/;"	f	file:
errsock	stream.c	/^static int errsock(void) {return errno;}$/;"	f	file:
etype	rtklib.h	/^    int etype;          \/* element set type *\/$/;"	m	struct:__anon72
exec_down	download.c	/^static int exec_down(const path_t *path, char *remot_p, const char *usr,$/;"	f	file:
execcmd	rtkcmn.c	/^extern int execcmd(const char *cmd)$/;"	f
execcmd_to	download.c	/^extern int execcmd_to(const char *cmd)$/;"	f
exist_file	download.c	/^static int exist_file(const char *local)$/;"	f	file:
expath	rtkcmn.c	/^extern int expath(const char *path, char *paths[], int nmax)$/;"	f
exsats	gps_common.h	/^    unsigned char exsats[MAXSAT]; \/* excluded satellites (1:excluded,2:included) *\/$/;"	m	struct:__anon67
exsats	rtklib.h	/^    unsigned char exsats[MAXSAT]; \/* excluded satellites *\/$/;"	m	struct:__anon91
exsats_	options.c	/^static char exsats_[1024];$/;"	v	file:
exsign	rcv/novatel.c	/^static int exsign(unsigned int v, int bits)$/;"	f	file:
exterr	gps_common.h	/^    exterr_t exterr;    \/* extended receiver error model *\/$/;"	m	struct:__anon67
exterr_t	gps_common.h	/^} exterr_t;$/;"	t	typeref:struct:__anon66
eye	rtkcmn.c	/^extern double *eye(int n)$/;"	f
f0	gps_common.h	/^    double f0,f1,f2;    \/* SV clock parameters (af0,af1,af2) *\/$/;"	m	struct:__anon42
f0	gps_common.h	/^    double f0,f1;       \/* SV clock parameters (af0,af1) *\/$/;"	m	struct:__anon47
f1	gps_common.h	/^    double f0,f1,f2;    \/* SV clock parameters (af0,af1,af2) *\/$/;"	m	struct:__anon42
f1	gps_common.h	/^    double f0,f1;       \/* SV clock parameters (af0,af1) *\/$/;"	m	struct:__anon47
f2	gps_common.h	/^    double f0,f1,f2;    \/* SV clock parameters (af0,af1,af2) *\/$/;"	m	struct:__anon42
fatalerr	rtkcmn.c	/^static void fatalerr(const char *format, ...)$/;"	f	file:
fcn_glo	rtcm3e.c	/^static int fcn_glo(int sat, rtcm_t *rtcm)$/;"	f	file:
fcorr	gps_common.h	/^    sbsfcorr_t fcorr;   \/* fast correction *\/$/;"	m	struct:__anon56
fget2b	geoid.c	/^static short fget2b(FILE *fp, long off)$/;"	f	file:
fget4f	geoid.c	/^static float fget4f(FILE *fp, long off)$/;"	f	file:
fgetgsi	geoid.c	/^static double fgetgsi(FILE *fp, int nlon, int nlat, int i, int j)$/;"	f	file:
file	stream.c	/^    char file[1024];        \/* download file path *\/$/;"	m	struct:__anon7	file:
file_t	stream.c	/^} file_t;$/;"	t	typeref:struct:__anon2	file:
files	rtklib.h	/^    char files[3][MAXSTRPATH]; \/* download paths {rov,base,corr} *\/$/;"	m	struct:__anon98
filopt_	options.c	/^static filopt_t filopt_;$/;"	v	file:
filopt_t	rtklib.h	/^} filopt_t;$/;"	t	typeref:struct:__anon90
filter	rtkcmn.c	/^extern int filter(double *x, double *P, const double *H, const double *v,$/;"	f
filter_	rtkcmn.c	/^static int filter_(const double *x, const double *P, const double *H,$/;"	f	file:
fit	gps_common.h	/^    double fit;         \/* fit interval (h) *\/$/;"	m	struct:__anon42
fix	gps_common.h	/^    unsigned char fix [NFREQ]; \/* ambiguity fix flag (1:fix,2:float,3:hold) *\/$/;"	m	struct:__anon69
fixcnt	rtklib.h	/^    int fixcnt;         \/* fix counter *\/$/;"	m	struct:__anon92
flag	gps_common.h	/^    int flag;           \/* GPS\/QZS: L2 P data flag, CMP: nav type *\/$/;"	m	struct:__anon42
flag	rtklib.h	/^    int flag;           \/* general purpose flag *\/$/;"	m	struct:__anon94
flag	rtklib.h	/^    unsigned char flag; \/* flags: (vsat<<5)+(slip<<3)+fix *\/$/;"	m	struct:__anon83
flags	rtklib.h	/^    char flags[MAXSAT]; \/* fix flags *\/$/;"	m	struct:__anon92
flushobuf	rcv/javad.c	/^static int flushobuf(raw_t *raw)$/;"	f	file:
format	rtklib.h	/^    int format;         \/* option format (0:int,1:double,2:string,3:enum) *\/$/;"	m	struct:__anon88
format	rtklib.h	/^    int format[3];      \/* input format {rov,base,corr} *\/$/;"	m	struct:__anon98
formatstrs	rtkcmn.c	/^const char *formatstrs[]={      \/* stream format strings *\/$/;"	v
fp	stream.c	/^    FILE *fp;               \/* file pointer *\/$/;"	m	struct:__anon2	file:
fp_geoid	geoid.c	/^static FILE *fp_geoid=NULL;         \/* geoid file pointer *\/$/;"	v	file:
fp_tag	stream.c	/^    FILE *fp_tag;           \/* file pointer of tag file *\/$/;"	m	struct:__anon2	file:
fp_tag_tmp	stream.c	/^    FILE *fp_tag_tmp;       \/* temporary file pointer of tag file for swap *\/$/;"	m	struct:__anon2	file:
fp_tmp	stream.c	/^    FILE *fp_tmp;           \/* temporary file pointer for swap *\/$/;"	m	struct:__anon2	file:
fp_trace	rtkcmn.c	/^static FILE *fp_trace=NULL;     \/* file pointer of trace *\/$/;"	v	file:
fpos	stream.c	/^    unsigned int fpos;      \/* current file position *\/$/;"	m	struct:__anon2	file:
free_path	download.c	/^static void free_path(paths_t *paths)$/;"	f	file:
free_raw	rcvraw.c	/^extern void free_raw(raw_t *raw)$/;"	f
free_rnxctr	rinex.c	/^extern void free_rnxctr(rnxctr_t *rnx)$/;"	f
free_rtcm	rtcm.c	/^extern void free_rtcm(rtcm_t *rtcm)$/;"	f
freenav	rtkcmn.c	/^extern void freenav(nav_t *nav, int opt)$/;"	f
freeobs	rtkcmn.c	/^extern void freeobs(obs_t *obs)$/;"	f
freesolbuf	solution.c	/^extern void freesolbuf(solbuf_t *solbuf)$/;"	f
freesolstatbuf	solution.c	/^extern void freesolstatbuf(solstatbuf_t *solstatbuf)$/;"	f
freq_glo	rcv/javad.c	/^static double freq_glo(int freq, int freqn)$/;"	f	file:
freqn	rtklib.h	/^    char freqn[MAXOBS]; \/* frequency number for javad *\/$/;"	m	struct:__anon94
freqtype	rtklib.h	/^    int freqtype;       \/* frequency type *\/$/;"	m	struct:__anon91
frq	gps_common.h	/^    int frq;            \/* satellite frequency number *\/$/;"	m	struct:__anon43
frq	rinex.c	/^    int frq[MAXOBSTYPE];                \/* signal frequency (1:L1,2:L2,...) *\/$/;"	m	struct:__anon99	file:
frq	rinex_s.c	/^    int frq[MAXOBSTYPE];                \/* signal frequency (1:L1,2:L2,...) *\/$/;"	m	struct:__anon102	file:
frq	rtklib.h	/^    unsigned char frq;  \/* frequency (1:L1,2:L2,...) *\/$/;"	m	struct:__anon83
frqcodes	rinex.c	/^static const char frqcodes[]="125678";  \/* frequency codes *\/$/;"	v	file:
frqcodes	rinex_s.c	/^static const char frqcodes[]="125678";  \/* frequency codes *\/$/;"	v	file:
fswapmargin	stream.c	/^static int fswapmargin=30;  \/* file swap margin (s) *\/$/;"	v	file:
ftime	rtklib.h	/^    gtime_t ftime[3];   \/* download time {rov,base,corr} *\/$/;"	m	struct:__anon98
ftp_t	stream.c	/^} ftp_t;$/;"	t	typeref:struct:__anon7	file:
ftpthread	stream.c	/^static DWORD WINAPI ftpthread(void *arg)$/;"	f	file:
gamn	gps_common.h	/^    double taun,gamn;   \/* SV clock bias (s)\/relative freq bias *\/$/;"	m	struct:__anon43
gauss	lambda.c	/^static void gauss(int n, double *L, double *Z, int i, int j)$/;"	f	file:
geexe	rtklib.h	/^    char geexe  [MAXSTRPATH]; \/* google earth exec file *\/$/;"	m	struct:__anon90
gen_lexr	rcv/rcvlex.c	/^extern int gen_lexr(const char *msg, unsigned char *buff)$/;"	f
gen_lexr	rtkcmn.c	/^extern int gen_lexr(const char *msg, unsigned char *buff) {return 0;}$/;"	f
gen_msm_index	rtcm3e.c	/^static void gen_msm_index(rtcm_t *rtcm, int sys, int *nsat, int *nsig,$/;"	f	file:
gen_msm_sat	rtcm3e.c	/^static void gen_msm_sat(rtcm_t *rtcm, int sys, int nsat,$/;"	f	file:
gen_msm_sig	rtcm3e.c	/^static void gen_msm_sig(rtcm_t *rtcm, int sys, int nsat, int nsig, int ncell,$/;"	f	file:
gen_nvs	rcv/nvs.c	/^extern int gen_nvs(const char *msg, unsigned char *buff)$/;"	f
gen_obs_glo	rtcm3e.c	/^static void gen_obs_glo(rtcm_t *rtcm, const obsd_t *data, int fcn, int *code1,$/;"	f	file:
gen_obs_gps	rtcm3e.c	/^static void gen_obs_gps(rtcm_t *rtcm, const obsd_t *data, int *code1, int *pr1,$/;"	f	file:
gen_path	download.c	/^static int gen_path(gtime_t time, gtime_t time_p, int seqnos, int seqnoe,$/;"	f	file:
gen_paths	download.c	/^static int gen_paths(gtime_t time, gtime_t time_p, int seqnos, int seqnoe,$/;"	f	file:
gen_rtcm2	rtcm.c	/^extern int gen_rtcm2(rtcm_t *rtcm, int type, int sync)$/;"	f
gen_rtcm3	rtcm.c	/^extern int gen_rtcm3(rtcm_t *rtcm, int type, int sync)$/;"	f
gen_stq	rcv/skytraq.c	/^extern int gen_stq(const char *msg, unsigned char *buff)$/;"	f
gen_ubx	rcv/ublox.c	/^extern int gen_ubx(const char *msg, unsigned char *buff)$/;"	f
genmsg	rcv/rcvlex.c	/^static int genmsg(unsigned char *buff, unsigned short id, unsigned char *data,$/;"	f	file:
genpath	download.c	/^static void genpath(const char *file, const char *name, gtime_t time, int seqno,$/;"	f	file:
gentcp	stream.c	/^static int gentcp(tcp_t *tcp, int type, char *msg)$/;"	f	file:
geodist	rtkcmn.c	/^extern double geodist(const double *rs, const double *rr, double *e)$/;"	f
geoid	geoid.c	/^static const float geoid[361][181]; \/* embedded geoid heights (m) (lon x lat) *\/$/;"	v	file:
geoid	geoid.c	/^static const float geoid[361][181]={{$/;"	v	file:
geoid	rtklib.h	/^    char geoid  [MAXSTRPATH]; \/* external geoid data file *\/$/;"	m	struct:__anon90
geoid	rtklib.h	/^    int geoid;          \/* geoid model (0:EGM96,1:JGD2000) *\/$/;"	m	struct:__anon89
geoidh	geoid.c	/^extern double geoidh(const double *pos)$/;"	f
geoidh_egm08	geoid.c	/^static double geoidh_egm08(const double *pos, int model)$/;"	f	file:
geoidh_egm96	geoid.c	/^static double geoidh_egm96(const double *pos)$/;"	f	file:
geoidh_emb	geoid.c	/^static double geoidh_emb(const double *pos)$/;"	f	file:
geoidh_gsi	geoid.c	/^static double geoidh_gsi(const double *pos)$/;"	f	file:
geph	gps_common.h	/^    geph_t *geph;       \/* GLONASS ephemeris *\/$/;"	m	struct:__anon64
geph2clk	ephemeris.c	/^extern double geph2clk(gtime_t time, const geph_t *geph)$/;"	f
geph2pos	ephemeris.c	/^extern void geph2pos(gtime_t time, const geph_t *geph, double *rs, double *dts,$/;"	f
geph_t	gps_common.h	/^} geph_t;$/;"	t	typeref:struct:__anon43
get_list	download.c	/^static int get_list(const path_t *path, const char *usr, const char *pwd,$/;"	f	file:
getbitg	rtcm3.c	/^static double getbitg(const unsigned char *buff, int pos, int len)$/;"	f	file:
getbits	rtkcmn.c	/^extern int getbits(const unsigned char *buff, int pos, int len)$/;"	f
getbits_33	qzslex.c	/^static double getbits_33(const unsigned char *buff, int pos)$/;"	f	file:
getbits_38	rtcm3.c	/^static double getbits_38(const unsigned char *buff, int pos)$/;"	f	file:
getbitu	rtkcmn.c	/^extern unsigned int getbitu(const unsigned char *buff, int pos, int len)$/;"	f
getbnxi	rcv/binex.c	/^static int getbnxi(unsigned char *p, unsigned int *val)$/;"	f	file:
getcodepri	rtkcmn.c	/^extern int getcodepri(int sys, unsigned char code, const char *opt)$/;"	f
geterp	rtkcmn.c	/^extern int geterp(const erp_t *erp, gtime_t time, double *erpv)$/;"	f
getfield	sbas.c	/^static char *getfield(char *p, int pos)$/;"	f	file:
getindex	ionex.c	/^static int getindex(double value, const double *range)$/;"	f	file:
getmet	sbas.c	/^static void getmet(double lat, double *met)$/;"	f	file:
getsol	solution.c	/^extern sol_t *getsol(solbuf_t *solbuf, int index)$/;"	f
getsysopts	options.c	/^extern void getsysopts(prcopt_t *popt, solopt_t *sopt, filopt_t *fopt)$/;"	f
gf	gps_common.h	/^    double  gf;         \/* geometry-free phase L1-L2 (m) *\/$/;"	m	struct:__anon69
gf2	gps_common.h	/^    double  gf2;        \/* geometry-free phase L1-L5 (m) *\/$/;"	m	struct:__anon69
give	gps_common.h	/^    short give;         \/* GIVI+1 *\/$/;"	m	struct:__anon58
glo_cpbias	gps_common.h	/^    double glo_cpbias[4];    \/* glonass code-phase bias {1C,1P,2C,2P} (m) *\/$/;"	m	struct:__anon64
glo_fcn	gps_common.h	/^    char glo_fcn[MAXPRNGLO+1]; \/* glonass frequency channel number + 8 *\/$/;"	m	struct:__anon64
gloicb	gps_common.h	/^    double gloicb [NFREQ]; \/* glonass interchannel bias (m\/fn) *\/$/;"	m	struct:__anon66
glomodear	gps_common.h	/^    int glomodear;      \/* GLONASS AR mode (0:off,1:on,2:auto cal,3:ext cal) *\/$/;"	m	struct:__anon67
glorbit	ephemeris.c	/^static void glorbit(double t, double *x, const double *acc)$/;"	f	file:
gpsglob	gps_common.h	/^    double gpsglob[NFREQ]; \/* gps-glonass h\/w bias (m) *\/$/;"	m	struct:__anon66
gpst0	rtkcmn.c	/^static const  double gpst0[]={1980,1, 6,0,0,0}; \/* gps time reference *\/$/;"	v	file:
gpst2bdt	rtkcmn.c	/^extern gtime_t gpst2bdt(gtime_t t)$/;"	f
gpst2time	rtkcmn.c	/^extern gtime_t gpst2time(int week, double sec)$/;"	f
gpst2utc	rtkcmn.c	/^extern gtime_t gpst2utc(gtime_t t)$/;"	f
gst0	rtkcmn.c	/^static const double gst0 []={1999,8,22,0,0,0}; \/* galileo system time reference *\/$/;"	v	file:
gst2time	rtkcmn.c	/^extern gtime_t gst2time(int week, double sec)$/;"	f
gtime_t	gps_common.h	/^} gtime_t;$/;"	t	typeref:struct:__anon39
halfc	rtklib.h	/^    unsigned char halfc[MAXSAT][NFREQ+NEXOBS]; \/* half-cycle add flag *\/$/;"	m	struct:__anon94
health	gps_common.h	/^    unsigned char health; \/* signal health (L1,L2,L1C,L5,LEX) *\/$/;"	m	struct:__anon62
height	rtklib.h	/^    int height;         \/* height (0:ellipsoidal,1:geodetic) *\/$/;"	m	struct:__anon89
hgt	rtklib.h	/^    double hgt;         \/* antenna height (m) *\/$/;"	m	struct:__anon81
hgts	gps_common.h	/^    double hgts[3];     \/* heights start\/interval (km) *\/$/;"	m	struct:__anon48
hrclk	gps_common.h	/^    double hrclk;       \/* high-rate clock corection (m) *\/$/;"	m	struct:__anon61
i0	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
i0	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
icpc	rtklib.h	/^    double icpp[MAXSAT],off[MAXSAT],icpc; \/* carrier params for ss2 *\/$/;"	m	struct:__anon94
icpp	rtklib.h	/^    double icpp[MAXSAT],off[MAXSAT],icpc; \/* carrier params for ss2 *\/$/;"	m	struct:__anon94
idot	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
igp	gps_common.h	/^    sbsigp_t igp[MAXNIGP]; \/* ionospheric correction *\/$/;"	m	struct:__anon59
igpband1	sbas.c	/^const sbsigpband_t igpband1[9][8]={ \/* band 0-8 *\/$/;"	v
igpband2	sbas.c	/^const sbsigpband_t igpband2[2][5]={ \/* band 9-10 *\/$/;"	v
imat	rtkcmn.c	/^extern int *imat(int n, int m)$/;"	f
inb	rtklib.h	/^    unsigned int inb,inr;   \/* input bytes\/rate *\/$/;"	m	struct:__anon95
inbt	rtklib.h	/^    unsigned int inbt,outbt; \/* input\/output bytes at tick *\/$/;"	m	struct:__anon95
inc	rtklib.h	/^    double inc;         \/* orbit inclination (deg) *\/$/;"	m	struct:__anon72
index	gps_common.h	/^    int index;          \/* clock index for multiple files *\/$/;"	m	struct:__anon46
index	gps_common.h	/^    int index;          \/* ephemeris index for multiple files *\/$/;"	m	struct:__anon45
index	gps_common.h	/^    int index[MAXSAT];  \/* search index *\/$/;"	m	struct:__anon50
init_raw	rcvraw.c	/^extern int init_raw(raw_t *raw)$/;"	f
init_rnxctr	rinex.c	/^extern int init_rnxctr(rnxctr_t *rnx)$/;"	f
init_rtcm	rtcm.c	/^extern int init_rtcm(rtcm_t *rtcm)$/;"	f
init_sta	rinex.c	/^static void init_sta(sta_t *sta)$/;"	f	file:
init_sta	rinex_s.c	/^static void init_sta(sta_t *sta)$/;"	f	file:
initlock	rtklib.h	450;"	d
initlock	rtklib.h	457;"	d
initsolbuf	solution.c	/^extern void initsolbuf(solbuf_t *solbuf, int cyclic, int nmax)$/;"	f
input_bnx	rcv/binex.c	/^extern int input_bnx(raw_t *raw, unsigned char data)$/;"	f
input_bnxf	rcv/binex.c	/^extern int input_bnxf(raw_t *raw, FILE *fp)$/;"	f
input_cres	rcv/crescent.c	/^extern int input_cres(raw_t *raw, unsigned char data)$/;"	f
input_cresf	rcv/crescent.c	/^extern int input_cresf(raw_t *raw, FILE *fp)$/;"	f
input_gw10	rcv/gw10.c	/^extern int input_gw10(raw_t *raw, unsigned char data)$/;"	f
input_gw10f	rcv/gw10.c	/^extern int input_gw10f(raw_t *raw, FILE *fp)$/;"	f
input_javad	rcv/javad.c	/^extern int input_javad(raw_t *raw, unsigned char data)$/;"	f
input_javadf	rcv/javad.c	/^extern int input_javadf(raw_t *raw, FILE *fp)$/;"	f
input_lexr	rcv/rcvlex.c	/^extern int input_lexr(raw_t *raw, unsigned char data)$/;"	f
input_lexr	rtkcmn.c	/^extern int input_lexr(raw_t *raw, unsigned char data) {return 0;}$/;"	f
input_lexrf	rcv/rcvlex.c	/^extern int input_lexrf(raw_t *raw, FILE *fp)$/;"	f
input_lexrf	rtkcmn.c	/^extern int input_lexrf(raw_t *raw, FILE *fp) {return 0;}$/;"	f
input_nvs	rcv/nvs.c	/^extern int input_nvs(raw_t *raw, unsigned char data)$/;"	f
input_nvsf	rcv/nvs.c	/^extern int input_nvsf(raw_t *raw, FILE *fp)$/;"	f
input_oem3	rcv/novatel.c	/^extern int input_oem3(raw_t *raw, unsigned char data)$/;"	f
input_oem3f	rcv/novatel.c	/^extern int input_oem3f(raw_t *raw, FILE *fp)$/;"	f
input_oem4	rcv/novatel.c	/^extern int input_oem4(raw_t *raw, unsigned char data)$/;"	f
input_oem4f	rcv/novatel.c	/^extern int input_oem4f(raw_t *raw, FILE *fp)$/;"	f
input_raw	rcvraw.c	/^extern int input_raw(raw_t *raw, int format, unsigned char data)$/;"	f
input_rawf	rcvraw.c	/^extern int input_rawf(raw_t *raw, int format, FILE *fp)$/;"	f
input_rnxctr	rinex.c	/^extern int input_rnxctr(rnxctr_t *rnx, FILE *fp)$/;"	f
input_rtcm2	rtcm.c	/^extern int input_rtcm2(rtcm_t *rtcm, unsigned char data)$/;"	f
input_rtcm2f	rtcm.c	/^extern int input_rtcm2f(rtcm_t *rtcm, FILE *fp)$/;"	f
input_rtcm3	rtcm.c	/^extern int input_rtcm3(rtcm_t *rtcm, unsigned char data)$/;"	f
input_rtcm3f	rtcm.c	/^extern int input_rtcm3f(rtcm_t *rtcm, FILE *fp)$/;"	f
input_ss2	rcv/ss2.c	/^extern int input_ss2(raw_t *raw, unsigned char data)$/;"	f
input_ss2f	rcv/ss2.c	/^extern int input_ss2f(raw_t *raw, FILE *fp)$/;"	f
input_stq	rcv/skytraq.c	/^extern int input_stq(raw_t *raw, unsigned char data)$/;"	f
input_stqf	rcv/skytraq.c	/^extern int input_stqf(raw_t *raw, FILE *fp)$/;"	f
input_ubx	rcv/ublox.c	/^extern int input_ubx(raw_t *raw, unsigned char data)$/;"	f
input_ubxf	rcv/ublox.c	/^extern int input_ubxf(raw_t *raw, FILE *fp)$/;"	f
inputsol	solution.c	/^extern int inputsol(unsigned char data, gtime_t ts, gtime_t te, double tint,$/;"	f
inr	rtklib.h	/^    unsigned int inb,inr;   \/* input bytes\/rate *\/$/;"	m	struct:__anon95
interpb	geoid.c	/^static double interpb(const double *y, double a, double b)$/;"	f	file:
interpc	rtkcmn.c	/^static double interpc(const double coef[], double lat)$/;"	f	file:
interppol	preceph.c	/^static double interppol(const double *x, double *y, int n)$/;"	f	file:
interptec	ionex.c	/^static int interptec(const tec_t *tec, int k, const double *posp, double *value,$/;"	f	file:
interpvar	rtkcmn.c	/^static double interpvar(double ang, const double *var)$/;"	f	file:
intpref	gps_common.h	/^    int intpref;        \/* interpolate reference obs (for post mission) *\/$/;"	m	struct:__anon67
iod	gps_common.h	/^    int iod;            \/* issue of data (IOD) *\/$/;"	m	struct:__anon60
iod	gps_common.h	/^    int iod[5];         \/* iod ssr {eph,clk,hrclk,ura,bias} *\/$/;"	m	struct:__anon61
iod	rtcm3.c	/^    unsigned char iod;              \/* issue of data station *\/$/;"	m	struct:__anon70	file:
iod	rtklib.h	/^    int iod;            \/* issue of data *\/$/;"	m	struct:__anon94
iodc	gps_common.h	/^    int iode,iodc;      \/* IODE,IODC *\/$/;"	m	struct:__anon42
iode	gps_common.h	/^    int iode,iodc;      \/* IODE,IODC *\/$/;"	m	struct:__anon42
iode	gps_common.h	/^    int iode;           \/* IODE (0-6 bit of tb field) *\/$/;"	m	struct:__anon43
iode	gps_common.h	/^    int iode;           \/* IODE (issue of date ephemeris) *\/$/;"	m	struct:__anon55
iode	gps_common.h	/^    int iode;           \/* issue of data *\/$/;"	m	struct:__anon61
iodf	gps_common.h	/^    int iodf;           \/* IODF (issue of date fast corr) *\/$/;"	m	struct:__anon54
iodi	gps_common.h	/^    int iodi;           \/* IODI (issue of date ionos corr) *\/$/;"	m	struct:__anon59
iodp	gps_common.h	/^    int iodp;           \/* IODP (issue of date mask) *\/$/;"	m	struct:__anon57
ion_cmp	gps_common.h	/^    double ion_cmp[8];  \/* BeiDou iono model parameters {a0,a1,a2,a3,b0,b1,b2,b3} *\/$/;"	m	struct:__anon64
ion_gal	gps_common.h	/^    double ion_gal[4];  \/* Galileo iono model parameters {ai0,ai1,ai2,0} *\/$/;"	m	struct:__anon64
ion_gps	gps_common.h	/^    double ion_gps[8];  \/* GPS iono model parameters {a0,a1,a2,a3,b0,b1,b2,b3} *\/$/;"	m	struct:__anon64
ion_qzs	gps_common.h	/^    double ion_qzs[8];  \/* QZSS iono model parameters {a0,a1,a2,a3,b0,b1,b2,b3} *\/$/;"	m	struct:__anon64
iondelay	ionex.c	/^static int iondelay(gtime_t time, const tec_t *tec, const double *pos,$/;"	f	file:
ionmapf	rtkcmn.c	/^extern double ionmapf(const double *pos, const double *azel)$/;"	f
ionmodel	rtkcmn.c	/^extern double ionmodel(gtime_t t, const double *ion, const double *pos,$/;"	f
iono	gps_common.h	/^    float iono;         \/* L1 ionosphere delay (m) *\/$/;"	m	struct:__anon49
iono	rtklib.h	/^    char iono   [MAXSTRPATH]; \/* ionosphere data file *\/$/;"	m	struct:__anon90
ionoopt	gps_common.h	/^    int ionoopt;        \/* ionosphere option (IONOOPT_???) *\/$/;"	m	struct:__anon67
ionppp	rtkcmn.c	/^extern double ionppp(const double *pos, const double *azel, double re,$/;"	f
iontec	ionex.c	/^extern int iontec(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
is_meas	rcv/javad.c	/^static int is_meas(char sig)$/;"	f	file:
is_navmsg	streamsvr.c	/^static int is_navmsg(int msg)$/;"	f	file:
is_obsmsg	streamsvr.c	/^static int is_obsmsg(int msg)$/;"	f	file:
is_stamsg	streamsvr.c	/^static int is_stamsg(int msg)$/;"	f	file:
is_tint	streamsvr.c	/^static int is_tint(gtime_t time, double tint)$/;"	f	file:
isc	gps_common.h	/^    double isc[8];      \/* ISC *\/$/;"	m	struct:__anon62
itrf	rtklib.h	/^    int itrf;           \/* ITRF realization year *\/$/;"	m	struct:__anon81
itype	rtklib.h	/^    int itype,otype;    \/* input and output stream type *\/$/;"	m	struct:__anon96
jerk	gps_common.h	/^    double jerk[3];     \/* satellite jerk (m\/s3) *\/$/;"	m	struct:__anon62
jgd2tokyo	datum.c	/^extern int jgd2tokyo(double *pos)$/;"	f
lam	gps_common.h	/^    double lam[MAXSAT][NFREQ]; \/* carrier wave lengths (m) *\/$/;"	m	struct:__anon64
lam_carr	rtkcmn.c	/^const double lam_carr[]={       \/* carrier wave length (m) *\/$/;"	v
lambda	lambda.c	/^extern int lambda(int n, int m, const double *a, const double *Q, double *F,$/;"	f
lat	gps_common.h	/^    short lat,lon;      \/* latitude\/longitude (deg) *\/$/;"	m	struct:__anon58
lats	gps_common.h	/^    double lats[3];     \/* latitude start\/interval (deg) *\/$/;"	m	struct:__anon48
lcorr	gps_common.h	/^    sbslcorr_t lcorr;   \/* long term correction *\/$/;"	m	struct:__anon56
leaps	gps_common.h	/^    int leaps;          \/* leap seconds (s) *\/$/;"	m	struct:__anon64
leaps	rtkcmn.c	/^static const double leaps[][7]={ \/* leap seconds {y,m,d,h,m,s,utc-gpst,...} *\/$/;"	v	file:
len	rtklib.h	/^    int len;            \/* message length (bytes) *\/$/;"	m	struct:__anon85
len	rtklib.h	/^    int len;            \/* message length (bytes) *\/$/;"	m	struct:__anon94
level_trace	rtkcmn.c	/^static int level_trace=0;       \/* level of trace *\/$/;"	v	file:
lex2rtcm	qzslex.c	/^static int lex2rtcm(const unsigned char *msg, int i, unsigned char *buff)$/;"	f	file:
lex_t	rtklib.h	/^} lex_t;$/;"	t	typeref:struct:__anon80
lexconvbin	qzslex.c	/^extern int lexconvbin(int type, int format, const char *infile,$/;"	f
lexeph	gps_common.h	/^    lexeph_t lexeph[MAXSAT]; \/* LEX ephemeris *\/$/;"	m	struct:__anon64
lexeph2pos	qzslex.c	/^extern int lexeph2pos(gtime_t time, int sat, const nav_t *nav, double *rs,$/;"	f
lexeph_t	gps_common.h	/^} lexeph_t;$/;"	t	typeref:struct:__anon62
lexion	gps_common.h	/^    lexion_t lexion;    \/* LEX ionosphere correction *\/$/;"	m	struct:__anon64
lexion_t	gps_common.h	/^} lexion_t;$/;"	t	typeref:struct:__anon63
lexioncorr	qzslex.c	/^extern int lexioncorr(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
lexmsg	rtklib.h	/^    lexmsg_t lexmsg;    \/* LEX message *\/$/;"	m	struct:__anon94
lexmsg_t	rtklib.h	/^} lexmsg_t;$/;"	t	typeref:struct:__anon79
lexoutmsg	qzslex.c	/^extern void lexoutmsg(FILE *fp, const lexmsg_t *msg)$/;"	f
lexreadmsg	qzslex.c	/^extern int lexreadmsg(const char *file, int sel, lex_t *lex)$/;"	f
lexupdatecorr	qzslex.c	/^extern int lexupdatecorr(const lexmsg_t *msg, nav_t *nav, gtime_t *tof)$/;"	f
lltime	rtklib.h	/^    gtime_t lltime[MAXSAT][NFREQ+NEXOBS]; \/* last lock time *\/$/;"	m	struct:__anon85
loaddatump	datum.c	/^extern int loaddatump(const char *file)$/;"	f
loadopts	options.c	/^extern int loadopts(const char *file, opt_t *opts)$/;"	f
local	download.c	/^    char *local;                    \/* local path *\/$/;"	m	struct:__anon100	file:
local	stream.c	/^    char local[1024];       \/* local file path *\/$/;"	m	struct:__anon7	file:
localdir	stream.c	/^static char localdir[1024]=""; \/* local directory for ftp\/http *\/$/;"	v	file:
lock	gps_common.h	/^    unsigned int lock [NFREQ]; \/* lock counter of phase *\/$/;"	m	struct:__anon69
lock	rtklib.h	/^    lock_t lock;        \/* lock flag *\/$/;"	m	struct:__anon95
lock	rtklib.h	/^    lock_t lock;        \/* lock flag *\/$/;"	m	struct:__anon97
lock	rtklib.h	/^    lock_t lock;        \/* lock flag *\/$/;"	m	struct:__anon98
lock	rtklib.h	/^    unsigned char lock[MAXSAT][NFREQ+NEXOBS]; \/* lock time *\/$/;"	m	struct:__anon85
lock	rtklib.h	/^    unsigned short lock;  \/* lock counter *\/$/;"	m	struct:__anon83
lock	rtklib.h	451;"	d
lock	rtklib.h	458;"	d
lock	stream.c	/^    lock_t lock;            \/* lock flag *\/$/;"	m	struct:__anon1	file:
lock	stream.c	/^    lock_t lock;            \/* lock flag *\/$/;"	m	struct:__anon2	file:
lock_t	rtklib.h	449;"	d
lock_t	rtklib.h	456;"	d
lockt	rtklib.h	/^    double lockt[MAXSAT][NFREQ+NEXOBS]; \/* lock time (s) *\/$/;"	m	struct:__anon94
locktime	rtcm3e.c	/^static int locktime(gtime_t time, gtime_t *lltime, unsigned char LLI)$/;"	f	file:
lod	gps_common.h	/^    double lod;         \/* length of day (s\/day) *\/$/;"	m	struct:__anon51
lon	gps_common.h	/^    short lat,lon;      \/* latitude\/longitude (deg) *\/$/;"	m	struct:__anon58
lons	gps_common.h	/^    double lons[3];     \/* longitude start\/interval (deg) *\/$/;"	m	struct:__anon48
loss	rtklib.h	/^    unsigned char loss[MAXSAT][NFREQ+NEXOBS]; \/* loss of lock count *\/$/;"	m	struct:__anon85
lossoflock	rtcm3.c	/^static int lossoflock(rtcm_t *rtcm, int sat, int freq, int lock)$/;"	f	file:
lsq	rtkcmn.c	/^extern int lsq(const double *A, const double *y, int n, int m, double *x,$/;"	f
lubksb	rtkcmn.c	/^static void lubksb(const double *A, int n, const int *indx, double *b)$/;"	f	file:
ludcmp	rtkcmn.c	/^static int ludcmp(double *A, int n, int *indx, double *d)$/;"	f	file:
mapf	rtkcmn.c	/^static double mapf(double el, double a, double b, double c)$/;"	f	file:
marker	rtklib.h	/^    char marker [MAXANT]; \/* marker number *\/$/;"	m	struct:__anon81
marker	rtklib.h	/^    char marker[64];    \/* marker name *\/$/;"	m	struct:__anon91
markerno	rtklib.h	/^    char markerno[32];  \/* marker number *\/$/;"	m	struct:__anon91
markertype	rtklib.h	/^    char markertype[32]; \/* marker type (ver.3) *\/$/;"	m	struct:__anon91
mask	gps_common.h	/^    double mask[NFREQ][9]; \/* mask (dBHz) at 5,10,...85 deg *\/$/;"	m	struct:__anon65
mask	rtklib.h	/^    char mask[6][64];   \/* code mask {GPS,GLO,GAL,QZS,SBS,CMP} *\/$/;"	m	struct:__anon91
mat	rtkcmn.c	/^extern double *mat(int n, int m)$/;"	f
matcpy	rtkcmn.c	/^extern void matcpy(double *A, const double *B, int n, int m)$/;"	f
matfprint	rtkcmn.c	/^extern void matfprint(const double A[], int n, int m, int p, int q, FILE *fp)$/;"	f
matinv	rtkcmn.c	/^extern int matinv(double *A, int n)$/;"	f
matmul	rtkcmn.c	/^extern void matmul(const char *tr, int n, int k, int m, double alpha,$/;"	f
matprint	rtkcmn.c	/^extern void matprint(const double A[], int n, int m, int p, int q)$/;"	f
maxgdop	gps_common.h	/^    double maxgdop;     \/* reject threshold of gdop *\/$/;"	m	struct:__anon67
maxinno	gps_common.h	/^    double maxinno;     \/* reject threshold of innovation (m) *\/$/;"	m	struct:__anon67
maxout	gps_common.h	/^    int maxout;         \/* obs outage count to reset bias *\/$/;"	m	struct:__anon67
maxtdiff	gps_common.h	/^    double maxtdiff;    \/* max difference of time (sec) *\/$/;"	m	struct:__anon67
minfix	gps_common.h	/^    int minfix;         \/* min fix count to hold ambiguity *\/$/;"	m	struct:__anon67
minlock	gps_common.h	/^    int minlock;        \/* min lock count to fix ambiguity *\/$/;"	m	struct:__anon67
mjd	gps_common.h	/^    double mjd;         \/* mjd (days) *\/$/;"	m	struct:__anon51
mkdir_r	download.c	/^static int mkdir_r(const char *dir)$/;"	f	file:
mntpnt	stream.c	/^    char mntpnt[256];       \/* mountpoint *\/$/;"	m	struct:__anon6	file:
mode	gps_common.h	/^    int mode;           \/* positioning mode (PMODE_???) *\/$/;"	m	struct:__anon67
mode	rtklib.h	/^    int mode;           \/* mode (STR_MODE_?) *\/$/;"	m	struct:__anon95
mode	stream.c	/^    int mode;               \/* file mode *\/$/;"	m	struct:__anon2	file:
modear	gps_common.h	/^    int modear;         \/* AR mode (0:off,1:continuous,2:instantaneous,3:fix and hold,4:ppp-ar) *\/$/;"	m	struct:__anon67
model_geoid	geoid.c	/^static int model_geoid=GEOID_EMBEDDED; \/* geoid model *\/$/;"	v	file:
moni	rtklib.h	/^    stream_t *moni;     \/* monitor stream *\/$/;"	m	struct:__anon98
msg	rtklib.h	/^    char msg [MAXSTRMSG];  \/* stream message *\/$/;"	m	struct:__anon95
msg	rtklib.h	/^    char msg[128];      \/* special message *\/$/;"	m	struct:__anon85
msg	rtklib.h	/^    unsigned char msg[212]; \/* LEX message data part 1695 bits *\/$/;"	m	struct:__anon79
msg	rtklib.h	/^    unsigned char msg[29]; \/* SBAS message (226bit) padded by 0 *\/$/;"	m	struct:__anon76
msglen	rcv/gw10.c	/^static int msglen(unsigned char id)$/;"	f	file:
msgs	rtklib.h	/^    int msgs[32];       \/* output message types *\/$/;"	m	struct:__anon96
msgs	rtklib.h	/^    lexmsg_t *msgs;     \/* LEX messages *\/$/;"	m	struct:__anon80
msgs	rtklib.h	/^    sbsmsg_t *msgs;     \/* SBAS messages *\/$/;"	m	struct:__anon77
msgtype	rtklib.h	/^    char msgtype[256];  \/* last message type *\/$/;"	m	struct:__anon85
msgtype	rtklib.h	/^    char msgtype[256];  \/* last message type *\/$/;"	m	struct:__anon94
msm_h_t	rtcm3.c	/^} msm_h_t;$/;"	t	typeref:struct:__anon70	file:
msm_sig_cmp	rtcm3.c	/^const char *msm_sig_cmp[32]={$/;"	v
msm_sig_gal	rtcm3.c	/^const char *msm_sig_gal[32]={$/;"	v
msm_sig_glo	rtcm3.c	/^const char *msm_sig_glo[32]={$/;"	v
msm_sig_gps	rtcm3.c	/^const char *msm_sig_gps[32]={$/;"	v
msm_sig_qzs	rtcm3.c	/^const char *msm_sig_qzs[32]={$/;"	v
msm_sig_sbs	rtcm3.c	/^const char *msm_sig_sbs[32]={$/;"	v
msmtype	rtklib.h	/^    char msmtype[6][128]; \/* msm signal types *\/$/;"	m	struct:__anon85
n	datum.c	/^static int n=0;                     \/* datum trans parameter table size *\/$/;"	v	file:
n	download.c	/^    int n,nmax;                     \/* number and max number of paths *\/$/;"	m	struct:__anon101	file:
n	gps_common.h	/^    int n,nmax;         \/* number and max number of data *\/$/;"	m	struct:__anon52
n	gps_common.h	/^    int n,nmax;         \/* number of broadcast ephemeris *\/$/;"	m	struct:__anon64
n	gps_common.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon50
n	gps_common.h	/^    int n,nmax;         \/* number of obervation data\/allocated *\/$/;"	m	struct:__anon41
n	rinex.c	/^    int n;                              \/* number of index *\/$/;"	m	struct:__anon99	file:
n	rinex_s.c	/^    int n;                              \/* number of index *\/$/;"	m	struct:__anon102	file:
n	rtklib.h	/^    double n;           \/* mean motion (rev\/day) *\/$/;"	m	struct:__anon72
n	rtklib.h	/^    double n[4];        \/* number of epochs *\/$/;"	m	struct:__anon92
n	rtklib.h	/^    int n,nmax;         \/* number of LEX messages and allocated *\/$/;"	m	struct:__anon80
n	rtklib.h	/^    int n,nmax;         \/* number of SBAS messages\/allocated *\/$/;"	m	struct:__anon77
n	rtklib.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon75
n	rtklib.h	/^    int n,nmax;         \/* number of data\/allocated *\/$/;"	m	struct:__anon71
n	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon82
n	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon84
n	rtklib.h	/^    int n,nmax;         \/* number\/max number of two line element data *\/$/;"	m	struct:__anon73
na	gps_common.h	/^    int na,namax;       \/* number of almanac data *\/$/;"	m	struct:__anon64
na	rtklib.h	/^    int nx,na;          \/* number of float states\/fixed states *\/$/;"	m	struct:__anon93
namax	gps_common.h	/^    int na,namax;       \/* number of almanac data *\/$/;"	m	struct:__anon64
name	rtklib.h	/^    char *name;         \/* option name *\/$/;"	m	struct:__anon88
name	rtklib.h	/^    char name   [MAXANT]; \/* marker name *\/$/;"	m	struct:__anon81
name	rtklib.h	/^    char name [32];     \/* common name *\/$/;"	m	struct:__anon72
name	rtklib.h	/^    char name[2][32];   \/* observer\/agency *\/$/;"	m	struct:__anon91
nav	rtklib.h	/^    nav_t  nav;         \/* navigation data *\/$/;"	m	struct:__anon86
nav	rtklib.h	/^    nav_t nav;          \/* navigation data *\/$/;"	m	struct:__anon98
nav	rtklib.h	/^    nav_t nav;          \/* satellite ephemerides *\/$/;"	m	struct:__anon85
nav	rtklib.h	/^    nav_t nav;          \/* satellite ephemerides *\/$/;"	m	struct:__anon94
nav_t	gps_common.h	/^} nav_t;$/;"	t	typeref:struct:__anon64
navsel	rtklib.h	/^    int navsel;         \/* ephemeris select (0:all,1:rover,2:base,3:corr) *\/$/;"	m	struct:__anon98
navsys	gps_common.h	/^    int navsys;         \/* navigation system *\/$/;"	m	struct:__anon67
navsys	rinex.c	/^static const int navsys[]={             \/* satellite systems *\/$/;"	v	file:
navsys	rinex_s.c	/^static const int navsys[]={             \/* satellite systems *\/$/;"	v	file:
navsys	rtklib.h	/^    int navsys;         \/* navigation system *\/$/;"	m	struct:__anon91
nb	rtklib.h	/^    int nb [3];         \/* bytes in input buffers {rov,base} *\/$/;"	m	struct:__anon98
nb	rtklib.h	/^    int nb;             \/* number of byte in message buffer *\/$/;"	m	struct:__anon82
nb	stream.c	/^    int nb;                 \/* response buffer size *\/$/;"	m	struct:__anon6	file:
nbit	rtklib.h	/^    int nbit;           \/* number of bits in word buffer *\/ $/;"	m	struct:__anon85
nbyte	rtklib.h	/^    int nbyte;          \/* number of bytes in message buffer *\/ $/;"	m	struct:__anon85
nbyte	rtklib.h	/^    int nbyte;          \/* number of bytes in message buffer *\/ $/;"	m	struct:__anon94
nc	gps_common.h	/^    int nc,ncmax;       \/* number of precise clock *\/$/;"	m	struct:__anon64
ncmax	gps_common.h	/^    int nc,ncmax;       \/* number of precise clock *\/$/;"	m	struct:__anon64
ndata	gps_common.h	/^    int ndata[3];       \/* TEC grid data size {nlat,nlon,nhgt} *\/$/;"	m	struct:__anon48
nddot	rtklib.h	/^    double nddot;       \/* 2st derivative of mean motion *\/$/;"	m	struct:__anon72
ndot	rtklib.h	/^    double ndot;        \/* 1st derivative of mean motion *\/$/;"	m	struct:__anon72
ne	gps_common.h	/^    int ne,nemax;       \/* number of precise ephemeris *\/$/;"	m	struct:__anon64
neb	rtklib.h	/^    int neb;            \/* bytes in error message buffer *\/$/;"	m	struct:__anon93
nemax	gps_common.h	/^    int ne,nemax;       \/* number of precise ephemeris *\/$/;"	m	struct:__anon64
nextdltime	stream.c	/^static gtime_t nextdltime(const int *topts, int stat)$/;"	f	file:
nextsat	streamsvr.c	/^static int nextsat(nav_t *nav, int sat, int msg)$/;"	f	file:
nf	gps_common.h	/^    int nf;             \/* number of frequencies (1:L1,2:L1+L2,3:L1+L2+L5) *\/$/;"	m	struct:__anon67
nfix	rtklib.h	/^    int nfix;           \/* number of continuous fixes of ambiguity *\/$/;"	m	struct:__anon93
ng	gps_common.h	/^    int ng,ngmax;       \/* number of glonass ephemeris *\/$/;"	m	struct:__anon64
ngmax	gps_common.h	/^    int ng,ngmax;       \/* number of glonass ephemeris *\/$/;"	m	struct:__anon64
nigp	gps_common.h	/^    int nigp;           \/* number of igps *\/$/;"	m	struct:__anon59
nitem	ionex.c	/^static int nitem(const double *range)$/;"	f	file:
niter	gps_common.h	/^    int niter;          \/* number of filter iteration *\/$/;"	m	struct:__anon67
nmax	download.c	/^    int n,nmax;                     \/* number and max number of paths *\/$/;"	m	struct:__anon101	file:
nmax	gps_common.h	/^    int n,nmax;         \/* number and max number of data *\/$/;"	m	struct:__anon52
nmax	gps_common.h	/^    int n,nmax;         \/* number of broadcast ephemeris *\/$/;"	m	struct:__anon64
nmax	gps_common.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon50
nmax	gps_common.h	/^    int n,nmax;         \/* number of obervation data\/allocated *\/$/;"	m	struct:__anon41
nmax	rtklib.h	/^    int n,nmax;         \/* number of LEX messages and allocated *\/$/;"	m	struct:__anon80
nmax	rtklib.h	/^    int n,nmax;         \/* number of SBAS messages\/allocated *\/$/;"	m	struct:__anon77
nmax	rtklib.h	/^    int n,nmax;         \/* number of data *\/$/;"	m	struct:__anon75
nmax	rtklib.h	/^    int n,nmax;         \/* number of data\/allocated *\/$/;"	m	struct:__anon71
nmax	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon82
nmax	rtklib.h	/^    int n,nmax;         \/* number of solution\/max number of buffer *\/$/;"	m	struct:__anon84
nmax	rtklib.h	/^    int n,nmax;         \/* number\/max number of two line element data *\/$/;"	m	struct:__anon73
nmeacycle	rtklib.h	/^    int nmeacycle;      \/* NMEA request cycle (ms) (0:no req) *\/$/;"	m	struct:__anon98
nmeacycle	rtklib.h	/^    int nmeacycle;      \/* NMEA request cycle (ms) (0:no) *\/$/;"	m	struct:__anon97
nmeaintv	rtklib.h	/^    double nmeaintv[2]; \/* nmea output interval (s) (<0:no,0:all) *\/$/;"	m	struct:__anon89
nmeapos	rtklib.h	/^    double nmeapos[3];  \/* NMEA request position (ecef) (m) *\/$/;"	m	struct:__anon97
nmeapos	rtklib.h	/^    double nmeapos[3];  \/* NMEA request position (ecef) (m) *\/$/;"	m	struct:__anon98
nmeareq	rtklib.h	/^    int nmeareq;        \/* NMEA request (0:no,1:nmeapos,2:single sol) *\/$/;"	m	struct:__anon98
nmf	rtkcmn.c	/^static double nmf(gtime_t time, const double pos[], const double azel[],$/;"	f	file:
nmsg	rtklib.h	/^    int nmsg;           \/* number of output messages *\/$/;"	m	struct:__anon96
nmsg	rtklib.h	/^    unsigned int nmsg[3][10]; \/* input message counts *\/$/;"	m	struct:__anon98
nmsg2	rtklib.h	/^    unsigned int nmsg2[100]; \/* message count of RTCM 2 (1-99:1-99,0:other) *\/$/;"	m	struct:__anon85
nmsg3	rtklib.h	/^    unsigned int nmsg3[300]; \/* message count of RTCM 3 (1-299:1001-1299,0:ohter) *\/$/;"	m	struct:__anon85
nn	gps_common.h	/^    int nn,nnmax;       \/* number of stec grid data *\/$/;"	m	struct:__anon64
nnmax	gps_common.h	/^    int nn,nnmax;       \/* number of stec grid data *\/$/;"	m	struct:__anon64
nobs	rtklib.h	/^    int nobs[6];        \/* number of obs types {GPS,GLO,GAL,QZS,SBS,CMP} *\/$/;"	m	struct:__anon91
norm	rtkcmn.c	/^extern double norm(const double *a, int n)$/;"	f
normv3	rtkcmn.c	/^extern int normv3(const double *a, double *b)$/;"	f
npb	rtklib.h	/^    int npb;            \/* data length in peek buffer (bytes) *\/$/;"	m	struct:__anon97
npb	rtklib.h	/^    int npb[3];         \/* bytes in input peek buffers *\/$/;"	m	struct:__anon98
ns	gps_common.h	/^    int ns,nsmax;       \/* number of sbas ephemeris *\/$/;"	m	struct:__anon64
ns	gps_common.h	/^    unsigned char ns;   \/* number of valid satellites *\/$/;"	m	struct:__anon68
nsat	gps_common.h	/^    int nsat;           \/* number of satellites *\/$/;"	m	struct:__anon57
nsat	rtcm3.c	/^    unsigned char nsat,nsig;        \/* number of satellites\/signals *\/$/;"	m	struct:__anon70	file:
nsb	rtklib.h	/^    int nsb[2];         \/* bytes in soulution buffers *\/$/;"	m	struct:__anon98
nsbs	rtklib.h	/^    int nsbs;           \/* number of sbas message *\/$/;"	m	struct:__anon98
nsig	rtcm3.c	/^    unsigned char nsat,nsig;        \/* number of satellites\/signals *\/$/;"	m	struct:__anon70	file:
nsmax	gps_common.h	/^    int ns,nsmax;       \/* number of sbas ephemeris *\/$/;"	m	struct:__anon64
nsol	rtklib.h	/^    int nsol;           \/* number of solution buffer *\/$/;"	m	struct:__anon98
nstr	rtklib.h	/^    int nstr;           \/* number of streams (1 input + (nstr-1) outputs *\/$/;"	m	struct:__anon97
nt	gps_common.h	/^    int nt,ntmax;       \/* number of tec grid data *\/$/;"	m	struct:__anon64
ntmax	gps_common.h	/^    int nt,ntmax;       \/* number of tec grid data *\/$/;"	m	struct:__anon64
ntrip_t	stream.c	/^} ntrip_t;$/;"	t	typeref:struct:__anon6	file:
nut_iau1980	rtkcmn.c	/^static void nut_iau1980(double t, const double *f, double *dpsi, double *deps)$/;"	f	file:
nx	rtklib.h	/^    int nx,na;          \/* number of float states\/fixed states *\/$/;"	m	struct:__anon93
obs	rtklib.h	/^    obs_t  obs;         \/* observation data *\/$/;"	m	struct:__anon86
obs	rtklib.h	/^    obs_t obs;          \/* observation data (uncorrected) *\/$/;"	m	struct:__anon85
obs	rtklib.h	/^    obs_t obs;          \/* observation data *\/$/;"	m	struct:__anon94
obs	rtklib.h	/^    obs_t obs[3][MAXOBSBUF]; \/* observation data {rov,base,corr} *\/$/;"	m	struct:__anon98
obs2code	rtkcmn.c	/^extern unsigned char obs2code(const char *obs, int *freq)$/;"	f
obs_t	gps_common.h	/^} obs_t;$/;"	t	typeref:struct:__anon41
obscodes	rinex.c	/^static const char obscodes[]="CLDS";    \/* obs type codes *\/$/;"	v	file:
obscodes	rinex_s.c	/^static const char obscodes[]="CLDS";    \/* obs type codes *\/$/;"	v	file:
obscodes	rtkcmn.c	/^static char *obscodes[]={       \/* observation code strings *\/$/;"	v	file:
obsd_t	gps_common.h	/^} obsd_t;$/;"	t	typeref:struct:__anon40
obsflag	rtklib.h	/^    int obsflag;        \/* obs data complete flag (1:ok,0:not complete) *\/$/;"	m	struct:__anon85
obsfreqs	rtkcmn.c	/^static unsigned char obsfreqs[]={ \/* 1:L1,2:L2,3:L5,4:L6,5:L7,6:L8,7:L3 *\/$/;"	v	file:
obsindex	rcv/novatel.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obsindex	rinex.c	/^static int obsindex(double ver, int sys, const unsigned char *code,$/;"	f	file:
obsindex	rinex_s.c	/^static int obsindex(double ver, int sys, const unsigned char *code,$/;"	f	file:
obsindex	rtcm2.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obsindex	rtcm3.c	/^static int obsindex(obs_t *obs, gtime_t time, int sat)$/;"	f	file:
obstype	rtklib.h	/^    int obstype;        \/* observation type *\/$/;"	m	struct:__anon91
obuf	rtklib.h	/^    obs_t obuf;         \/* observation data buffer *\/$/;"	m	struct:__anon94
odisp	gps_common.h	/^    double odisp[2][6*11]; \/* ocean tide loading parameters {rov,base} *\/$/;"	m	struct:__anon67
off	gps_common.h	/^    double off[NFREQ][ 3]; \/* phase center offset e\/n\/u or x\/y\/z (m) *\/$/;"	m	struct:__anon53
off	rtklib.h	/^    double icpp[MAXSAT],off[MAXSAT],icpc; \/* carrier params for ss2 *\/$/;"	m	struct:__anon94
offset	stream.c	/^    int offset;             \/* time offset (ms) for slave *\/$/;"	m	struct:__anon2	file:
omg	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,OMGd;$/;"	m	struct:__anon47
omg	gps_common.h	/^    double A,e,i0,OMG0,omg,M0,deln,OMGd,idot;$/;"	m	struct:__anon42
omg	rtklib.h	/^    double omg;         \/* argument of perigee (deg) *\/$/;"	m	struct:__anon72
open_rnxctr	rinex.c	/^extern int open_rnxctr(rnxctr_t *rnx, FILE *fp)$/;"	f
openfile	stream.c	/^static file_t *openfile(const char *path, int mode, char *msg)$/;"	f	file:
openfile_	stream.c	/^static int openfile_(file_t *file, gtime_t time, char *msg)$/;"	f	file:
openftp	stream.c	/^static ftp_t *openftp(const char *path, int type, char *msg)$/;"	f	file:
opengeoid	geoid.c	/^extern int opengeoid(int model, const char *file)$/;"	f
openntrip	stream.c	/^static ntrip_t *openntrip(const char *path, int type, char *msg)$/;"	f	file:
openpath	stream.c	/^    char openpath[MAXSTRPATH]; \/* open file path *\/$/;"	m	struct:__anon2	file:
openserial	stream.c	/^static serial_t *openserial(const char *path, int mode, char *msg)$/;"	f	file:
opentcpcli	stream.c	/^static tcpcli_t *opentcpcli(const char *path, char *msg)$/;"	f	file:
opentcpsvr	stream.c	/^static tcpsvr_t *opentcpsvr(const char *path, char *msg)$/;"	f	file:
opt	rtklib.h	/^    char   opt[256];    \/* rinex dependent options *\/$/;"	m	struct:__anon86
opt	rtklib.h	/^    char opt[256];      \/* RTCM dependent options *\/$/;"	m	struct:__anon85
opt	rtklib.h	/^    char opt[256];      \/* receiver dependent options *\/$/;"	m	struct:__anon94
opt	rtklib.h	/^    prcopt_t opt;       \/* processing options *\/$/;"	m	struct:__anon93
opt2buf	options.c	/^extern int opt2buf(const opt_t *opt, char *buff)$/;"	f
opt2sep	solution.c	/^static const char *opt2sep(const solopt_t *opt)$/;"	f	file:
opt2str	options.c	/^extern int opt2str(const opt_t *opt, char *str)$/;"	f
opt_t	rtklib.h	/^} opt_t;$/;"	t	typeref:struct:__anon88
otype	rtklib.h	/^    int itype,otype;    \/* input and output stream type *\/$/;"	m	struct:__anon96
out	rtklib.h	/^    rtcm_t out;         \/* rtcm output data buffer *\/$/;"	m	struct:__anon96
outb	rtklib.h	/^    unsigned int outb,outr; \/* output bytes\/rate *\/$/;"	m	struct:__anon95
outbt	rtklib.h	/^    unsigned int inbt,outbt; \/* input\/output bytes at tick *\/$/;"	m	struct:__anon95
outc	gps_common.h	/^    unsigned int outc [NFREQ]; \/* obs outage counter of phase *\/$/;"	m	struct:__anon69
outc	rtklib.h	/^    unsigned short outc;  \/* outage counter *\/$/;"	m	struct:__anon83
outecef	solution.c	/^static int outecef(unsigned char *buff, const char *s, const sol_t *sol,$/;"	f	file:
outenu	solution.c	/^static int outenu(unsigned char *buff, const char *s, const sol_t *sol,$/;"	f	file:
outhead	rtklib.h	/^    int outhead;        \/* output header (0:no,1:yes) *\/$/;"	m	struct:__anon89
outiono	rtklib.h	/^    int outiono;        \/* output iono correction *\/$/;"	m	struct:__anon91
outleaps	rtklib.h	/^    int outleaps;       \/* output leap seconds *\/$/;"	m	struct:__anon91
outnavf	rinex.c	/^static void outnavf(FILE *fp, double value)$/;"	f	file:
outnavf	rinex_s.c	/^static void outnavf(char *buff, double value,int n)  \/\/ 已改动$/;"	f	file:
outnmea_gga	solution.c	/^extern int outnmea_gga(unsigned char *buff, const sol_t *sol)$/;"	f
outnmea_gsa	solution.c	/^extern int outnmea_gsa(unsigned char *buff, const sol_t *sol,$/;"	f
outnmea_gsv	solution.c	/^extern int outnmea_gsv(unsigned char *buff, const sol_t *sol,$/;"	f
outnmea_rmc	solution.c	/^extern int outnmea_rmc(unsigned char *buff, const sol_t *sol)$/;"	f
outobstype_ver2	rinex.c	/^static void outobstype_ver2(FILE *fp, const rnxopt_t *opt)$/;"	f	file:
outobstype_ver2	rinex_s.c	/^static void outobstype_ver2(char *buff, const rnxopt_t *opt,int l)$/;"	f	file:
outobstype_ver3	rinex.c	/^static void outobstype_ver3(FILE *fp, const rnxopt_t *opt)$/;"	f	file:
outobstype_ver3	rinex_s.c	/^static void outobstype_ver3(char *buff, const rnxopt_t *opt,int l)$/;"	f	file:
outopt	rtklib.h	/^    int outopt;         \/* output processing options (0:no,1:yes) *\/$/;"	m	struct:__anon89
outpoint	convkml.c	/^static void outpoint(FILE *fp, gtime_t time, const double *pos,$/;"	f	file:
outpos	solution.c	/^static int outpos(unsigned char *buff, const char *s, const sol_t *sol,$/;"	f	file:
outprcopt	solution.c	/^extern void outprcopt(FILE *fp, const prcopt_t *opt)$/;"	f
outprcopts	solution.c	/^extern int outprcopts(unsigned char *buff, const prcopt_t *opt)$/;"	f
outr	rtklib.h	/^    unsigned int outb,outr; \/* output bytes\/rate *\/$/;"	m	struct:__anon95
outrnxcnavh	rinex.c	/^extern int outrnxcnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxgnavb	rinex.c	/^extern int outrnxgnavb(FILE *fp, const rnxopt_t *opt, const geph_t *geph)$/;"	f
outrnxgnavh	rinex.c	/^extern int outrnxgnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxhnavb	rinex.c	/^extern int outrnxhnavb(FILE *fp, const rnxopt_t *opt, const seph_t *seph)$/;"	f
outrnxhnavh	rinex.c	/^extern int outrnxhnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxlnavh	rinex.c	/^extern int outrnxlnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxnavb	rinex.c	/^extern int outrnxnavb(FILE *fp, const rnxopt_t *opt, const eph_t *eph)$/;"	f
outrnxnavb_s	rinex_s.c	/^extern int outrnxnavb_s(char *buff, const rnxopt_t *opt, const eph_t *eph)  \/\/ 已改动$/;"	f
outrnxnavh	rinex.c	/^extern int outrnxnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxnavh_s	rinex_s.c	/^extern int outrnxnavh_s(char *buff, const rnxopt_t *opt, const nav_t *nav)  \/\/ 已改动$/;"	f
outrnxobsb	rinex.c	/^extern int outrnxobsb(FILE *fp, const rnxopt_t *opt, const obsd_t *obs, int n,$/;"	f
outrnxobsb_s	rinex_s.c	/^extern int outrnxobsb_s(char *buff, const rnxopt_t *opt, const obsd_t *obs, int n,$/;"	f
outrnxobsf	rinex.c	/^static void outrnxobsf(FILE *fp, double obs, int lli)$/;"	f	file:
outrnxobsf	rinex_s.c	/^static void outrnxobsf(char *buff, double obs, int lli,int n)$/;"	f	file:
outrnxobsh	rinex.c	/^extern int outrnxobsh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outrnxobsh_s	rinex_s.c	/^extern int outrnxobsh_s(char *buff, const rnxopt_t *opt, const nav_t *nav) \/\/ 已改动$/;"	f
outrnxqnavh	rinex.c	/^extern int outrnxqnavh(FILE *fp, const rnxopt_t *opt, const nav_t *nav)$/;"	f
outsol	solution.c	/^extern void outsol(FILE *fp, const sol_t *sol, const double *rb,$/;"	f
outsolex	solution.c	/^extern void outsolex(FILE *fp, const sol_t *sol, const ssat_t *ssat,$/;"	f
outsolexs	solution.c	/^extern int outsolexs(unsigned char *buff, const sol_t *sol, const ssat_t *ssat,$/;"	f
outsolhead	solution.c	/^extern void outsolhead(FILE *fp, const solopt_t *opt)$/;"	f
outsolheads	solution.c	/^extern int outsolheads(unsigned char *buff, const solopt_t *opt)$/;"	f
outsols	solution.c	/^extern int outsols(unsigned char *buff, const sol_t *sol, const double *rb,$/;"	f
outtime	rtklib.h	/^    int outtime;        \/* output time system correction *\/$/;"	m	struct:__anon91
outtrack	convkml.c	/^static void outtrack(FILE *f, const solbuf_t *solbuf, const char *color,$/;"	f	file:
outtype	rtklib.h	/^    int outtype;        \/* output message type *\/$/;"	m	struct:__anon85
outtype	rtklib.h	/^    int outtype;        \/* output message type *\/$/;"	m	struct:__anon94
parse_str	download.c	/^static char *parse_str(char *buff, char *str, int nmax)$/;"	f	file:
passwd	stream.c	/^    char passwd[256];       \/* password *\/$/;"	m	struct:__anon6	file:
passwd	stream.c	/^    char passwd[256];       \/* password for ftp *\/$/;"	m	struct:__anon7	file:
path	download.c	/^    path_t *path;                   \/* download paths *\/$/;"	m	struct:__anon101	file:
path	rtklib.h	/^    char path[1024];    \/* url path *\/$/;"	m	struct:__anon87
path	rtklib.h	/^    char path[MAXSTRPATH]; \/* stream path *\/$/;"	m	struct:__anon95
path	stream.c	/^    char path[MAXSTRPATH];  \/* file path *\/$/;"	m	struct:__anon2	file:
path_t	download.c	/^} path_t;$/;"	t	typeref:struct:__anon100	file:
paths_t	download.c	/^} paths_t;$/;"	t	typeref:struct:__anon101	file:
pbuf	rtklib.h	/^    unsigned char *pbuf; \/* peek buffer *\/$/;"	m	struct:__anon97
pbuf	rtklib.h	/^    unsigned char *pbuf[3]; \/* peek buffers {rov,base,corr} *\/$/;"	m	struct:__anon98
pclk	gps_common.h	/^    pclk_t *pclk;       \/* precise clock *\/$/;"	m	struct:__anon64
pclk_t	gps_common.h	/^} pclk_t;$/;"	t	typeref:struct:__anon46
pcv	rtklib.h	/^    pcv_t *pcv;         \/* antenna parameters data *\/$/;"	m	struct:__anon71
pcv_t	gps_common.h	/^} pcv_t;$/;"	t	typeref:struct:__anon53
pcvr	gps_common.h	/^    pcv_t pcvr[2];      \/* receiver antenna parameters {rov,base} *\/$/;"	m	struct:__anon67
pcvs	gps_common.h	/^    pcv_t pcvs[MAXSAT]; \/* satellite antenna pcv *\/$/;"	m	struct:__anon64
pcvs_t	rtklib.h	/^} pcvs_t;$/;"	t	typeref:struct:__anon71
peph	gps_common.h	/^    peph_t *peph;       \/* precise ephemeris *\/$/;"	m	struct:__anon64
peph2pos	preceph.c	/^extern int peph2pos(gtime_t time, int sat, const nav_t *nav, int opt,$/;"	f
peph_t	gps_common.h	/^} peph_t;$/;"	t	typeref:struct:__anon45
pephclk	preceph.c	/^static int pephclk(gtime_t time, int sat, const nav_t *nav, double *dts,$/;"	f	file:
pephpos	preceph.c	/^static int pephpos(gtime_t time, int sat, const nav_t *nav, double *rs,$/;"	f	file:
perm	lambda.c	/^static void perm(int n, double *L, double *D, int j, double del, double *Z)$/;"	f	file:
perr	gps_common.h	/^    double perr[4][NFREQ*2]; \/* carrier-phase errors (m) *\/$/;"	m	struct:__anon66
ph	gps_common.h	/^    double  ph[2][NFREQ]; \/* previous carrier-phase observable (cycle) *\/$/;"	m	struct:__anon69
phw	gps_common.h	/^    double  phw;        \/* phase windup (cycle) *\/$/;"	m	struct:__anon69
port	rtklib.h	/^    void *port;         \/* type dependent port control struct *\/$/;"	m	struct:__anon95
port	stream.c	/^    int port;               \/* port *\/$/;"	m	struct:__anon3	file:
pos	gps_common.h	/^    double pos[2];      \/* latitude\/longitude (deg) *\/$/;"	m	struct:__anon50
pos	gps_common.h	/^    double pos[3];      \/* satellite position (ecef) (m) *\/$/;"	m	struct:__anon43
pos	gps_common.h	/^    double pos[3];      \/* satellite position (m) (ecef) *\/$/;"	m	struct:__anon44
pos	gps_common.h	/^    double pos[3];      \/* satellite position (m) *\/$/;"	m	struct:__anon62
pos	gps_common.h	/^    double pos[MAXSAT][4]; \/* satellite position\/clock (ecef) (m|s) *\/$/;"	m	struct:__anon45
pos	rinex.c	/^    int pos[MAXOBSTYPE];                \/* signal index in obs data (-1:no) *\/$/;"	m	struct:__anon99	file:
pos	rinex_s.c	/^    int pos[MAXOBSTYPE];                \/* signal index in obs data (-1:no) *\/$/;"	m	struct:__anon102	file:
pos	rtklib.h	/^    double pos[3];      \/* station position (ecef) (m) *\/$/;"	m	struct:__anon81
pos	rtklib.h	/^    float pos[2];       \/* latitude,longitude (rad) *\/$/;"	m	struct:__anon75
pos0	gps_common.h	/^    double pos0[2];     \/* reference position {lat,lon} (rad) *\/$/;"	m	struct:__anon63
pos2ecef	rtkcmn.c	/^extern void pos2ecef(const double *pos, double *r)$/;"	f
posf	rtklib.h	/^    int posf;           \/* solution format (SOLF_???) *\/$/;"	m	struct:__anon89
posopt	gps_common.h	/^    int  posopt[6];     \/* positioning options *\/$/;"	m	struct:__anon67
prCA	rtklib.h	/^    double prCA[MAXSAT],dpCA[MAXSAT]; \/* L1\/CA pseudrange\/doppler for javad *\/$/;"	m	struct:__anon94
prc	gps_common.h	/^    double prc;         \/* pseudorange correction (PRC) (m) *\/$/;"	m	struct:__anon54
prc	gps_common.h	/^    double prc;         \/* pseudorange correction (PRC) (m) *\/$/;"	m	struct:__anon60
prcopt_	options.c	/^static prcopt_t prcopt_;$/;"	v	file:
prcopt_default	rtkcmn.c	/^const prcopt_t prcopt_default={ \/* defaults processing options *\/$/;"	v
prcopt_t	gps_common.h	/^} prcopt_t;$/;"	t	typeref:struct:__anon67
prcout	rtklib.h	/^    int prcout;         \/* missing observation data count *\/$/;"	m	struct:__anon98
pri	rinex.c	/^    unsigned char pri [MAXOBSTYPE];     \/* signal priority (15-0) *\/$/;"	m	struct:__anon99	file:
pri	rinex_s.c	/^    unsigned char pri [MAXOBSTYPE];     \/* signal priority (15-0) *\/$/;"	m	struct:__anon102	file:
print_total	download.c	/^static int print_total(const url_t *url, char **stas, int nsta, int *nc,$/;"	f	file:
prm	datum.c	/^static tprm_t *prm=NULL;            \/* datum trans parameter table *\/$/;"	v	file:
prn	gps_common.h	/^    double prn[5];      \/* process-noise std [0]bias,[1]iono [2]trop [3]acch [4]accv *\/$/;"	m	struct:__anon67
prn	rtklib.h	/^    int prn;            \/* SBAS satellite PRN number *\/$/;"	m	struct:__anon76
prn	rtklib.h	/^    int prn;            \/* satellite PRN number *\/$/;"	m	struct:__anon79
prog	rtklib.h	/^    char prog  [32];    \/* program *\/$/;"	m	struct:__anon91
prog	rtklib.h	/^    char prog[64];      \/* program name *\/$/;"	m	struct:__anon89
proto	stream.c	/^    int proto;              \/* protocol (0:ftp,1:http) *\/$/;"	m	struct:__anon7	file:
proxyaddr	stream.c	/^static char proxyaddr[256]=""; \/* http\/ntrip\/ftp proxy address *\/$/;"	v	file:
pt	gps_common.h	/^    gtime_t pt[2][NFREQ]; \/* previous carrier-phase time *\/$/;"	m	struct:__anon69
qr	gps_common.h	/^    float  qr[6];       \/* position variance\/covariance (m^2) *\/$/;"	m	struct:__anon68
range	geoid.c	/^static const double range[4];       \/* embedded geoid area range {W,E,S,N} (deg) *\/$/;"	v	file:
range	geoid.c	/^static const double range[]={0.00,360.00,-90.00,90.00};$/;"	v	file:
rate	gps_common.h	/^    float rate;         \/* L1 ionosphere rate (m\/s) *\/$/;"	m	struct:__anon49
ratio	gps_common.h	/^    float ratio;        \/* AR ratio factor for valiation *\/$/;"	m	struct:__anon68
raw	rtklib.h	/^    raw_t  raw [3];     \/* receiver raw control {rov,base,corr} *\/$/;"	m	struct:__anon98
raw	rtklib.h	/^    raw_t raw;          \/* raw  input data buffer *\/$/;"	m	struct:__anon96
raw2rtcm	streamsvr.c	/^static void raw2rtcm(rtcm_t *out, const raw_t *raw, int ret)$/;"	f	file:
raw_t	rtklib.h	/^} raw_t;$/;"	t	typeref:struct:__anon94
rb	gps_common.h	/^    double rb;          \/* earth radius (km) *\/$/;"	m	struct:__anon48
rb	gps_common.h	/^    double rb[3];       \/* base position for relative mode {x,y,z} (ecef) (m) *\/$/;"	m	struct:__anon67
rb	rtklib.h	/^    double rb[3];       \/* reference position {x,y,z} (ecef) (m) *\/$/;"	m	struct:__anon82
rb	rtklib.h	/^    double rb[6];       \/* base position\/velocity (ecef) (m|m\/s) *\/$/;"	m	struct:__anon93
rcsid	convkml.c	/^static const char rcsid[]="$Id: convkml.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	datum.c	/^static const char rcsid[]="$Id: datum.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	download.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	ephemeris.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	geoid.c	/^static const char rcsid[]="$Id: geoid.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	ionex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	lambda.c	/^static const char rcsid[]="$Id: lambda.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	options.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	preceph.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	qzslex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/binex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/crescent.c	/^static const char rcsid[]="$Id: crescent.c,v 1.2 2008\/07\/14 00:05:05 TTAKA Exp $";$/;"	v	file:
rcsid	rcv/gw10.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/javad.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/novatel.c	/^static const char rcsid[]="$Id: novatel.c,v 1.2 2008\/07\/14 00:05:05 TTAKA Exp $";$/;"	v	file:
rcsid	rcv/nvs.c	/^static const char rcsid[]="$Id: nvs.c,v 1.0 2012\/01\/30 00:05:05 MBAVA Exp $";$/;"	v	file:
rcsid	rcv/rcvlex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/skytraq.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rcv/ss2.c	/^static const char rcsid[]="$Id: ss2.c,v 1.2 2008\/07\/14 00:05:05 TTAKA Exp $";$/;"	v	file:
rcsid	rcv/ublox.c	/^static const char rcsid[]="$Id: ublox.c,v 1.2 2008\/07\/14 00:05:05 TTAKA Exp $";$/;"	v	file:
rcsid	rcvraw.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rinex.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rinex_s.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm2.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm3.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtcm3e.c	/^static const char rcsid[]="$Id:$";$/;"	v	file:
rcsid	rtkcmn.c	/^static const char rcsid[]="$Id: rtkcmn.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp ttaka $";$/;"	v	file:
rcsid	sbas.c	/^static const char rcsid[]="$Id: sbas.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	solution.c	/^static const char rcsid[]="$Id: solution.c,v 1.1 2008\/07\/17 21:48:06 ttaka Exp $";$/;"	v	file:
rcsid	stream.c	/^static const char rcsid[]="$Id$";$/;"	v	file:
rcsid	streamsvr.c	/^static const char rcsid[]="$Id$";$/;"	v	file:
rcv	gps_common.h	/^    unsigned char sat,rcv; \/* satellite\/receiver number *\/$/;"	m	struct:__anon40
rcvantp	rtklib.h	/^    char rcvantp[MAXSTRPATH]; \/* receiver antenna parameters file *\/$/;"	m	struct:__anon90
rcvopt	rtklib.h	/^    char rcvopt[256];   \/* receiver dependent options *\/$/;"	m	struct:__anon91
readantex	rtkcmn.c	/^static int readantex(const char *file, pcvs_t *pcvs)$/;"	f	file:
readblq	rtkcmn.c	/^extern int readblq(const char *file, const char *sta, double *odisp)$/;"	f
readblqrecord	rtkcmn.c	/^static int readblqrecord(FILE *fp, double *odisp)$/;"	f	file:
readdcb	preceph.c	/^extern int readdcb(const char *file, nav_t *nav)$/;"	f
readdcbf	preceph.c	/^static int readdcbf(const char *file, nav_t *nav)$/;"	f	file:
readerp	rtkcmn.c	/^extern int readerp(const char *file, erp_t *erp)$/;"	f
readfile	stream.c	/^static int readfile(file_t *file, unsigned char *buff, int nmax, char *msg)$/;"	f	file:
readftp	stream.c	/^static int readftp(ftp_t *ftp, unsigned char *buff, int n, char *msg)$/;"	f	file:
readionexb	ionex.c	/^static int readionexb(FILE *fp, const double *lats, const double *lons,$/;"	f	file:
readionexdcb	ionex.c	/^static void readionexdcb(FILE *fp, double *dcb, double *rms)$/;"	f	file:
readionexh	ionex.c	/^static double readionexh(FILE *fp, double *lats, double *lons, double *hgts,$/;"	f	file:
readmsgs	sbas.c	/^static void readmsgs(const char *file, int sel, gtime_t ts, gtime_t te,$/;"	f	file:
readnav	rtkcmn.c	/^extern int readnav(const char *file, nav_t *nav)$/;"	f
readngspcv	rtkcmn.c	/^static int readngspcv(const char *file, pcvs_t *pcvs)$/;"	f	file:
readntrip	stream.c	/^static int readntrip(ntrip_t *ntrip, unsigned char *buff, int n, char *msg)$/;"	f	file:
readpcv	rtkcmn.c	/^extern int readpcv(const char *file, pcvs_t *pcvs)$/;"	f
readpos	rtkcmn.c	/^extern void readpos(const char *file, const char *rcv, double *pos)$/;"	f
readrnx	rinex.c	/^extern int readrnx(const char *file, int rcv, const char *opt, obs_t *obs,$/;"	f
readrnxc	rinex.c	/^extern int readrnxc(const char *file, nav_t *nav)$/;"	f
readrnxclk	rinex.c	/^static int readrnxclk(FILE *fp, const char *opt, int index, nav_t *nav)$/;"	f	file:
readrnxfile	rinex.c	/^static int readrnxfile(const char *file, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readrnxfp	rinex.c	/^static int readrnxfp(FILE *fp, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readrnxh	rinex.c	/^static int readrnxh(FILE *fp, double *ver, char *type, int *sys, int *tsys,$/;"	f	file:
readrnxnav	rinex.c	/^static int readrnxnav(FILE *fp, const char *opt, double ver, int sys,$/;"	f	file:
readrnxnavb	rinex.c	/^static int readrnxnavb(FILE *fp, const char *opt, double ver, int sys,$/;"	f	file:
readrnxobs	rinex.c	/^static int readrnxobs(FILE *fp, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readrnxobsb	rinex.c	/^static int readrnxobsb(FILE *fp, const char *opt, double ver,$/;"	f	file:
readrnxt	rinex.c	/^extern int readrnxt(const char *file, int rcv, gtime_t ts, gtime_t te,$/;"	f
readsap	preceph.c	/^extern int readsap(const char *file, gtime_t time, nav_t *nav)$/;"	f
readserial	stream.c	/^static int readserial(serial_t *serial, unsigned char *buff, int n, char *msg)$/;"	f	file:
readseribuff	stream.c	/^static int readseribuff(serial_t *serial, unsigned char *buff, int nmax)$/;"	f	file:
readsol	solution.c	/^extern int readsol(char *files[], int nfile, solbuf_t *sol)$/;"	f
readsoldata	solution.c	/^static int readsoldata(FILE *fp, gtime_t ts, gtime_t te, double tint, int qflag,$/;"	f	file:
readsolopt	solution.c	/^static void readsolopt(FILE *fp, solopt_t *opt)$/;"	f	file:
readsolstat	solution.c	/^extern int readsolstat(char *files[], int nfile, solstatbuf_t *statbuf)$/;"	f
readsolstatdata	solution.c	/^static int readsolstatdata(FILE *fp, gtime_t ts, gtime_t te, double tint,$/;"	f	file:
readsolstatt	solution.c	/^extern int readsolstatt(char *files[], int nfile, gtime_t ts, gtime_t te,$/;"	f
readsolt	solution.c	/^extern int readsolt(char *files[], int nfile, gtime_t ts, gtime_t te,$/;"	f
readsp3	preceph.c	/^extern void readsp3(const char *file, nav_t *nav, int opt)$/;"	f
readsp3b	preceph.c	/^static void readsp3b(FILE *fp, char type, int *sats, int ns, double *bfact,$/;"	f	file:
readsp3h	preceph.c	/^static int readsp3h(FILE *fp, gtime_t *time, char *type, int *sats,$/;"	f	file:
readtcpcli	stream.c	/^static int readtcpcli(tcpcli_t *tcpcli, unsigned char *buff, int n, char *msg)$/;"	f	file:
readtcpsvr	stream.c	/^static int readtcpsvr(tcpsvr_t *tcpsvr, unsigned char *buff, int n, char *msg)$/;"	f	file:
readtec	ionex.c	/^extern void readtec(const char *file, nav_t *nav, int opt)$/;"	f
rec	rtklib.h	/^    char rec [3][32];   \/* receiver #\/type\/vers *\/$/;"	m	struct:__anon91
recsno	rtklib.h	/^    char recsno [MAXANT]; \/* receiver serial number *\/$/;"	m	struct:__anon81
rectype	rtklib.h	/^    char rectype[MAXANT]; \/* receiver type descriptor *\/$/;"	m	struct:__anon81
recv_nb	stream.c	/^static int recv_nb(socket_t sock, unsigned char *buff, int n)$/;"	f	file:
recver	rtklib.h	/^    char recver [MAXANT]; \/* receiver firmware version *\/$/;"	m	struct:__anon81
reduction	lambda.c	/^static void reduction(int n, double *L, double *D, double *Z)$/;"	f	file:
refd	gps_common.h	/^    int refd;           \/* sat ref datum (0:ITRF,1:regional) *\/$/;"	m	struct:__anon61
refpos	gps_common.h	/^    int refpos;         \/* base position for relative mode *\/$/;"	m	struct:__anon67
rejc	gps_common.h	/^    unsigned int rejc [NFREQ]; \/* reject counter *\/$/;"	m	struct:__anon69
rejc	rtklib.h	/^    unsigned short rejc;  \/* reject counter *\/$/;"	m	struct:__anon83
remot	download.c	/^    char *remot;                    \/* remote path *\/$/;"	m	struct:__anon100	file:
remot2local	download.c	/^static void remot2local(const char *remot, const char *dir, char *local)$/;"	f	file:
repmode	stream.c	/^    int repmode;            \/* replay mode (0:master,1:slave) *\/$/;"	m	struct:__anon2	file:
reppath	rtkcmn.c	/^extern int reppath(const char *path, char *rpath, gtime_t time, const char *rov,$/;"	f
reppaths	rtkcmn.c	/^extern int reppaths(const char *path, char *rpath[], int nmax, gtime_t ts,$/;"	f
repstr	rtkcmn.c	/^static int repstr(char *str, const char *pat, const char *rep)$/;"	f	file:
reqntrip_c	stream.c	/^static int reqntrip_c(ntrip_t *ntrip, char *msg)$/;"	f	file:
reqntrip_s	stream.c	/^static int reqntrip_s(ntrip_t *ntrip, char *msg)$/;"	f	file:
resc	gps_common.h	/^    double resc[NFREQ]; \/* residuals of carrier-phase (m) *\/$/;"	m	struct:__anon69
resc	rtklib.h	/^    float resc;         \/* carrier-phase residual (m) *\/$/;"	m	struct:__anon83
resetsysopts	options.c	/^extern void resetsysopts(void)$/;"	f
resp	gps_common.h	/^    double resp[NFREQ]; \/* residuals of pseudorange (m) *\/$/;"	m	struct:__anon69
resp	rtklib.h	/^    float resp;         \/* pseudorange residual (m) *\/$/;"	m	struct:__anon83
restslips	rinex.c	/^static void restslips(unsigned char slips[][NFREQ], obsd_t *data)$/;"	f	file:
restslips	rinex_s.c	/^static void restslips(unsigned char slips[][NFREQ], obsd_t *data)$/;"	f	file:
rev	rtklib.h	/^    int rev;            \/* revolution number at epoch *\/$/;"	m	struct:__anon72
rms	gps_common.h	/^    float *rms;         \/* RMS values (tecu) *\/$/;"	m	struct:__anon48
rms	gps_common.h	/^    float rms;          \/* rms value (m) *\/$/;"	m	struct:__anon49
rms	rtklib.h	/^    float rms;          \/* rms value (m) *\/$/;"	m	struct:__anon74
rnxctr_t	rtklib.h	/^} rnxctr_t;$/;"	t	typeref:struct:__anon86
rnxopt	gps_common.h	/^    char rnxopt[2][256]; \/* rinex options {rover,base} *\/$/;"	m	struct:__anon67
rnxopt_t	rtklib.h	/^} rnxopt_t;$/;"	t	typeref:struct:__anon91
rnxver	rtklib.h	/^    double rnxver;      \/* RINEX version *\/$/;"	m	struct:__anon91
rovpos	gps_common.h	/^    int rovpos;         \/* rover position for fixed mode *\/$/;"	m	struct:__anon67
rp	stream.c	/^    int state,wp,rp;        \/* state,write\/read pointer *\/$/;"	m	struct:__anon1	file:
rr	gps_common.h	/^    double rr[6];       \/* position\/velocity (m|m\/s) *\/$/;"	m	struct:__anon68
rrc	gps_common.h	/^    double rrc;         \/* range rate correction (RRC) (m\/s) *\/$/;"	m	struct:__anon60
rrc	gps_common.h	/^    double rrc;         \/* range-rate correction (RRC) (m\/s) *\/$/;"	m	struct:__anon54
rspntrip_c	stream.c	/^static int rspntrip_c(ntrip_t *ntrip, char *msg)$/;"	f	file:
rspntrip_s	stream.c	/^static int rspntrip_s(ntrip_t *ntrip, char *msg)$/;"	f	file:
rtcm	rtklib.h	/^    rtcm_t rtcm;        \/* rtcm input data buffer *\/$/;"	m	struct:__anon96
rtcm	rtklib.h	/^    rtcm_t rtcm[3];     \/* RTCM control {rov,base,corr} *\/$/;"	m	struct:__anon98
rtcm2rtcm	streamsvr.c	/^static void rtcm2rtcm(rtcm_t *out, const rtcm_t *rtcm, int ret, int stasel)$/;"	f	file:
rtcm_t	rtklib.h	/^} rtcm_t;$/;"	t	typeref:struct:__anon85
rtk	rtklib.h	/^    rtk_t rtk;          \/* RTK control\/result struct *\/$/;"	m	struct:__anon98
rtk_t	rtklib.h	/^} rtk_t;$/;"	t	typeref:struct:__anon93
rtksvr_t	rtklib.h	/^} rtksvr_t;$/;"	t	typeref:struct:__anon98
ru	gps_common.h	/^    double ru[3];       \/* rover position for fixed mode {x,y,z} (ecef) (m) *\/$/;"	m	struct:__anon67
runby	rtklib.h	/^    char runby [32];    \/* run-by *\/$/;"	m	struct:__anon91
saddr	stream.c	/^    char saddr[256];        \/* address string *\/$/;"	m	struct:__anon3	file:
sat	gps_common.h	/^    int sat;            \/* satellite number (0:receiver) *\/$/;"	m	struct:__anon53
sat	gps_common.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon42
sat	gps_common.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon43
sat	gps_common.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon44
sat	gps_common.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon47
sat	gps_common.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon56
sat	gps_common.h	/^    int sat;            \/* satellite number *\/$/;"	m	struct:__anon62
sat	gps_common.h	/^    sbssatp_t sat[MAXSAT]; \/* satellite correction *\/$/;"	m	struct:__anon57
sat	gps_common.h	/^    unsigned char sat,rcv; \/* satellite\/receiver number *\/$/;"	m	struct:__anon40
sat	gps_common.h	/^    unsigned char sat;  \/* satellite number *\/$/;"	m	struct:__anon49
sat	rtklib.h	/^    unsigned char sat;  \/* satellite number *\/$/;"	m	struct:__anon83
sat2code	rinex.c	/^static int sat2code(int sat, char *code)$/;"	f	file:
sat2code	rinex_s.c	/^static int sat2code(int sat, char *code)$/;"	f	file:
satantoff	preceph.c	/^extern void satantoff(gtime_t time, const double *rs, const pcv_t *pcv,$/;"	f
satantp	rtklib.h	/^    char satantp[MAXSTRPATH]; \/* satellite antenna parameters file *\/$/;"	m	struct:__anon90
satazel	rtkcmn.c	/^extern double satazel(const double *pos, const double *e, double *azel)$/;"	f
satclass	rtklib.h	/^    char satclass;      \/* classification *\/$/;"	m	struct:__anon72
sateph	gps_common.h	/^    int sateph;         \/* satellite ephemeris\/clock (EPHOPT_???) *\/$/;"	m	struct:__anon67
satexclude	rtkcmn.c	/^extern int satexclude(int sat, int svh, const prcopt_t *opt)$/;"	f
satid2no	rtkcmn.c	/^extern int satid2no(const char *id)$/;"	f
satno	rtkcmn.c	/^extern int satno(int sys, int prn)$/;"	f
satno	rtklib.h	/^    char satno[16];     \/* satellilte catalog number *\/$/;"	m	struct:__anon72
satno2id	rtkcmn.c	/^extern void satno2id(int sat, char *id)$/;"	f
satpos	ephemeris.c	/^extern int satpos(gtime_t time, gtime_t teph, int sat, int ephopt,$/;"	f
satpos_sbas	ephemeris.c	/^static int satpos_sbas(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
satpos_ssr	ephemeris.c	/^static int satpos_ssr(gtime_t time, gtime_t teph, int sat, const nav_t *nav,$/;"	f	file:
satposs	ephemeris.c	/^extern void satposs(gtime_t teph, const obsd_t *obs, int n, const nav_t *nav,$/;"	f
sats	rtcm3.c	/^    unsigned char sats[64];         \/* satellites *\/$/;"	m	struct:__anon70	file:
satsys	rtkcmn.c	/^extern int satsys(int sat, int *prn)$/;"	f
satwavelen	rtkcmn.c	/^extern double satwavelen(int sat, int frq, const nav_t *nav)$/;"	f
save_msm_obs	rtcm3.c	/^static void save_msm_obs(rtcm_t *rtcm, int sys, msm_h_t *h, const double *r,$/;"	f	file:
save_subfrm	rcv/skytraq.c	/^static int save_subfrm(int sat, raw_t *raw)$/;"	f	file:
save_subfrm	rcv/ublox.c	/^static int save_subfrm(int sat, raw_t *raw)$/;"	f	file:
savekml	convkml.c	/^static int savekml(const char *file, const solbuf_t *solbuf, int tcolor,$/;"	f	file:
savenav	rtkcmn.c	/^extern int savenav(const char *file, const nav_t *nav)$/;"	f
saveopts	options.c	/^extern int saveopts(const char *file, const char *mode, const char *comment,$/;"	f
saveslips	rinex.c	/^static void saveslips(unsigned char slips[][NFREQ], obsd_t *data)$/;"	f	file:
saveslips	rinex_s.c	/^static void saveslips(unsigned char slips[][NFREQ], obsd_t *data)$/;"	f	file:
sbascorr	gps_common.h	/^    int sbascorr;       \/* SBAS correction options *\/$/;"	m	struct:__anon67
sbassatsel	gps_common.h	/^    int sbassatsel;     \/* SBAS satellite selection (0:all) *\/$/;"	m	struct:__anon67
sbs_t	rtklib.h	/^} sbs_t;$/;"	t	typeref:struct:__anon77
sbsdecodemsg	sbas.c	/^extern int sbsdecodemsg(gtime_t time, int prn, const unsigned int *words,$/;"	f
sbsfastcorr	sbas.c	/^static int sbsfastcorr(gtime_t time, int sat, const sbssat_t *sbssat,$/;"	f	file:
sbsfcorr_t	gps_common.h	/^} sbsfcorr_t;$/;"	t	typeref:struct:__anon54
sbsigp_t	gps_common.h	/^} sbsigp_t;$/;"	t	typeref:struct:__anon58
sbsigpband_t	rtklib.h	/^} sbsigpband_t;$/;"	t	typeref:struct:__anon78
sbsion	gps_common.h	/^    sbsion_t sbsion[MAXBAND+1]; \/* SBAS ionosphere corrections *\/$/;"	m	struct:__anon64
sbsion_t	gps_common.h	/^} sbsion_t;$/;"	t	typeref:struct:__anon59
sbsioncorr	sbas.c	/^extern int sbsioncorr(gtime_t time, const nav_t *nav, const double *pos,$/;"	f
sbslcorr_t	gps_common.h	/^} sbslcorr_t;$/;"	t	typeref:struct:__anon55
sbslongcorr	sbas.c	/^static int sbslongcorr(gtime_t time, int sat, const sbssat_t *sbssat,$/;"	f	file:
sbsmsg	rtklib.h	/^    sbsmsg_t sbsmsg;    \/* SBAS message *\/$/;"	m	struct:__anon94
sbsmsg	rtklib.h	/^    sbsmsg_t sbsmsg[MAXSBSMSG]; \/* SBAS message buffer *\/$/;"	m	struct:__anon98
sbsmsg_t	rtklib.h	/^} sbsmsg_t;$/;"	t	typeref:struct:__anon76
sbsoutmsg	sbas.c	/^extern void sbsoutmsg(FILE *fp, sbsmsg_t *sbsmsg)$/;"	f
sbsreadmsg	sbas.c	/^extern int sbsreadmsg(const char *file, int sel, sbs_t *sbs)$/;"	f
sbsreadmsgt	sbas.c	/^extern int sbsreadmsgt(const char *file, int sel, gtime_t ts, gtime_t te,$/;"	f
sbssat	gps_common.h	/^    sbssat_t sbssat;    \/* SBAS satellite corrections *\/$/;"	m	struct:__anon64
sbssat_t	gps_common.h	/^} sbssat_t;$/;"	t	typeref:struct:__anon57
sbssatcorr	sbas.c	/^extern int sbssatcorr(gtime_t time, int sat, const nav_t *nav, double *rs,$/;"	f
sbssatp_t	gps_common.h	/^} sbssatp_t;$/;"	t	typeref:struct:__anon56
sbstropcorr	sbas.c	/^extern double sbstropcorr(gtime_t time, const double *pos, const double *azel,$/;"	f
sbsupdatecorr	sbas.c	/^extern int sbsupdatecorr(const sbsmsg_t *msg, nav_t *nav)$/;"	f
sbuf	rtklib.h	/^    unsigned char *sbuf[2]; \/* output buffers {sol1,sol2} *\/$/;"	m	struct:__anon98
scanobs	rtklib.h	/^    int scanobs;        \/* scan obs types *\/$/;"	m	struct:__anon91
sclkstab	gps_common.h	/^    double sclkstab;    \/* satellite clock stability (sec\/sec) *\/$/;"	m	struct:__anon67
screent	rtkcmn.c	/^extern int screent(gtime_t time, gtime_t ts, gtime_t te, double tint)$/;"	f
search	lambda.c	/^static int search(int n, int m, const double *L, const double *D,$/;"	f	file:
searchigp	sbas.c	/^static void searchigp(gtime_t time, const double *pos, const sbsion_t *ion,$/;"	f	file:
searchopt	options.c	/^extern opt_t *searchopt(const char *name, const opt_t *opts)$/;"	f
searchpcv	rtkcmn.c	/^extern pcv_t *searchpcv(int sat, const char *type, gtime_t time,$/;"	f
searchprm	datum.c	/^static int searchprm(double lat, double lon)$/;"	f	file:
sec	gps_common.h	/^    double sec;         \/* fraction of second under 1 s *\/$/;"	m	struct:__anon39
seleph	ephemeris.c	/^static eph_t *seleph(gtime_t time, int sat, int iode, const nav_t *nav)$/;"	f	file:
selgeph	ephemeris.c	/^static geph_t *selgeph(gtime_t time, int sat, int iode, const nav_t *nav)$/;"	f	file:
selseph	ephemeris.c	/^static seph_t *selseph(gtime_t time, int sat, const nav_t *nav)$/;"	f	file:
send_nb	stream.c	/^static int send_nb(socket_t sock, unsigned char *buff, int n)$/;"	f	file:
sep	rtklib.h	/^    char sep[64];       \/* field separator *\/$/;"	m	struct:__anon89
seph	gps_common.h	/^    seph_t *seph;       \/* SBAS ephemeris *\/$/;"	m	struct:__anon64
seph2clk	ephemeris.c	/^extern double seph2clk(gtime_t time, const seph_t *seph)$/;"	f
seph2pos	ephemeris.c	/^extern void seph2pos(gtime_t time, const seph_t *seph, double *rs, double *dts,$/;"	f
seph_t	gps_common.h	/^} seph_t;$/;"	t	typeref:struct:__anon44
septime	solution.c	/^static void septime(double t, double *t1, double *t2, double *t3)$/;"	f	file:
seqno	rtklib.h	/^    int seqno;          \/* sequence number for rtcm 2 or iods msm *\/$/;"	m	struct:__anon85
serial_t	stream.c	/^} serial_t;$/;"	t	typeref:struct:__anon1	file:
serialthread	stream.c	/^static DWORD WINAPI serialthread(void *arg)$/;"	f	file:
set38bits	rtcm3e.c	/^static void set38bits(unsigned char *buff, int pos, double value)$/;"	f	file:
setI1	rcv/ublox.c	/^static void setI1(unsigned char *p, char           i) {*p=(unsigned char)i;}$/;"	f	file:
setI2	rcv/ublox.c	/^static void setI2(unsigned char *p, short          i) {memcpy(p,&i,2);}$/;"	f	file:
setI4	rcv/ublox.c	/^static void setI4(unsigned char *p, int            i) {memcpy(p,&i,4);}$/;"	f	file:
setR4	rcv/ublox.c	/^static void setR4(unsigned char *p, float          r) {memcpy(p,&r,4);}$/;"	f	file:
setR8	rcv/ublox.c	/^static void setR8(unsigned char *p, double         r) {memcpy(p,&r,8);}$/;"	f	file:
setU1	rcv/ublox.c	/^static void setU1(unsigned char *p, unsigned char  u) {*p=u;}$/;"	f	file:
setU2	rcv/ublox.c	/^static void setU2(unsigned char *p, unsigned short u) {memcpy(p,&u,2);}$/;"	f	file:
setU4	rcv/ublox.c	/^static void setU4(unsigned char *p, unsigned int   u) {memcpy(p,&u,4);}$/;"	f	file:
set_index	rinex.c	/^static void set_index(double ver, int sys, const char *opt,$/;"	f	file:
set_index	rinex_s.c	/^static void set_index(double ver, int sys, const char *opt,$/;"	f	file:
setbitg	rtcm3e.c	/^static void setbitg(unsigned char *buff, int pos, int len, double value)$/;"	f	file:
setbits	rtkcmn.c	/^extern void setbits(unsigned char *buff, int pos, int len, int data)$/;"	f
setbitu	rtkcmn.c	/^extern void setbitu(unsigned char *buff, int pos, int len, unsigned int data)$/;"	f
setcodepri	rtkcmn.c	/^extern void setcodepri(int sys, int freq, const char *pri)$/;"	f
setcs	rcv/ublox.c	/^static void setcs(unsigned char *buff, int len)$/;"	f	file:
setsock	stream.c	/^static int setsock(socket_t sock, char *msg)$/;"	f	file:
setstr	rinex.c	/^static void setstr(char *dst, const char *src, int n)$/;"	f	file:
setstr	rinex_s.c	/^static void setstr(char *dst, const char *src, int n)$/;"	f	file:
setsysopts	options.c	/^extern void setsysopts(const prcopt_t *prcopt, const solopt_t *solopt,$/;"	f
settag	rcv/javad.c	/^static int settag(obsd_t *data, gtime_t time)$/;"	f	file:
settime	rtkcmn.c	/^extern void settime(gtime_t time) {}$/;"	f
settspan	rtkcmn.c	/^extern void settspan(gtime_t ts, gtime_t te) {}$/;"	f
shift	rinex.c	/^    double shift[MAXOBSTYPE];           \/* phase shift (cycle) *\/$/;"	m	struct:__anon99	file:
shift	rinex_s.c	/^    double shift[MAXOBSTYPE];           \/* phase shift (cycle) *\/$/;"	m	struct:__anon102	file:
showmsg	rtkcmn.c	/^extern int showmsg(char *format,...) {return 0;}$/;"	f
sigind_t	rinex.c	/^} sigind_t;$/;"	t	typeref:struct:__anon99	file:
sigind_t	rinex_s.c	/^} sigind_t;$/;"	t	typeref:struct:__anon102	file:
sigindex	rtcm3.c	/^static void sigindex(int sys, const unsigned char *code, const int *freq, int n,$/;"	f	file:
sigs	rtcm3.c	/^    unsigned char sigs[32];         \/* signals *\/$/;"	m	struct:__anon70	file:
sleepms	rtkcmn.c	/^extern void sleepms(int ms)$/;"	f
slip	gps_common.h	/^    unsigned char slip; \/* slip flag *\/$/;"	m	struct:__anon49
slip	gps_common.h	/^    unsigned char slip[NFREQ]; \/* cycle-slip flag *\/$/;"	m	struct:__anon69
slipc	gps_common.h	/^    unsigned int slipc[NFREQ]; \/* cycle-slip counter *\/$/;"	m	struct:__anon69
slipc	rtklib.h	/^    unsigned short slipc; \/* slip counter *\/$/;"	m	struct:__anon83
smooth	rtcm3.c	/^    unsigned char smooth;           \/* divergence free smoothing indicator *\/$/;"	m	struct:__anon70	file:
smoother	rtkcmn.c	/^extern int smoother(const double *xf, const double *Qf, const double *xb,$/;"	f
snr	gps_common.h	/^    unsigned char snr [NFREQ]; \/* signal strength (0.25 dBHz) *\/$/;"	m	struct:__anon69
snr	rtklib.h	/^    unsigned char snr;  \/* signal C\/N0 (0.25 dBHz) *\/$/;"	m	struct:__anon79
snr	rtklib.h	/^    unsigned char snr;  \/* signal strength (0.25 dBHz) *\/$/;"	m	struct:__anon83
snratio	rtcm3.c	/^static unsigned char snratio(double snr)$/;"	f	file:
snrmask	gps_common.h	/^    snrmask_t snrmask;  \/* SNR mask *\/$/;"	m	struct:__anon67
snrmask_	options.c	/^static char snrmask_[NFREQ][1024];$/;"	v	file:
snrmask_t	gps_common.h	/^} snrmask_t;$/;"	t	typeref:struct:__anon65
sock	stream.c	/^    socket_t sock;          \/* socket descriptor *\/$/;"	m	struct:__anon3	file:
socket_t	stream.c	87;"	d	file:
socket_t	stream.c	91;"	d	file:
socklen_t	stream.c	/^typedef int socklen_t;$/;"	t	file:
sol	rtklib.h	/^    sol_t  sol;         \/* RTK solution *\/$/;"	m	struct:__anon93
sol_t	gps_common.h	/^} sol_t;$/;"	t	typeref:struct:__anon68
solbuf	rtklib.h	/^    sol_t solbuf[MAXSOLBUF]; \/* solution buffer *\/$/;"	m	struct:__anon98
solbuf_t	rtklib.h	/^} solbuf_t;$/;"	t	typeref:struct:__anon82
solopt	rtklib.h	/^    solopt_t solopt[2]; \/* output solution options {sol1,sol2} *\/$/;"	m	struct:__anon98
solopt_	options.c	/^static solopt_t solopt_;$/;"	v	file:
solopt_default	rtkcmn.c	/^const solopt_t solopt_default={ \/* defaults solution output options *\/$/;"	v
solopt_t	rtklib.h	/^} solopt_t;$/;"	t	typeref:struct:__anon89
solq_nmea	solution.c	/^static const int solq_nmea[]={  \/* nmea quality flags to rtklib sol quality *\/$/;"	v	file:
solstat	rtklib.h	/^    char solstat[MAXSTRPATH]; \/* solution statistics file *\/$/;"	m	struct:__anon90
solstat_t	rtklib.h	/^} solstat_t;$/;"	t	typeref:struct:__anon83
solstatbuf_t	rtklib.h	/^} solstatbuf_t;$/;"	t	typeref:struct:__anon84
solstatic	rtklib.h	/^    int solstatic;      \/* solution of static mode (0:all,1:single) *\/$/;"	m	struct:__anon89
soltocov	solution.c	/^static void soltocov(const sol_t *sol, double *P)$/;"	f	file:
soltype	gps_common.h	/^    int soltype;        \/* solution type (0:forward,1:backward,2:combined) *\/$/;"	m	struct:__anon67
solve	rtkcmn.c	/^extern int solve(const char *tr, const double *A, const double *Y, int n,$/;"	f
sort_solbuf	solution.c	/^static int sort_solbuf(solbuf_t *solbuf)$/;"	f	file:
sort_solstat	solution.c	/^static int sort_solstat(solstatbuf_t *statbuf)$/;"	f	file:
sortobs	rtkcmn.c	/^extern int sortobs(obs_t *obs)$/;"	f
speed	stream.c	/^    double speed;           \/* replay speed (time factor) *\/$/;"	m	struct:__anon2	file:
sqvar	solution.c	/^static double sqvar(double covar)$/;"	f	file:
ssat	rtklib.h	/^    ssat_t ssat[MAXSAT]; \/* satellite status *\/$/;"	m	struct:__anon93
ssat_t	gps_common.h	/^} ssat_t;$/;"	t	typeref:struct:__anon69
ssr	gps_common.h	/^    ssr_t ssr[MAXSAT];  \/* SSR corrections *\/$/;"	m	struct:__anon64
ssr	rtklib.h	/^    ssr_t ssr[MAXSAT];  \/* output of ssr corrections *\/$/;"	m	struct:__anon85
ssr_t	gps_common.h	/^} ssr_t;$/;"	t	typeref:struct:__anon61
ssrudint	rtcm3.c	/^static const double ssrudint[16]={$/;"	v	file:
ssrudint	rtcm3e.c	/^static const double ssrudint[16]={$/;"	v	file:
sstat	rtklib.h	/^    int sstat;          \/* solution statistics level (0:off,1:states,2:residuals) *\/$/;"	m	struct:__anon89
sta	rtklib.h	/^    sta_t  sta;         \/* station info *\/$/;"	m	struct:__anon86
sta	rtklib.h	/^    sta_t sta;          \/* station parameters *\/$/;"	m	struct:__anon85
sta	rtklib.h	/^    sta_t sta;          \/* station parameters *\/$/;"	m	struct:__anon94
sta_t	rtklib.h	/^} sta_t;$/;"	t	typeref:struct:__anon81
stah	rtklib.h	/^    int stah;           \/* station health *\/$/;"	m	struct:__anon85
staid	rtklib.h	/^    char staid [32];    \/* station id for rinex file name *\/$/;"	m	struct:__anon91
staid	rtklib.h	/^    int staid;          \/* station id *\/$/;"	m	struct:__anon85
stapos	rtklib.h	/^    char stapos [MAXSTRPATH]; \/* station positions file *\/$/;"	m	struct:__anon90
start	rtklib.h	/^    int start,end;      \/* start\/end index *\/$/;"	m	struct:__anon82
start	stream.c	/^    double start;           \/* start offset (s) *\/$/;"	m	struct:__anon2	file:
startfile	rcv/javad.c	/^static void startfile(raw_t *raw)$/;"	f	file:
stasel	rtklib.h	/^    int stasel;         \/* station info selection (0:remote,1:local) *\/$/;"	m	struct:__anon96
stat	gps_common.h	/^    unsigned char stat; \/* solution status (SOLQ_???) *\/$/;"	m	struct:__anon68
stat	rtklib.h	/^    unsigned char stat; \/* signal tracking status *\/$/;"	m	struct:__anon79
state	rtklib.h	/^    int state;          \/* server state (0:stop,1:running) *\/$/;"	m	struct:__anon97
state	rtklib.h	/^    int state;          \/* server state (0:stop,1:running) *\/$/;"	m	struct:__anon98
state	rtklib.h	/^    int state;          \/* state (-1:error,0:close,1:open) *\/$/;"	m	struct:__anon95
state	stream.c	/^    int state,wp,rp;        \/* state,write\/read pointer *\/$/;"	m	struct:__anon1	file:
state	stream.c	/^    int state;              \/* state (0:close,1:download,2:complete,3:error) *\/$/;"	m	struct:__anon7	file:
state	stream.c	/^    int state;              \/* state (0:close,1:wait,2:connect) *\/$/;"	m	struct:__anon3	file:
state	stream.c	/^    int state;              \/* state (0:close,1:wait,2:connect) *\/$/;"	m	struct:__anon6	file:
statefile	stream.c	/^static int statefile(file_t *file)$/;"	f	file:
stateftp	stream.c	/^static int stateftp(ftp_t *ftp)$/;"	f	file:
statentrip	stream.c	/^static int statentrip(ntrip_t *ntrip)$/;"	f	file:
stateserial	stream.c	/^static int stateserial(serial_t *serial)$/;"	f	file:
statetcpcli	stream.c	/^static int statetcpcli(tcpcli_t *tcpcli)$/;"	f	file:
statetcpsvr	stream.c	/^static int statetcpsvr(tcpsvr_t *tcpsvr)$/;"	f	file:
std	gps_common.h	/^    double std[3];      \/* initial-state std [0]bias,[1]iono [2]trop *\/$/;"	m	struct:__anon67
std	gps_common.h	/^    float  std[MAXSAT][1]; \/* satellite clock std (s) *\/$/;"	m	struct:__anon46
std	gps_common.h	/^    float  std[MAXSAT][4]; \/* satellite position\/clock std (m|s) *\/$/;"	m	struct:__anon45
stec	gps_common.h	/^    stec_t *stec;       \/* stec grid data *\/$/;"	m	struct:__anon64
stec_t	gps_common.h	/^} stec_t;$/;"	t	typeref:struct:__anon50
stecd_t	gps_common.h	/^} stecd_t;$/;"	t	typeref:struct:__anon49
str	stream.c	/^    char str[NTRIP_MAXSTR]; \/* mountpoint string for server *\/$/;"	m	struct:__anon6	file:
str2enum	options.c	/^static int str2enum(const char *str, const char *comment, int *val)$/;"	f	file:
str2num	rtkcmn.c	/^extern double str2num(const char *s, int i, int n)$/;"	f
str2opt	options.c	/^extern int str2opt(opt_t *opt, const char *str)$/;"	f
str2time	rtkcmn.c	/^extern int str2time(const char *s, int i, int n, gtime_t *t)$/;"	f
strclose	stream.c	/^extern void strclose(stream_t *stream)$/;"	f
strconv	streamsvr.c	/^static void strconv(stream_t *str, strconv_t *conv, unsigned char *buff, int n)$/;"	f	file:
strconv_t	rtklib.h	/^} strconv_t;$/;"	t	typeref:struct:__anon96
strconvfree	streamsvr.c	/^extern void strconvfree(strconv_t *conv)$/;"	f
strconvnew	streamsvr.c	/^extern strconv_t *strconvnew(int itype, int otype, const char *msgs, int staid,$/;"	f
stream	rtklib.h	/^    stream_t stream[16]; \/* input\/output streams *\/$/;"	m	struct:__anon97
stream	rtklib.h	/^    stream_t stream[8]; \/* streams {rov,base,corr,sol1,sol2,logr,logb,logc} *\/$/;"	m	struct:__anon98
stream_t	rtklib.h	/^} stream_t;$/;"	t	typeref:struct:__anon95
strgettime	stream.c	/^extern gtime_t strgettime(stream_t *stream)$/;"	f
strinit	stream.c	/^extern void strinit(stream_t *stream)$/;"	f
strinitcom	stream.c	/^extern void strinitcom(void)$/;"	f
strlock	stream.c	/^extern void strlock  (stream_t *stream) {lock  (&stream->lock);}$/;"	f
stropen	stream.c	/^extern int stropen(stream_t *stream, int type, int mode, const char *path)$/;"	f
strread	stream.c	/^extern int strread(stream_t *stream, unsigned char *buff, int n)$/;"	f
strsendcmd	stream.c	/^extern void strsendcmd(stream_t *str, const char *cmd)$/;"	f
strsendnmea	stream.c	/^extern void strsendnmea(stream_t *stream, const double *pos)$/;"	f
strsetdir	stream.c	/^extern void strsetdir(const char *dir)$/;"	f
strsetopt	stream.c	/^extern void strsetopt(const int *opt)$/;"	f
strsetproxy	stream.c	/^extern void strsetproxy(const char *addr)$/;"	f
strsettimeout	stream.c	/^extern void strsettimeout(stream_t *stream, int toinact, int tirecon)$/;"	f
strstat	stream.c	/^extern int strstat(stream_t *stream, char *msg)$/;"	f
strsum	stream.c	/^extern void strsum(stream_t *stream, int *inb, int *inr, int *outb, int *outr)$/;"	f
strsvr_t	rtklib.h	/^} strsvr_t;$/;"	t	typeref:struct:__anon97
strsvrinit	streamsvr.c	/^extern void strsvrinit(strsvr_t *svr, int nout)$/;"	f
strsvrpeek	streamsvr.c	/^extern int strsvrpeek(strsvr_t *svr, unsigned char *buff, int nmax)$/;"	f
strsvrstart	streamsvr.c	/^extern int strsvrstart(strsvr_t *svr, int *opts, int *strs, char **paths,$/;"	f
strsvrstat	streamsvr.c	/^extern void strsvrstat(strsvr_t *svr, int *stat, int *byte, int *bps, char *msg)$/;"	f
strsvrstop	streamsvr.c	/^extern void strsvrstop(strsvr_t *svr, const char *cmd)$/;"	f
strsvrthread	streamsvr.c	/^static DWORD WINAPI strsvrthread(void *arg)$/;"	f	file:
strsync	stream.c	/^extern void strsync(stream_t *stream1, stream_t *stream2)$/;"	f
strunlock	stream.c	/^extern void strunlock(stream_t *stream) {unlock(&stream->lock);}$/;"	f
strwrite	stream.c	/^extern int strwrite(stream_t *stream, unsigned char *buff, int n)$/;"	f
subfrm	rtklib.h	/^    unsigned char subfrm[MAXSAT][150];  \/* subframe buffer (1-5) *\/$/;"	m	struct:__anon94
sunmoonpos	rtkcmn.c	/^extern void sunmoonpos(gtime_t tutc, const double *erpv, double *rsun,$/;"	f
sunmoonpos_eci	rtkcmn.c	/^static void sunmoonpos_eci(gtime_t tut, double *rsun, double *rmoon)$/;"	f	file:
sva	gps_common.h	/^    int sva;            \/* SV accuracy (URA index) *\/$/;"	m	struct:__anon42
sva	gps_common.h	/^    int sva;            \/* SV accuracy (URA index) *\/$/;"	m	struct:__anon44
sva	gps_common.h	/^    int svh,sva,age;    \/* satellite health, accuracy, age of operation *\/$/;"	m	struct:__anon43
svconf	gps_common.h	/^    int svconf;         \/* as and sv config *\/$/;"	m	struct:__anon47
svh	gps_common.h	/^    int svh,sva,age;    \/* satellite health, accuracy, age of operation *\/$/;"	m	struct:__anon43
svh	gps_common.h	/^    int svh;            \/* SV health (0:ok) *\/$/;"	m	struct:__anon42
svh	gps_common.h	/^    int svh;            \/* SV health (0:ok) *\/$/;"	m	struct:__anon44
svh	gps_common.h	/^    int svh;            \/* sv health (0:ok) *\/$/;"	m	struct:__anon47
svr	stream.c	/^    tcp_t svr;              \/* tcp server control *\/$/;"	m	struct:__anon4	file:
svr	stream.c	/^    tcp_t svr;              \/* tcp server control *\/$/;"	m	struct:__anon5	file:
swapclose	stream.c	/^static void swapclose(file_t *file)$/;"	f	file:
swapfile	stream.c	/^static void swapfile(file_t *file, gtime_t time, char *msg)$/;"	f	file:
swapintv	stream.c	/^    double swapintv;        \/* swap interval (hr) (0: no swap) *\/$/;"	m	struct:__anon2	file:
sync_bnx	rcv/binex.c	/^static int sync_bnx(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_cres	rcv/crescent.c	/^static int sync_cres(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_javad	rcv/javad.c	/^static int sync_javad(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_lexr	rcv/rcvlex.c	/^static int sync_lexr(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_oem3	rcv/novatel.c	/^static int sync_oem3(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_oem4	rcv/novatel.c	/^static int sync_oem4(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_ss2	rcv/ss2.c	/^static int sync_ss2(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_stq	rcv/skytraq.c	/^static int sync_stq(unsigned char *buff, unsigned char data)$/;"	f	file:
sync_ubx	rcv/ublox.c	/^static int sync_ubx(unsigned char *buff, unsigned char data)$/;"	f	file:
syncfile	stream.c	/^static void syncfile(file_t *file1, file_t *file2)$/;"	f	file:
syncsol	gps_common.h	/^    int  syncsol;       \/* solution sync mode (0:off,1:on) *\/$/;"	m	struct:__anon67
sys	gps_common.h	/^    unsigned char sys;  \/* navigation system *\/$/;"	m	struct:__anon69
sys	rtklib.h	/^    int    sys;         \/* navigation system *\/$/;"	m	struct:__anon86
syscodes	rinex.c	/^static const char syscodes[]="GREJSC";  \/* satellite system codes *\/$/;"	v	file:
syscodes	rinex_s.c	/^static const char syscodes[]="GREJSC";  \/* satellite system codes *\/$/;"	v	file:
sysopts	options.c	/^opt_t sysopts[]={$/;"	v
sysopts2buff	options.c	/^static void sysopts2buff(void)$/;"	f	file:
t0	gps_common.h	/^    gtime_t t0;         \/* correction time *\/$/;"	m	struct:__anon55
t0	gps_common.h	/^    gtime_t t0;         \/* correction time *\/$/;"	m	struct:__anon58
t0	gps_common.h	/^    gtime_t t0;         \/* correction time *\/$/;"	m	struct:__anon60
t0	gps_common.h	/^    gtime_t t0;         \/* epoch time (GPST) *\/$/;"	m	struct:__anon63
t0	gps_common.h	/^    gtime_t t0;         \/* reference epoch time (GPST) *\/$/;"	m	struct:__anon44
t0	gps_common.h	/^    gtime_t t0;         \/* time of applicability (TOF) *\/$/;"	m	struct:__anon54
t0	gps_common.h	/^    gtime_t t0[5];      \/* epoch time (GPST) {eph,clk,hrclk,ura,bias} *\/$/;"	m	struct:__anon61
tact	rtklib.h	/^    unsigned int tick,tact; \/* tick\/active tick *\/$/;"	m	struct:__anon95
tact	stream.c	/^    unsigned int tact;      \/* data active tick *\/$/;"	m	struct:__anon3	file:
taun	gps_common.h	/^    double taun,gamn;   \/* SV clock bias (s)\/relative freq bias *\/$/;"	m	struct:__anon43
tbase	rtklib.h	/^    int tbase;          \/* time base (0:gpst,1:utc(usno),2:glonass,3:utc(su) *\/$/;"	m	struct:__anon94
tbl_CRC16	rtkcmn.c	/^static const unsigned short tbl_CRC16[]={$/;"	v	file:
tbl_CRC24Q	rtkcmn.c	/^static const unsigned int tbl_CRC24Q[]={$/;"	v	file:
tcon	stream.c	/^    int tcon;               \/* reconnect time (ms) (-1:never,0:now) *\/$/;"	m	struct:__anon3	file:
tcp	stream.c	/^    tcpcli_t *tcp;          \/* tcp client *\/$/;"	m	struct:__anon6	file:
tcp_t	stream.c	/^} tcp_t;$/;"	t	typeref:struct:__anon3	file:
tcpcli_t	stream.c	/^} tcpcli_t;$/;"	t	typeref:struct:__anon5	file:
tcpsvr_t	stream.c	/^} tcpsvr_t;$/;"	t	typeref:struct:__anon4	file:
tdis	stream.c	/^    unsigned int tdis;      \/* disconnect tick *\/$/;"	m	struct:__anon3	file:
te	gps_common.h	/^    gtime_t ts,te;      \/* valid time start and end *\/$/;"	m	struct:__anon53
te	rtklib.h	/^    gtime_t ts,te;      \/* time start\/end *\/$/;"	m	struct:__anon91
tec	gps_common.h	/^    tec_t *tec;         \/* tec grid data *\/$/;"	m	struct:__anon64
tec_t	gps_common.h	/^} tec_t;$/;"	t	typeref:struct:__anon48
tempdir	rtklib.h	/^    char tempdir[MAXSTRPATH]; \/* ftp\/http temporaly directory *\/$/;"	m	struct:__anon90
tend	rtklib.h	/^    gtime_t tend;       \/* last obs time *\/$/;"	m	struct:__anon91
test_file	download.c	/^static int test_file(const char *local)$/;"	f	file:
test_list	download.c	/^static int test_list(const path_t *path)$/;"	f	file:
test_local	download.c	/^static int test_local(gtime_t ts, gtime_t te, double ti, const char *path,$/;"	f	file:
test_locals	download.c	/^static int test_locals(gtime_t ts, gtime_t te, double ti, const url_t *url,$/;"	f	file:
test_staid	rtcm3.c	/^static int test_staid(rtcm_t *rtcm, int staid)$/;"	f	file:
testsnr	rtkcmn.c	/^extern int testsnr(int base, int freq, double el, double snr,$/;"	f
tgd	gps_common.h	/^    double tgd;         \/* TGD *\/$/;"	m	struct:__anon62
tgd	gps_common.h	/^    double tgd[4];      \/* group delay parameters *\/$/;"	m	struct:__anon42
thread	rtklib.h	/^    thread_t thread;    \/* server thread *\/$/;"	m	struct:__anon97
thread	rtklib.h	/^    thread_t thread;    \/* server thread *\/$/;"	m	struct:__anon98
thread	stream.c	/^    HANDLE thread;          \/* write thread *\/$/;"	m	struct:__anon1	file:
thread	stream.c	/^    thread_t thread;        \/* download thread *\/$/;"	m	struct:__anon7	file:
thread_t	rtklib.h	448;"	d
thread_t	rtklib.h	455;"	d
thresar	gps_common.h	/^    double thresar[4];  \/* AR validation threshold *\/$/;"	m	struct:__anon67
thresslip	gps_common.h	/^    double thresslip;   \/* slip threshold of geometry-free phase (m) *\/$/;"	m	struct:__anon67
tick	rtklib.h	/^    unsigned int tick,tact; \/* tick\/active tick *\/$/;"	m	struct:__anon95
tick	rtklib.h	/^    unsigned int tick;  \/* start tick *\/$/;"	m	struct:__anon97
tick	rtklib.h	/^    unsigned int tick;  \/* start tick *\/$/;"	m	struct:__anon98
tick	rtklib.h	/^    unsigned int tick[32]; \/* cycle tick of output message *\/$/;"	m	struct:__anon96
tick	stream.c	/^    unsigned int tick;      \/* start tick *\/$/;"	m	struct:__anon2	file:
tick_f	stream.c	/^    unsigned int tick_f;    \/* start tick in file *\/$/;"	m	struct:__anon2	file:
tick_master	stream.c	/^static unsigned int tick_master=0; \/* time tick master for replay *\/$/;"	v	file:
tick_trace	rtkcmn.c	/^static unsigned int tick_trace=0; \/* tick time at traceopen (ms) *\/$/;"	v	file:
tickget	rtkcmn.c	/^extern unsigned int tickget(void)$/;"	f
ticonnect	stream.c	/^static int ticonnect=10000; \/* interval to re-connect (ms) *\/$/;"	v	file:
tidecorr	gps_common.h	/^    int tidecorr;       \/* earth tide correction (0:off,1:solid,2:solid+otl+pole) *\/$/;"	m	struct:__anon67
time	gps_common.h	/^    gtime_t time;       \/* epoch time (GPST) *\/$/;"	m	struct:__anon48
time	gps_common.h	/^    gtime_t time;       \/* receiver sampling time (GPST) *\/$/;"	m	struct:__anon40
time	gps_common.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon45
time	gps_common.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon46
time	gps_common.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon49
time	gps_common.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon68
time	gps_common.h	/^    time_t time;        \/* time (s) expressed by standard time_t *\/$/;"	m	struct:__anon39
time	rtklib.h	/^    gtime_t time;       \/* current solution time *\/$/;"	m	struct:__anon82
time	rtklib.h	/^    gtime_t time;       \/* message time *\/$/;"	m	struct:__anon85
time	rtklib.h	/^    gtime_t time;       \/* message time *\/$/;"	m	struct:__anon86
time	rtklib.h	/^    gtime_t time;       \/* message time *\/$/;"	m	struct:__anon94
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon74
time	rtklib.h	/^    gtime_t time;       \/* time (GPST) *\/$/;"	m	struct:__anon83
time	stream.c	/^    gtime_t time;           \/* start time *\/$/;"	m	struct:__anon2	file:
time2bdt	rtkcmn.c	/^extern double time2bdt(gtime_t t, int *week)$/;"	f
time2doy	rtkcmn.c	/^extern double time2doy(gtime_t t)$/;"	f
time2epoch	rtkcmn.c	/^extern void time2epoch(gtime_t t, double *ep)$/;"	f
time2gpst	rtkcmn.c	/^extern double time2gpst(gtime_t t, int *week)$/;"	f
time2gst	rtkcmn.c	/^extern double time2gst(gtime_t t, int *week)$/;"	f
time2sec	rtkcmn.c	/^static double time2sec(gtime_t time, gtime_t *day)$/;"	f	file:
time2str	rtkcmn.c	/^extern void time2str(gtime_t t, char *s, int n)$/;"	f
time_s	rtcm3.c	/^    unsigned char time_s;           \/* cumulative session transmitting time *\/$/;"	m	struct:__anon70	file:
time_s	rtklib.h	/^    gtime_t time_s;     \/* message start time *\/$/;"	m	struct:__anon85
time_str	rtkcmn.c	/^extern char *time_str(gtime_t t, int n)$/;"	f
timeadd	rtkcmn.c	/^extern gtime_t timeadd(gtime_t t, double sec)$/;"	f
timediff	rtkcmn.c	/^extern double timediff(gtime_t t1, gtime_t t2)$/;"	f
timef	rtklib.h	/^    int timef;          \/* time format (0:sssss.s,1:yyyy\/mm\/dd hh:mm:ss.s) *\/$/;"	m	struct:__anon89
timeget	rtkcmn.c	/^extern gtime_t timeget(void)$/;"	f
timeoffset_	rtkcmn.c	/^static double timeoffset_=0.0;        \/* time offset (s) *\/$/;"	v	file:
times	rtklib.h	/^    int times;          \/* time system (TIMES_???) *\/$/;"	m	struct:__anon89
timeset	rtkcmn.c	/^extern void timeset(gtime_t t)$/;"	f
timestr_rnx	rinex.c	/^static void timestr_rnx(char *str)$/;"	f	file:
timestr_rnx	rinex_s.c	/^static void timestr_rnx(char *str)$/;"	f	file:
timetag	stream.c	/^    int timetag;            \/* time tag flag (0:off,1:on) *\/$/;"	m	struct:__anon2	file:
timeu	rtklib.h	/^    int timeu;          \/* time digits under decimal point *\/$/;"	m	struct:__anon89
tint	rtklib.h	/^    double tint;        \/* time interval (s) *\/$/;"	m	struct:__anon87
tint	rtklib.h	/^    double tint;        \/* time interval (s) *\/$/;"	m	struct:__anon91
tint	rtklib.h	/^    double tint[32];    \/* output message intervals (s) *\/$/;"	m	struct:__anon96
tint_s	rtcm3.c	/^    unsigned char tint_s;           \/* soothing interval *\/$/;"	m	struct:__anon70	file:
tirate	stream.c	/^static int tirate   =1000;  \/* avraging time for data rate (ms) *\/$/;"	v	file:
tirecon	stream.c	/^    int tirecon;            \/* reconnect interval (ms) (0:no reconnect) *\/$/;"	m	struct:__anon5	file:
tlat	gps_common.h	/^    int tlat;           \/* system latency (s) *\/$/;"	m	struct:__anon57
tle_name_read	tle.c	/^extern int tle_name_read(const char *file, tle_t *tle)$/;"	f
tle_pos	tle.c	/^extern int tle_pos(gtime_t time, const char *name, const char *satno,$/;"	f
tle_read	tle.c	/^extern int tle_read(const char *file, tle_t *tle)$/;"	f
tle_t	rtklib.h	/^} tle_t;$/;"	t	typeref:struct:__anon73
tled_t	rtklib.h	/^} tled_t;$/;"	t	typeref:struct:__anon72
tnext	stream.c	/^    gtime_t tnext;          \/* next retry time (gpst) *\/$/;"	m	struct:__anon7	file:
to_code1_glo	rtcm3e.c	/^static int to_code1_glo(unsigned char code)$/;"	f	file:
to_code1_gps	rtcm3e.c	/^static int to_code1_gps(unsigned char code)$/;"	f	file:
to_code2_glo	rtcm3e.c	/^static int to_code2_glo(unsigned char code)$/;"	f	file:
to_code2_gps	rtcm3e.c	/^static int to_code2_gps(unsigned char code)$/;"	f	file:
to_lock	rtcm3e.c	/^static int to_lock(int lock)$/;"	f	file:
to_msm_lock	rtcm3e.c	/^static int to_msm_lock(int lock)$/;"	f	file:
to_msm_lock_ex	rtcm3e.c	/^static int to_msm_lock_ex(int lock)$/;"	f	file:
to_satid	rtcm3e.c	/^static int to_satid(int sys, int sat)$/;"	f	file:
to_sigid	rtcm3e.c	/^static int to_sigid(int sys, unsigned char code, int *freq)$/;"	f	file:
toa	gps_common.h	/^    gtime_t toa;        \/* Toa *\/$/;"	m	struct:__anon47
toas	gps_common.h	/^    double toas;        \/* Toa (s) in week *\/$/;"	m	struct:__anon47
tobs	rtklib.h	/^    char   tobs[6][MAXOBSTYPE][4]; \/* rinex obs types *\/$/;"	m	struct:__anon86
tobs	rtklib.h	/^    char tobs[6][MAXOBSTYPE][4]; \/* obs types {GPS,GLO,GAL,QZS,SBS,CMP} *\/$/;"	m	struct:__anon91
tobs	rtklib.h	/^    gtime_t tobs;       \/* observation data time *\/$/;"	m	struct:__anon94
toc	gps_common.h	/^    gtime_t toe,toc,ttr; \/* Toe,Toc,T_trans *\/$/;"	m	struct:__anon42
tod	rtklib.h	/^    int tod;            \/* time of day (ms) *\/$/;"	m	struct:__anon94
toe	gps_common.h	/^    gtime_t toe,toc,ttr; \/* Toe,Toc,T_trans *\/$/;"	m	struct:__anon42
toe	gps_common.h	/^    gtime_t toe;        \/* epoch of epherides (gpst) *\/$/;"	m	struct:__anon43
toe	gps_common.h	/^    gtime_t toe;        \/* epoch time (GPST) *\/$/;"	m	struct:__anon62
toes	gps_common.h	/^    double toes;        \/* Toe (s) in week *\/$/;"	m	struct:__anon42
tof	gps_common.h	/^    gtime_t tof;        \/* message frame time (GPST) *\/$/;"	m	struct:__anon62
tof	gps_common.h	/^    gtime_t tof;        \/* message frame time (gpst) *\/$/;"	m	struct:__anon43
tof	gps_common.h	/^    gtime_t tof;        \/* time of message frame (GPST) *\/$/;"	m	struct:__anon44
tofreq	rcv/javad.c	/^static int tofreq(char sig, int sys, int *type)$/;"	f	file:
toinact	stream.c	/^    int toinact;            \/* inactive timeout (ms) (0:no timeout) *\/$/;"	m	struct:__anon5	file:
toinact	stream.c	/^static int toinact  =10000; \/* inactive timeout (ms) *\/$/;"	v	file:
tokyo2jgd	datum.c	/^extern int tokyo2jgd(double *pos)$/;"	f
tonum	solution.c	/^static int tonum(char *buff, const char *sep, double *v)$/;"	f	file:
topts	stream.c	/^    int topts[4];           \/* time options {poff,tint,toff,tretry} (s) *\/$/;"	m	struct:__anon7	file:
tow	rtklib.h	/^    int week,tow;       \/* receiption time *\/$/;"	m	struct:__anon76
tprm_t	datum.c	/^} tprm_t;$/;"	t	typeref:struct:__anon103	file:
trace	rtkcmn.c	/^extern void trace   (int level, const char *format, ...) {}$/;"	f
trace	rtkcmn.c	/^extern void trace(int level, const char *format, ...)$/;"	f
trace	rtklib.h	/^    char trace  [MAXSTRPATH]; \/* debug trace file *\/$/;"	m	struct:__anon90
trace	rtklib.h	/^    int trace;          \/* debug trace level (0:off,1-5:debug) *\/$/;"	m	struct:__anon89
traceb	rtkcmn.c	/^extern void traceb  (int level, const unsigned char *p, int n) {}$/;"	f
traceb	rtkcmn.c	/^extern void traceb(int level, const unsigned char *p, int n)$/;"	f
traceclose	rtkcmn.c	/^extern void traceclose(void) {}$/;"	f
traceclose	rtkcmn.c	/^extern void traceclose(void)$/;"	f
tracegnav	rtkcmn.c	/^extern void tracegnav(int level, const nav_t *nav) {}$/;"	f
tracegnav	rtkcmn.c	/^extern void tracegnav(int level, const nav_t *nav)$/;"	f
tracehnav	rtkcmn.c	/^extern void tracehnav(int level, const nav_t *nav) {}$/;"	f
tracehnav	rtkcmn.c	/^extern void tracehnav(int level, const nav_t *nav)$/;"	f
tracelevel	rtkcmn.c	/^extern void tracelevel(int level) {}$/;"	f
tracelevel	rtkcmn.c	/^extern void tracelevel(int level)$/;"	f
tracemat	rtkcmn.c	/^extern void tracemat(int level, const double *A, int n, int m, int p, int q) {}$/;"	f
tracemat	rtkcmn.c	/^extern void tracemat(int level, const double *A, int n, int m, int p, int q)$/;"	f
tracenav	rtkcmn.c	/^extern void tracenav(int level, const nav_t *nav) {}$/;"	f
tracenav	rtkcmn.c	/^extern void tracenav(int level, const nav_t *nav)$/;"	f
traceobs	rtkcmn.c	/^extern void traceobs(int level, const obsd_t *obs, int n) {}$/;"	f
traceobs	rtkcmn.c	/^extern void traceobs(int level, const obsd_t *obs, int n)$/;"	f
traceopen	rtkcmn.c	/^extern void traceopen(const char *file) {}$/;"	f
traceopen	rtkcmn.c	/^extern void traceopen(const char *file)$/;"	f
tracepclk	rtkcmn.c	/^extern void tracepclk(int level, const nav_t *nav) {}$/;"	f
tracepclk	rtkcmn.c	/^extern void tracepclk(int level, const nav_t *nav)$/;"	f
tracepeph	rtkcmn.c	/^extern void tracepeph(int level, const nav_t *nav) {}$/;"	f
tracepeph	rtkcmn.c	/^extern void tracepeph(int level, const nav_t *nav)$/;"	f
tracet	rtkcmn.c	/^extern void tracet  (int level, const char *format, ...) {}$/;"	f
tracet	rtkcmn.c	/^extern void tracet(int level, const char *format, ...)$/;"	f
tropmapf	rtkcmn.c	/^extern double tropmapf(gtime_t time, const double pos[], const double azel[],$/;"	f
tropmodel	rtkcmn.c	/^extern double tropmodel(gtime_t time, const double *pos, const double *azel,$/;"	f
tropopt	gps_common.h	/^    int tropopt;        \/* troposphere option (TROPOPT_???) *\/$/;"	m	struct:__anon67
trtcm	rtklib.h	/^    gtime_t trtcm;      \/* approx log start time for rtcm *\/$/;"	m	struct:__anon91
ts	gps_common.h	/^    gtime_t ts,te;      \/* valid time start and end *\/$/;"	m	struct:__anon53
ts	rtklib.h	/^    gtime_t ts,te;      \/* time start\/end *\/$/;"	m	struct:__anon91
tspan	gps_common.h	/^    double tspan;       \/* valid time span (s) *\/$/;"	m	struct:__anon63
tstart	rtklib.h	/^    gtime_t tstart;     \/* first obs time *\/$/;"	m	struct:__anon91
tsys	rtklib.h	/^    int    tsys;        \/* time system *\/$/;"	m	struct:__anon86
tt	rtklib.h	/^    double tt;          \/* time difference between current and previous (s) *\/$/;"	m	struct:__anon93
ttr	gps_common.h	/^    gtime_t toe,toc,ttr; \/* Toe,Toc,T_trans *\/$/;"	m	struct:__anon42
ttt	rtklib.h	/^    unsigned int ttt;   \/* tracking time (ms) *\/$/;"	m	struct:__anon79
tunit	rtklib.h	/^    double tunit;       \/* time unit for multiple-session (s) *\/$/;"	m	struct:__anon91
type	gps_common.h	/^    char type[MAXANT];  \/* antenna type *\/$/;"	m	struct:__anon53
type	gps_common.h	/^    unsigned char type; \/* type (0:xyz-ecef,1:enu-baseline) *\/$/;"	m	struct:__anon68
type	rinex.c	/^    unsigned char type[MAXOBSTYPE];     \/* type (0:C,1:L,2:D,3:S) *\/$/;"	m	struct:__anon99	file:
type	rinex_s.c	/^    unsigned char type[MAXOBSTYPE];     \/* type (0:C,1:L,2:D,3:S) *\/$/;"	m	struct:__anon102	file:
type	rtklib.h	/^    char   type;        \/* rinex file type ('O','N',...) *\/$/;"	m	struct:__anon86
type	rtklib.h	/^    char type[32];      \/* data type *\/$/;"	m	struct:__anon87
type	rtklib.h	/^    int type;           \/* message type *\/$/;"	m	struct:__anon79
type	rtklib.h	/^    int type;           \/* type (STR_???) *\/$/;"	m	struct:__anon95
type	stream.c	/^    int type;               \/* type (0:server,1:client) *\/$/;"	m	struct:__anon6	file:
udi	gps_common.h	/^    double udi[5];      \/* SSR update interval (s) *\/$/;"	m	struct:__anon61
udre	gps_common.h	/^    double udre;        \/* UDRE *\/$/;"	m	struct:__anon60
udre	gps_common.h	/^    short udre;         \/* UDRE+1 *\/$/;"	m	struct:__anon54
uncompress	rtkcmn.c	/^extern int uncompress(const char *file, char *uncfile)$/;"	f
uniqeph	rtkcmn.c	/^static void uniqeph(nav_t *nav)$/;"	f	file:
uniqgeph	rtkcmn.c	/^static void uniqgeph(nav_t *nav)$/;"	f	file:
uniqnav	rtkcmn.c	/^extern void uniqnav(nav_t *nav)$/;"	f
uniqseph	rtkcmn.c	/^static void uniqseph(nav_t *nav)$/;"	f	file:
unlock	rtklib.h	452;"	d
unlock	rtklib.h	459;"	d
update	gps_common.h	/^    unsigned char update; \/* update flag (0:no update,1:update) *\/$/;"	m	struct:__anon61
updatetcpsvr	stream.c	/^static void updatetcpsvr(tcpsvr_t *tcpsvr, char *msg)$/;"	f	file:
ura	gps_common.h	/^    int ura;            \/* URA indicator *\/$/;"	m	struct:__anon61
ura	gps_common.h	/^    unsigned char ura;  \/* URA index *\/$/;"	m	struct:__anon62
ura_eph	rcv/binex.c	/^static const double ura_eph[]={$/;"	v	file:
ura_eph	rcv/nvs.c	/^static const double ura_eph[]={$/;"	v	file:
ura_eph	rinex.c	/^static const double ura_eph[]={         \/* ura values (ref [3] 20.3.3.3.1.1) *\/$/;"	v	file:
ura_eph	rinex_s.c	/^static const double ura_eph[]={         \/* ura values (ref [3] 20.3.3.3.1.1) *\/$/;"	v	file:
uraindex	rcv/binex.c	/^static int uraindex(double value)$/;"	f	file:
uraindex	rcv/nvs.c	/^static int uraindex(double value)$/;"	f	file:
uraindex	rinex.c	/^static int uraindex(double value)$/;"	f	file:
uraindex	rinex_s.c	/^static int uraindex(double value)$/;"	f	file:
uravalue	rinex.c	/^static double uravalue(int sva)$/;"	f	file:
uravalue	rinex_s.c	/^static double uravalue(int sva)$/;"	f	file:
url	stream.c	/^    char url[256];          \/* url for proxy *\/$/;"	m	struct:__anon6	file:
url_t	rtklib.h	/^} url_t;$/;"	t	typeref:struct:__anon87
user	stream.c	/^    char user[256];         \/* user *\/$/;"	m	struct:__anon6	file:
user	stream.c	/^    char user[256];         \/* user for ftp *\/$/;"	m	struct:__anon7	file:
ut1_utc	gps_common.h	/^    double ut1_utc;     \/* ut1-utc (s) *\/$/;"	m	struct:__anon51
utc2gmst	rtkcmn.c	/^extern double utc2gmst(gtime_t t, double ut1_utc)$/;"	f
utc2gpst	rtkcmn.c	/^extern gtime_t utc2gpst(gtime_t t)$/;"	f
utc_cmp	gps_common.h	/^    double utc_cmp[4];  \/* BeiDou UTC parameters *\/$/;"	m	struct:__anon64
utc_gal	gps_common.h	/^    double utc_gal[4];  \/* Galileo UTC GPS time parameters *\/$/;"	m	struct:__anon64
utc_glo	gps_common.h	/^    double utc_glo[4];  \/* GLONASS UTC GPS time parameters *\/$/;"	m	struct:__anon64
utc_gps	gps_common.h	/^    double utc_gps[4];  \/* GPS delta-UTC parameters {A0,A1,T,W} *\/$/;"	m	struct:__anon64
utc_qzs	gps_common.h	/^    double utc_qzs[4];  \/* QZS UTC GPS time parameters *\/$/;"	m	struct:__anon64
utc_sbs	gps_common.h	/^    double utc_sbs[4];  \/* SBAS UTC parameters *\/$/;"	m	struct:__anon64
var	gps_common.h	/^    double var[NFREQ][19]; \/* phase center variation (m) *\/$/;"	m	struct:__anon53
var	rtklib.h	/^    void *var;          \/* pointer to option variable *\/$/;"	m	struct:__anon88
var_uraeph	ephemeris.c	/^static double var_uraeph(int ura)$/;"	f	file:
var_urassr	ephemeris.c	/^static double var_urassr(int ura)$/;"	f	file:
vareph	qzslex.c	/^static double vareph(int ura)$/;"	f	file:
varfcorr	sbas.c	/^static double varfcorr(int udre)$/;"	f	file:
varicorr	sbas.c	/^static double varicorr(int give)$/;"	f	file:
vel	gps_common.h	/^    double vel[3];      \/* satellite velocity (ecef) (m\/s) *\/$/;"	m	struct:__anon43
vel	gps_common.h	/^    double vel[3];      \/* satellite velocity (m\/s) (ecef) *\/$/;"	m	struct:__anon44
vel	gps_common.h	/^    double vel[3];      \/* satellite velocity (m\/s) *\/$/;"	m	struct:__anon62
ver	rtklib.h	/^    double ver;         \/* rinex version *\/$/;"	m	struct:__anon86
vs	gps_common.h	/^    unsigned char vs;   \/* valid satellite flag single *\/$/;"	m	struct:__anon69
vsat	gps_common.h	/^    unsigned char vsat[NFREQ]; \/* valid satellite flag *\/$/;"	m	struct:__anon69
waitntrip	stream.c	/^static int waitntrip(ntrip_t *ntrip, char *msg)$/;"	f	file:
waittcpcli	stream.c	/^static int waittcpcli(tcpcli_t *tcpcli, char *msg)$/;"	f	file:
waittcpsvr	stream.c	/^static int waittcpsvr(tcpsvr_t *tcpsvr, char *msg)$/;"	f	file:
week	gps_common.h	/^    int week;           \/* GPS\/QZS: gps week, GAL: galileo week *\/$/;"	m	struct:__anon42
week	gps_common.h	/^    int week;           \/* GPS\/QZS: gps week, GAL: galileo week *\/$/;"	m	struct:__anon47
week	rtklib.h	/^    int week,tow;       \/* receiption time *\/$/;"	m	struct:__anon76
windupcorr	rtkcmn.c	/^extern void windupcorr(gtime_t time, const double *rs, const double *rr,$/;"	f
wlbias	gps_common.h	/^    double wlbias[MAXSAT];     \/* wide-lane bias (cycle) *\/$/;"	m	struct:__anon64
word	rtklib.h	/^    unsigned int word;  \/* word buffer for rtcm 2 *\/$/;"	m	struct:__anon85
wp	stream.c	/^    int state,wp,rp;        \/* state,write\/read pointer *\/$/;"	m	struct:__anon1	file:
write_nav	streamsvr.c	/^static void write_nav(gtime_t time, stream_t *str, strconv_t *conv)$/;"	f	file:
write_nav_cycle	streamsvr.c	/^static void write_nav_cycle(stream_t *str, strconv_t *conv)$/;"	f	file:
write_obs	streamsvr.c	/^static void write_obs(gtime_t time, stream_t *str, strconv_t *conv)$/;"	f	file:
write_sta_cycle	streamsvr.c	/^static void write_sta_cycle(stream_t *str, strconv_t *conv)$/;"	f	file:
writefile	stream.c	/^static int writefile(file_t *file, unsigned char *buff, int n, char *msg)$/;"	f	file:
writentrip	stream.c	/^static int writentrip(ntrip_t *ntrip, unsigned char *buff, int n, char *msg)$/;"	f	file:
writeserial	stream.c	/^static int writeserial(serial_t *serial, unsigned char *buff, int n, char *msg)$/;"	f	file:
writeseribuff	stream.c	/^static int writeseribuff(serial_t *serial, unsigned char *buff, int n)$/;"	f	file:
writetcpcli	stream.c	/^static int writetcpcli(tcpcli_t *tcpcli, unsigned char *buff, int n, char *msg)$/;"	f	file:
writetcpsvr	stream.c	/^static int writetcpsvr(tcpsvr_t *tcpsvr, unsigned char *buff, int n, char *msg)$/;"	f	file:
wtime	stream.c	/^    gtime_t wtime;          \/* write time *\/$/;"	m	struct:__anon2	file:
x	rtklib.h	/^    double *x, *P;      \/* float states and their covariance *\/$/;"	m	struct:__anon93
x	rtklib.h	/^    short x;            \/* longitude\/latitude (deg) *\/$/;"	m	struct:__anon78
x1	sbas.c	/^x1[]={-75,-65,-55,-50,-45,-40,-35,-30,-25,-20,-15,-10,- 5,  0,  5, 10, 15, 20,$/;"	v	file:
x2	sbas.c	/^x2[]={-55,-50,-45,-40,-35,-30,-25,-20,-15,-10, -5,  0,  5, 10, 15, 20, 25, 30,$/;"	v	file:
x3	sbas.c	/^x3[]={-75,-65,-55,-50,-45,-40,-35,-30,-25,-20,-15,-10,- 5,  0,  5, 10, 15, 20,$/;"	v	file:
x4	sbas.c	/^x4[]={-85,-75,-65,-55,-50,-45,-40,-35,-30,-25,-20,-15,-10,- 5,  0,  5, 10, 15,$/;"	v	file:
x5	sbas.c	/^x5[]={-180,-175,-170,-165,-160,-155,-150,-145,-140,-135,-130,-125,-120,-115,$/;"	v	file:
x6	sbas.c	/^x6[]={-180,-170,-160,-150,-140,-130,-120,-110,-100,- 90,- 80,- 70,- 60,- 50,$/;"	v	file:
x7	sbas.c	/^x7[]={-180,-150,-120,- 90,- 60,- 30,   0,  30,  60,  90, 120, 150},$/;"	v	file:
x8	sbas.c	/^x8[]={-170,-140,-110,- 80,- 50,- 20,  10,  40,  70, 100, 130, 160};$/;"	v	file:
xa	rtklib.h	/^    double *xa,*Pa;     \/* fixed states and their covariance *\/$/;"	m	struct:__anon93
xp	gps_common.h	/^    double xp,yp;       \/* pole offset (rad) *\/$/;"	m	struct:__anon51
xpr	gps_common.h	/^    double xpr,ypr;     \/* pole offset rate (rad\/day) *\/$/;"	m	struct:__anon51
xyz2enu	rtkcmn.c	/^extern void xyz2enu(const double *pos, double *E)$/;"	f
y	rtklib.h	/^    const short *y;     \/* latitudes\/longitudes (deg) *\/$/;"	m	struct:__anon78
yp	gps_common.h	/^    double xp,yp;       \/* pole offset (rad) *\/$/;"	m	struct:__anon51
ypr	gps_common.h	/^    double xpr,ypr;     \/* pole offset rate (rad\/day) *\/$/;"	m	struct:__anon51
zeros	rtkcmn.c	/^extern double *zeros(int n, int m)$/;"	f
zwd	rtklib.h	/^    float zwd;          \/* zenith wet delay (m) *\/$/;"	m	struct:__anon74
zwd_t	rtklib.h	/^} zwd_t;$/;"	t	typeref:struct:__anon75
zwdd_t	rtklib.h	/^} zwdd_t;$/;"	t	typeref:struct:__anon74
